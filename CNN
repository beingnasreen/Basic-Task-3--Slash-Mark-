{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1oWUm6fRoCTD88xBopN096olJ8Kuy3BEv","timestamp":1709724795164}],"authorship_tag":"ABX9TyMYzPPWt32VWWRG8nDRSpEK"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zANnCLueDBc1","executionInfo":{"status":"ok","timestamp":1709555295930,"user_tz":-330,"elapsed":1090,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"b4803f3f-8b87-4688-c4a7-7a7f6578b0c4"},"outputs":[{"output_type":"stream","name":"stdout","text":["   Unnamed: 0  count  hate_speech  offensive_language  neither  class  \\\n","0           0      3            0                   0        3      2   \n","1           1      3            0                   3        0      1   \n","2           2      3            0                   3        0      1   \n","3           3      3            0                   2        1      1   \n","4           4      6            0                   6        0      1   \n","\n","                                               tweet  \n","0  !!! RT @mayasolovely: As a woman you shouldn't...  \n","1  !!!!! RT @mleew17: boy dats cold...tyga dwn ba...  \n","2  !!!!!!! RT @UrKindOfBrand Dawg!!!! RT @80sbaby...  \n","3  !!!!!!!!! RT @C_G_Anderson: @viva_based she lo...  \n","4  !!!!!!!!!!!!! RT @ShenikaRoberts: The shit you...  \n"]}],"source":["import pandas as pd\n","\n","\n","\n","\n","\n","df = pd.read_csv('/content/labeled_data.csv')\n","\n","\n","print(df.head())\n"]},{"cell_type":"code","source":["row_count = len(df)\n","\n","print(\"Number of rows:\", row_count)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"alL3dZDKQdXU","executionInfo":{"status":"ok","timestamp":1709555300047,"user_tz":-330,"elapsed":407,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"536c92d3-a63b-4cc0-95f6-f86e25d25203"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of rows: 24783\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","\n","# Load the da\n","\n","# Count the occurrences of each classification\n","classification_counts = df[''].value_counts()\n","\n","print(classification_counts)\n"],"metadata":{"id":"3P_DlGjmb8by"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","\n","# Assuming your data is in a CSV file\n","\n","\n","# Remove the 'Unnamed: 0' column\n","df = df.drop(['Unnamed: 0','count'] ,axis=1)\n","\n","\n","\n","\n","\n","\n"],"metadata":{"id":"J070EXQvQmQZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":293},"id":"T028c223T1IG","executionInfo":{"status":"ok","timestamp":1709453225759,"user_tz":-330,"elapsed":891,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"04902525-79ba-49ab-e15a-53640b8f5bff"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   hate_speech  offensive_language  neither  class  \\\n","0            0                   0        3      2   \n","1            0                   3        0      1   \n","2            0                   3        0      1   \n","3            0                   2        1      1   \n","4            0                   6        0      1   \n","\n","                                               tweet  \n","0  !!! RT @mayasolovely: As a woman you shouldn't...  \n","1  !!!!! RT @mleew17: boy dats cold...tyga dwn ba...  \n","2  !!!!!!! RT @UrKindOfBrand Dawg!!!! RT @80sbaby...  \n","3  !!!!!!!!! RT @C_G_Anderson: @viva_based she lo...  \n","4  !!!!!!!!!!!!! RT @ShenikaRoberts: The shit you...  "],"text/html":["\n","  <div id=\"df-efc469fa-14a4-42b1-a553-3cd0866ddede\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>hate_speech</th>\n","      <th>offensive_language</th>\n","      <th>neither</th>\n","      <th>class</th>\n","      <th>tweet</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>!!! RT @mayasolovely: As a woman you shouldn't...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>!!!!! RT @mleew17: boy dats cold...tyga dwn ba...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>!!!!!!! RT @UrKindOfBrand Dawg!!!! RT @80sbaby...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>!!!!!!!!! RT @C_G_Anderson: @viva_based she lo...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>!!!!!!!!!!!!! RT @ShenikaRoberts: The shit you...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-efc469fa-14a4-42b1-a553-3cd0866ddede')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-efc469fa-14a4-42b1-a553-3cd0866ddede button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-efc469fa-14a4-42b1-a553-3cd0866ddede');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9210f02b-3a6a-470b-b489-17191a3a1de4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9210f02b-3a6a-470b-b489-17191a3a1de4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9210f02b-3a6a-470b-b489-17191a3a1de4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 24783,\n  \"fields\": [\n    {\n      \"column\": \"hate_speech\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 7,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1,\n          6,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"offensive_language\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 9,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          8,\n          3,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"neither\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 9,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          8,\n          0,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"class\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2,\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tweet\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 24783,\n        \"samples\": [\n          \"934 8616\\ni got a missed call from yo bitch\",\n          \"RT @KINGTUNCHI_: Fucking with a bad bitch you gone need some money lil homie!\",\n          \"RT @eanahS__: @1inkkofrosess lol my credit ain't no where near good , but I know the right man for the job .. that ho nice though!\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["df = df.drop('class' ,axis=1)\n"],"metadata":{"id":"m_sxazRST4JO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":293},"id":"SI0RRy8QUnfx","executionInfo":{"status":"ok","timestamp":1709453229868,"user_tz":-330,"elapsed":633,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"f873c06c-cc6b-451a-9801-4eaeb052cb43"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   hate_speech  offensive_language  neither  \\\n","0            0                   0        3   \n","1            0                   3        0   \n","2            0                   3        0   \n","3            0                   2        1   \n","4            0                   6        0   \n","\n","                                               tweet  \n","0  !!! RT @mayasolovely: As a woman you shouldn't...  \n","1  !!!!! RT @mleew17: boy dats cold...tyga dwn ba...  \n","2  !!!!!!! RT @UrKindOfBrand Dawg!!!! RT @80sbaby...  \n","3  !!!!!!!!! RT @C_G_Anderson: @viva_based she lo...  \n","4  !!!!!!!!!!!!! RT @ShenikaRoberts: The shit you...  "],"text/html":["\n","  <div id=\"df-6d79e627-9366-432b-bf3b-d42b8cdc6046\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>hate_speech</th>\n","      <th>offensive_language</th>\n","      <th>neither</th>\n","      <th>tweet</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>!!! RT @mayasolovely: As a woman you shouldn't...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>!!!!! RT @mleew17: boy dats cold...tyga dwn ba...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>!!!!!!! RT @UrKindOfBrand Dawg!!!! RT @80sbaby...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>!!!!!!!!! RT @C_G_Anderson: @viva_based she lo...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>!!!!!!!!!!!!! RT @ShenikaRoberts: The shit you...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6d79e627-9366-432b-bf3b-d42b8cdc6046')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6d79e627-9366-432b-bf3b-d42b8cdc6046 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6d79e627-9366-432b-bf3b-d42b8cdc6046');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ad8b1810-3492-428e-8c94-808dff31e2e2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ad8b1810-3492-428e-8c94-808dff31e2e2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ad8b1810-3492-428e-8c94-808dff31e2e2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 24783,\n  \"fields\": [\n    {\n      \"column\": \"hate_speech\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 7,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1,\n          6,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"offensive_language\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 9,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          8,\n          3,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"neither\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 9,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          8,\n          0,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tweet\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 24783,\n        \"samples\": [\n          \"934 8616\\ni got a missed call from yo bitch\",\n          \"RT @KINGTUNCHI_: Fucking with a bad bitch you gone need some money lil homie!\",\n          \"RT @eanahS__: @1inkkofrosess lol my credit ain't no where near good , but I know the right man for the job .. that ho nice though!\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["df = df[~((df['hate_speech'] == 0) & (df['offensive_language'] == 0) & (df['neither'] == 0))]"],"metadata":{"id":"hn6EiKvpVBSB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","\n","\n","\n","\n","\n","df= df.dropna()\n","\n","# Alternatively, to remove rows where specific columns have missing values\n","# Replace 'column_name' with the name of your column\n","df= df.dropna(subset=['tweet'])\n","\n","\n","\n"],"metadata":{"id":"W0HA7uH7VEAC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(df.info())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SgoSFTo_VXvY","executionInfo":{"status":"ok","timestamp":1709453240017,"user_tz":-330,"elapsed":3,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"64242fc1-a973-4bf4-db41-3d08a3e88409"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 24783 entries, 0 to 24782\n","Data columns (total 4 columns):\n"," #   Column              Non-Null Count  Dtype \n","---  ------              --------------  ----- \n"," 0   hate_speech         24783 non-null  int64 \n"," 1   offensive_language  24783 non-null  int64 \n"," 2   neither             24783 non-null  int64 \n"," 3   tweet               24783 non-null  object\n","dtypes: int64(3), object(1)\n","memory usage: 968.1+ KB\n","None\n"]}]},{"cell_type":"code","source":["df = df.rename(columns={'tweet': 'text'})\n"],"metadata":{"id":"zSSJ1WxfVfT1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","\n","\n","\n","\n","# Function to keep only the highest value and set others to 0\n","def keep_highest(row):\n","    columns = ['hate_speech', 'offensive_language', 'neither']\n","    max_val = row[columns].max()\n","    for col in columns:\n","                    if row[col] != max_val:\n","                                row[col] = 0\n","    return row\n","\n","                                    # Apply the function to each row\n","df = df.apply(keep_highest, axis=1)\n","\n","                                    # Optionally, save the modified DataFrame back to a CSV file\n","df.to_csv('modified_file.csv', index=False)\n"],"metadata":{"id":"F0TaqcIzYqV4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def more_than_one_greater_than_zero(row):\n","      columns = ['hate_speech', 'offensive_language', 'neither']\n","      return sum(row[col] > 0 for col in columns) > 1\n","\n","          # Apply the function to create a new boolean column\n","df['more_than_one_gt_zero'] = df.apply(more_than_one_greater_than_zero, axis=1)\n","\n","          # Filter to get only rows where more than one column is greater than 0\n","rows_with_more_than_one_gt_zero = df[df['more_than_one_gt_zero']]\n","\n","          # Display these rows\n","print(rows_with_more_than_one_gt_zero)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CJtyo8K4Y-lM","executionInfo":{"status":"ok","timestamp":1709453957477,"user_tz":-330,"elapsed":402,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"87e0b5a2-f29c-435a-d7ca-1fdfd5d3aba6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Empty DataFrame\n","Columns: [hate_speech, offensive_language, neither, text, more_than_one_gt_zero]\n","Index: []\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","\n","# Assuming your data is in a CSV file\n","\n","\n","# Define the columns to check\n","columns_to_check = ['hate_speech', 'offensive_language', 'neither']\n","\n","# Function to find the column name with value > 0\n","def find_column_name(row):\n","    for col in columns_to_check:\n","            if row[col] > 0:\n","                        return col\n","    return None\n","\n","                            # Apply the function to create a new column\n","df['label'] = df.apply(find_column_name, axis=1)\n","\n","                            # Display the updated DataFrame\n","print(df.head())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KIcTsJyTZwNx","executionInfo":{"status":"ok","timestamp":1709454099458,"user_tz":-330,"elapsed":674,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"4038444b-5f45-4282-980b-5fee74daf2b0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["   hate_speech  offensive_language  neither  \\\n","0            0                   0        3   \n","1            0                   3        0   \n","2            0                   3        0   \n","3            0                   2        0   \n","4            0                   6        0   \n","\n","                                                text  more_than_one_gt_zero  \\\n","0  !!! RT @mayasolovely: As a woman you shouldn't...                  False   \n","1  !!!!! RT @mleew17: boy dats cold...tyga dwn ba...                  False   \n","2  !!!!!!! RT @UrKindOfBrand Dawg!!!! RT @80sbaby...                  False   \n","3  !!!!!!!!! RT @C_G_Anderson: @viva_based she lo...                  False   \n","4  !!!!!!!!!!!!! RT @ShenikaRoberts: The shit you...                  False   \n","\n","                label  \n","0             neither  \n","1  offensive_language  \n","2  offensive_language  \n","3  offensive_language  \n","4  offensive_language  \n"]}]},{"cell_type":"code","source":["print(df.columns)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_DVOjsx_aL4z","executionInfo":{"status":"ok","timestamp":1709454192117,"user_tz":-330,"elapsed":428,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"971b8755-5f4f-4d2b-e6bb-dae475da4859"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['hate_speech', 'offensive_language', 'neither', 'text',\n","       'more_than_one_gt_zero', 'label'],\n","      dtype='object')\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","\n","# Assuming your data is in a CSV file\n","\n","\n","# Remove the 'Unnamed: 0' column\n","df = df.drop(['hate_speech', 'offensive_language', 'neither',\n","       'more_than_one_gt_zero'],axis=1)\n","\n","\n","\n"],"metadata":{"id":"kpukPdF2Z-Ov"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.sample()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":81},"id":"_7JlCEaKaWpe","executionInfo":{"status":"ok","timestamp":1709454643630,"user_tz":-330,"elapsed":405,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"8ca99075-e395-4f9a-d3f3-15bf343088a8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                          text    label\n","24336  ooh girl cute face but yellow teef. lol  neither"],"text/html":["\n","  <div id=\"df-47f563cc-afc5-44c0-8fe3-9a94307f5e15\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>text</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>24336</th>\n","      <td>ooh girl cute face but yellow teef. lol</td>\n","      <td>neither</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-47f563cc-afc5-44c0-8fe3-9a94307f5e15')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-47f563cc-afc5-44c0-8fe3-9a94307f5e15 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-47f563cc-afc5-44c0-8fe3-9a94307f5e15');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"ooh girl cute face but yellow teef. lol\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"neither\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["df['label'] = df['label'].replace('offensive_language', 'offensive')\n","\n","# Print the modified DataFrame"],"metadata":{"id":"h-dnYMW8aq0F"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['label'] = df['label'].replace('hate_speecj', 'hate')"],"metadata":{"id":"OkrAtQA4a1l4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","import re\n","\n","# Load your dataset\n","\n","\n","# Define the extraction function\n","def extract_selected_text(row):\n","    # Implement your extraction logic here\n","        # For example, extracting based on a simple regex pattern\n","            # Replace 'your_regex_pattern' with your actual regex pattern\n","                match = re.search(r\"your_regex_pattern\", row['text'])\n","                if match:\n","                      return match.group(0)\n","                return row['text']  # Return the full text if no specific part is extracted\n","\n","                                # Apply the function to the DataFrame\n","df['selected_text'] = df.apply(extract_selected_text, axis=1)\n","\n","                                # Save the modified DataFrame, if necessary\n","\n"],"metadata":{"id":"nE1wBVQpcgXd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":293},"id":"B2HCKIxIctcQ","executionInfo":{"status":"ok","timestamp":1709454848823,"user_tz":-330,"elapsed":436,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"5a9a5878-4801-4fb1-e341-69267313dea8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                text      label  \\\n","0  !!! RT @mayasolovely: As a woman you shouldn't...    neither   \n","1  !!!!! RT @mleew17: boy dats cold...tyga dwn ba...  offensive   \n","2  !!!!!!! RT @UrKindOfBrand Dawg!!!! RT @80sbaby...  offensive   \n","3  !!!!!!!!! RT @C_G_Anderson: @viva_based she lo...  offensive   \n","4  !!!!!!!!!!!!! RT @ShenikaRoberts: The shit you...  offensive   \n","\n","                                       selected_text  \n","0  !!! RT @mayasolovely: As a woman you shouldn't...  \n","1  !!!!! RT @mleew17: boy dats cold...tyga dwn ba...  \n","2  !!!!!!! RT @UrKindOfBrand Dawg!!!! RT @80sbaby...  \n","3  !!!!!!!!! RT @C_G_Anderson: @viva_based she lo...  \n","4  !!!!!!!!!!!!! RT @ShenikaRoberts: The shit you...  "],"text/html":["\n","  <div id=\"df-1c3fead4-b708-4867-9079-e59dd119fd8c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>text</th>\n","      <th>label</th>\n","      <th>selected_text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>!!! RT @mayasolovely: As a woman you shouldn't...</td>\n","      <td>neither</td>\n","      <td>!!! RT @mayasolovely: As a woman you shouldn't...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>!!!!! RT @mleew17: boy dats cold...tyga dwn ba...</td>\n","      <td>offensive</td>\n","      <td>!!!!! RT @mleew17: boy dats cold...tyga dwn ba...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>!!!!!!! RT @UrKindOfBrand Dawg!!!! RT @80sbaby...</td>\n","      <td>offensive</td>\n","      <td>!!!!!!! RT @UrKindOfBrand Dawg!!!! RT @80sbaby...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>!!!!!!!!! RT @C_G_Anderson: @viva_based she lo...</td>\n","      <td>offensive</td>\n","      <td>!!!!!!!!! RT @C_G_Anderson: @viva_based she lo...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>!!!!!!!!!!!!! RT @ShenikaRoberts: The shit you...</td>\n","      <td>offensive</td>\n","      <td>!!!!!!!!!!!!! RT @ShenikaRoberts: The shit you...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1c3fead4-b708-4867-9079-e59dd119fd8c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1c3fead4-b708-4867-9079-e59dd119fd8c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1c3fead4-b708-4867-9079-e59dd119fd8c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5b67b6ec-b231-444a-86f0-477f6e623397\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5b67b6ec-b231-444a-86f0-477f6e623397')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5b67b6ec-b231-444a-86f0-477f6e623397 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 24783,\n  \"fields\": [\n    {\n      \"column\": \"text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 24783,\n        \"samples\": [\n          \"934 8616\\ni got a missed call from yo bitch\",\n          \"RT @KINGTUNCHI_: Fucking with a bad bitch you gone need some money lil homie!\",\n          \"RT @eanahS__: @1inkkofrosess lol my credit ain't no where near good , but I know the right man for the job .. that ho nice though!\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"neither\",\n          \"offensive\",\n          \"hate_speech\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"selected_text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 24783,\n        \"samples\": [\n          \"934 8616\\ni got a missed call from yo bitch\",\n          \"RT @KINGTUNCHI_: Fucking with a bad bitch you gone need some money lil homie!\",\n          \"RT @eanahS__: @1inkkofrosess lol my credit ain't no where near good , but I know the right man for the job .. that ho nice though!\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":66}]},{"cell_type":"markdown","source":["# New section"],"metadata":{"id":"LE4KZpwHDdpJ"}},{"cell_type":"code","source":["import pandas as pd\n","\n","file_path = '/content/train.csv'\n","\n","# Try using a different encoding, such as 'ISO-8859-1'\n","try:\n","    df2 = pd.read_csv(file_path, encoding='ISO-8859-1')\n","except UnicodeDecodeError as e:\n","  import pandas as pd\n","\n","  file_path = '/content/train.csv'\n","\n","  # Try using a different encoding, such as 'ISO-8859-1'\n","  try:\n","      df2 = pd.read_csv(file_path, encoding='ISO-8859-1')\n","  except UnicodeDecodeError as e:\n","     print(\"Error with cp1252 encoding:\", e2)"],"metadata":{"id":"-6Pl6BtqWIDG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","\n","# Load the dataset\n","\n","\n","# Count the occurrences of each classification\n","classification_counts = df2['sentiment'].value_counts()\n","\n","print(classification_counts)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EfHJTEZEc2i9","executionInfo":{"status":"ok","timestamp":1709555563844,"user_tz":-330,"elapsed":453,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"fb439cd3-ffd0-4e67-b9fd-290966628242"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["neutral     11118\n","positive     8582\n","negative     7781\n","Name: sentiment, dtype: int64\n"]}]},{"cell_type":"code","source":["df2.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":538},"id":"AsDTMEcEWgD8","executionInfo":{"status":"ok","timestamp":1709465505571,"user_tz":-330,"elapsed":4,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"e3aca245-a200-4ca6-f5d1-1bb30284dd34"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       textID                                               text  \\\n","0  cb774db0d1                I`d have responded, if I were going   \n","1  549e992a42      Sooo SAD I will miss you here in San Diego!!!   \n","2  088c60f138                          my boss is bullying me...   \n","3  9642c003ef                     what interview! leave me alone   \n","4  358bd9e861   Sons of ****, why couldn`t they put them on t...   \n","\n","                         selected_text sentiment Time of Tweet Age of User  \\\n","0  I`d have responded, if I were going   neutral       morning        0-20   \n","1                             Sooo SAD  negative          noon       21-30   \n","2                          bullying me  negative         night       31-45   \n","3                       leave me alone  negative       morning       46-60   \n","4                        Sons of ****,  negative          noon       60-70   \n","\n","       Country  Population -2020  Land Area (Km²)  Density (P/Km²)  \n","0  Afghanistan          38928346         652860.0               60  \n","1      Albania           2877797          27400.0              105  \n","2      Algeria          43851044        2381740.0               18  \n","3      Andorra             77265            470.0              164  \n","4       Angola          32866272        1246700.0               26  "],"text/html":["\n","  <div id=\"df-dea7e30e-01d5-4ca8-acd0-3a5f834eb862\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>textID</th>\n","      <th>text</th>\n","      <th>selected_text</th>\n","      <th>sentiment</th>\n","      <th>Time of Tweet</th>\n","      <th>Age of User</th>\n","      <th>Country</th>\n","      <th>Population -2020</th>\n","      <th>Land Area (Km²)</th>\n","      <th>Density (P/Km²)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>cb774db0d1</td>\n","      <td>I`d have responded, if I were going</td>\n","      <td>I`d have responded, if I were going</td>\n","      <td>neutral</td>\n","      <td>morning</td>\n","      <td>0-20</td>\n","      <td>Afghanistan</td>\n","      <td>38928346</td>\n","      <td>652860.0</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>549e992a42</td>\n","      <td>Sooo SAD I will miss you here in San Diego!!!</td>\n","      <td>Sooo SAD</td>\n","      <td>negative</td>\n","      <td>noon</td>\n","      <td>21-30</td>\n","      <td>Albania</td>\n","      <td>2877797</td>\n","      <td>27400.0</td>\n","      <td>105</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>088c60f138</td>\n","      <td>my boss is bullying me...</td>\n","      <td>bullying me</td>\n","      <td>negative</td>\n","      <td>night</td>\n","      <td>31-45</td>\n","      <td>Algeria</td>\n","      <td>43851044</td>\n","      <td>2381740.0</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>9642c003ef</td>\n","      <td>what interview! leave me alone</td>\n","      <td>leave me alone</td>\n","      <td>negative</td>\n","      <td>morning</td>\n","      <td>46-60</td>\n","      <td>Andorra</td>\n","      <td>77265</td>\n","      <td>470.0</td>\n","      <td>164</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>358bd9e861</td>\n","      <td>Sons of ****, why couldn`t they put them on t...</td>\n","      <td>Sons of ****,</td>\n","      <td>negative</td>\n","      <td>noon</td>\n","      <td>60-70</td>\n","      <td>Angola</td>\n","      <td>32866272</td>\n","      <td>1246700.0</td>\n","      <td>26</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dea7e30e-01d5-4ca8-acd0-3a5f834eb862')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-dea7e30e-01d5-4ca8-acd0-3a5f834eb862 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-dea7e30e-01d5-4ca8-acd0-3a5f834eb862');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-646bd703-5ce7-4a2c-ae9b-e29bbcb88f57\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-646bd703-5ce7-4a2c-ae9b-e29bbcb88f57')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-646bd703-5ce7-4a2c-ae9b-e29bbcb88f57 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df2","summary":"{\n  \"name\": \"df2\",\n  \"rows\": 27481,\n  \"fields\": [\n    {\n      \"column\": \"textID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 27481,\n        \"samples\": [\n          \"a7f72a928a\",\n          \"ef42dee96c\",\n          \"07d17131b1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 27480,\n        \"samples\": [\n          \" Enjoy! Family trumps everything\",\n          \" --of them kinda turns me off of it all.  And then I buy more of them and dig a deeper hole, etc. ;;\",\n          \"Clive it`s my birthday pat me  http://apps.facebook.com/dogbook/profile/view/6386106\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"selected_text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 22430,\n        \"samples\": [\n          \"that is why I drive a (teeny tiny) honda civic\",\n          \"Sorry...but, I bet they aren`t that bad...\",\n          \"yummy\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sentiment\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"neutral\",\n          \"negative\",\n          \"positive\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Time of Tweet\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"morning\",\n          \"noon\",\n          \"night\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age of User\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"0-20\",\n          \"21-30\",\n          \"70-100\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 195,\n        \"samples\": [\n          \"Philippines\",\n          \"Belgium\",\n          \"Sierra Leone\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Population -2020\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 150494590,\n        \"min\": 801,\n        \"max\": 1439323776,\n        \"num_unique_values\": 195,\n        \"samples\": [\n          109581078,\n          11589623,\n          7976983\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Land Area (Km\\u00b2)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1807424.6900064738,\n        \"min\": 0.0,\n        \"max\": 16376870.0,\n        \"num_unique_values\": 193,\n        \"samples\": [\n          2267050.0,\n          1280000.0,\n          100250.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Density (P/Km\\u00b2)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2013,\n        \"min\": 2,\n        \"max\": 26337,\n        \"num_unique_values\": 136,\n        \"samples\": [\n          400,\n          71,\n          331\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":["import pandas as pd\n","\n","# Assuming your data is in a CSV file\n","\n","\n","# Remove the 'Unnamed: 0' column\n","df2= df2.drop(['textID','Time of Tweet','Age of User',\t'Country','Population -2020',\t'Land Area (Km²)','Density (P/Km²)'] ,axis=1)\n","\n","\n","\n"],"metadata":{"id":"cvbBVFR9WuSO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df2.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":538},"id":"bEoRmpE8XdMZ","executionInfo":{"status":"ok","timestamp":1709465508583,"user_tz":-330,"elapsed":419,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"78569195-ccf3-4fc5-fda8-48f5e631f7eb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       textID                                               text  \\\n","0  cb774db0d1                I`d have responded, if I were going   \n","1  549e992a42      Sooo SAD I will miss you here in San Diego!!!   \n","2  088c60f138                          my boss is bullying me...   \n","3  9642c003ef                     what interview! leave me alone   \n","4  358bd9e861   Sons of ****, why couldn`t they put them on t...   \n","\n","                         selected_text sentiment Time of Tweet Age of User  \\\n","0  I`d have responded, if I were going   neutral       morning        0-20   \n","1                             Sooo SAD  negative          noon       21-30   \n","2                          bullying me  negative         night       31-45   \n","3                       leave me alone  negative       morning       46-60   \n","4                        Sons of ****,  negative          noon       60-70   \n","\n","       Country  Population -2020  Land Area (Km²)  Density (P/Km²)  \n","0  Afghanistan          38928346         652860.0               60  \n","1      Albania           2877797          27400.0              105  \n","2      Algeria          43851044        2381740.0               18  \n","3      Andorra             77265            470.0              164  \n","4       Angola          32866272        1246700.0               26  "],"text/html":["\n","  <div id=\"df-f2335f49-af62-4b51-b1b5-e6fcd9c136df\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>textID</th>\n","      <th>text</th>\n","      <th>selected_text</th>\n","      <th>sentiment</th>\n","      <th>Time of Tweet</th>\n","      <th>Age of User</th>\n","      <th>Country</th>\n","      <th>Population -2020</th>\n","      <th>Land Area (Km²)</th>\n","      <th>Density (P/Km²)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>cb774db0d1</td>\n","      <td>I`d have responded, if I were going</td>\n","      <td>I`d have responded, if I were going</td>\n","      <td>neutral</td>\n","      <td>morning</td>\n","      <td>0-20</td>\n","      <td>Afghanistan</td>\n","      <td>38928346</td>\n","      <td>652860.0</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>549e992a42</td>\n","      <td>Sooo SAD I will miss you here in San Diego!!!</td>\n","      <td>Sooo SAD</td>\n","      <td>negative</td>\n","      <td>noon</td>\n","      <td>21-30</td>\n","      <td>Albania</td>\n","      <td>2877797</td>\n","      <td>27400.0</td>\n","      <td>105</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>088c60f138</td>\n","      <td>my boss is bullying me...</td>\n","      <td>bullying me</td>\n","      <td>negative</td>\n","      <td>night</td>\n","      <td>31-45</td>\n","      <td>Algeria</td>\n","      <td>43851044</td>\n","      <td>2381740.0</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>9642c003ef</td>\n","      <td>what interview! leave me alone</td>\n","      <td>leave me alone</td>\n","      <td>negative</td>\n","      <td>morning</td>\n","      <td>46-60</td>\n","      <td>Andorra</td>\n","      <td>77265</td>\n","      <td>470.0</td>\n","      <td>164</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>358bd9e861</td>\n","      <td>Sons of ****, why couldn`t they put them on t...</td>\n","      <td>Sons of ****,</td>\n","      <td>negative</td>\n","      <td>noon</td>\n","      <td>60-70</td>\n","      <td>Angola</td>\n","      <td>32866272</td>\n","      <td>1246700.0</td>\n","      <td>26</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f2335f49-af62-4b51-b1b5-e6fcd9c136df')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f2335f49-af62-4b51-b1b5-e6fcd9c136df button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f2335f49-af62-4b51-b1b5-e6fcd9c136df');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7ec330ec-a5c0-4ed9-81d1-f1d9c86322fe\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7ec330ec-a5c0-4ed9-81d1-f1d9c86322fe')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7ec330ec-a5c0-4ed9-81d1-f1d9c86322fe button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df2","summary":"{\n  \"name\": \"df2\",\n  \"rows\": 27481,\n  \"fields\": [\n    {\n      \"column\": \"textID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 27481,\n        \"samples\": [\n          \"a7f72a928a\",\n          \"ef42dee96c\",\n          \"07d17131b1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 27480,\n        \"samples\": [\n          \" Enjoy! Family trumps everything\",\n          \" --of them kinda turns me off of it all.  And then I buy more of them and dig a deeper hole, etc. ;;\",\n          \"Clive it`s my birthday pat me  http://apps.facebook.com/dogbook/profile/view/6386106\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"selected_text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 22430,\n        \"samples\": [\n          \"that is why I drive a (teeny tiny) honda civic\",\n          \"Sorry...but, I bet they aren`t that bad...\",\n          \"yummy\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sentiment\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"neutral\",\n          \"negative\",\n          \"positive\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Time of Tweet\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"morning\",\n          \"noon\",\n          \"night\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age of User\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"0-20\",\n          \"21-30\",\n          \"70-100\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 195,\n        \"samples\": [\n          \"Philippines\",\n          \"Belgium\",\n          \"Sierra Leone\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Population -2020\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 150494590,\n        \"min\": 801,\n        \"max\": 1439323776,\n        \"num_unique_values\": 195,\n        \"samples\": [\n          109581078,\n          11589623,\n          7976983\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Land Area (Km\\u00b2)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1807424.6900064738,\n        \"min\": 0.0,\n        \"max\": 16376870.0,\n        \"num_unique_values\": 193,\n        \"samples\": [\n          2267050.0,\n          1280000.0,\n          100250.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Density (P/Km\\u00b2)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2013,\n        \"min\": 2,\n        \"max\": 26337,\n        \"num_unique_values\": 136,\n        \"samples\": [\n          400,\n          71,\n          331\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["df2.size"],"metadata":{"id":"e1oFhwDhXg1A"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","import nltk\n","from nltk.corpus import stopwords\n","from nltk.stem import WordNetLemmatizer\n","from nltk.tokenize import word_tokenize\n","\n","# Download necessary NLTK resources\n","nltk.download('punkt')\n","nltk.download('wordnet')\n","nltk.download('stopwords')\n","\n","# Load your dataset\n","# Replace with your dataset file\n","\n","# Initialize the lemmatizer and stopwords list\n","lemmatizer = WordNetLemmatizer()\n","stop_words = set(stopwords.words('english'))\n","\n","# Function to lemmatize and remove stop words\n","def lemmatize_and_remove_stopwords(text):\n","    tokens = word_tokenize(text)\n","    lemmatized_tokens = [lemmatizer.lemmatize(word) for word in tokens if word.lower() not in stop_words]\n","    return ' '.join(lemmatized_tokens)\n","\n","            # Apply the function to your text column\n","            # Replace 'text_column' with the name of your actual text column\n","df2['text'] = df2['text'].apply(lemmatize_and_remove_stopwords)\n","\n","            # Save the modified DataFrame\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xjJPiZbjfvgV","executionInfo":{"status":"ok","timestamp":1709465544219,"user_tz":-330,"elapsed":9104,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"0b0b9e45-9af8-4689-8c00-3d17df905a15"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n","[nltk_data] Downloading package wordnet to /root/nltk_data...\n","[nltk_data]   Package wordnet is already up-to-date!\n","[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Package stopwords is already up-to-date!\n"]}]},{"cell_type":"code","source":["# Check for missing values\n","print(df2.isnull().sum())\n","# Drop rows with missing values (if appropriate)\n","df2= df2.dropna(subset=[text_column, label_column])\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oqlG5PBNi_Iu","executionInfo":{"status":"ok","timestamp":1709465545298,"user_tz":-330,"elapsed":3,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"59413c52-9771-4783-91ae-18f141e4d872"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["textID              0\n","text                0\n","selected_text       0\n","sentiment           0\n","Time of Tweet       0\n","Age of User         0\n","Country             0\n","Population -2020    0\n","Land Area (Km²)     0\n","Density (P/Km²)     0\n","dtype: int64\n"]}]},{"cell_type":"code","source":["X = tfidf.fit_transform(df2[text_column])\n","y = df2[label_column]\n"],"metadata":{"id":"AUTLAbe2jH8u"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(X.shape[0], len(y))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0cZaPjHojK4_","executionInfo":{"status":"ok","timestamp":1709465545924,"user_tz":-330,"elapsed":5,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"bffcba36-76be-4315-c8d2-0ad4a86cf166"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["27480 27480\n"]}]},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n"],"metadata":{"id":"3UxNomvwjPLo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df2 = df2.reset_index(drop=True)\n"],"metadata":{"id":"3PPjT4EajUW3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(X_train.shape)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IP1AB7fXjz0V","executionInfo":{"status":"ok","timestamp":1709460592250,"user_tz":-330,"elapsed":15,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"4128599a-331d-45b1-fd0a-de7d55c78702"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(21984, 26439)\n"]}]},{"cell_type":"code","source":[],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7xVh1NV5rucu","executionInfo":{"status":"ok","timestamp":1709458785135,"user_tz":-330,"elapsed":387,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"7b33754a-e1eb-408d-cf35-2c349c6f0f5e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[[[[<19826x34605 sparse matrix of type '<class 'numpy.float64'>'\n","           \twith 181005 stored elements in Compressed Sparse Row format>]]]]],\n","      dtype=object)"]},"metadata":{},"execution_count":112}]},{"cell_type":"code","source":["print(X_train.shape)\n","print(X_test.shape)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U1zsOnp-scne","executionInfo":{"status":"ok","timestamp":1709465557063,"user_tz":-330,"elapsed":5,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"bdf7bdcf-fe0d-4bfc-b2e6-ff793e07ccc4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(65952, 20)\n","(16488, 20)\n"]}]},{"cell_type":"code","source":["print(\"X_train shape:\", X_train.shape)\n","print(\"X_test shape:\", X_test.shape)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BpyD61Qru4AC","executionInfo":{"status":"ok","timestamp":1709465558413,"user_tz":-330,"elapsed":4,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"a107c622-d175-4d9f-ef55-81a533ef1543"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["X_train shape: (65952, 20)\n","X_test shape: (16488, 20)\n"]}]},{"cell_type":"code","source":["X_train = X_train.astype('float32')\n","X_test = X_test.astype('float32')\n","\n","X_train = np.expand_dims(X_train, axis=-1)  # Add a dummy dimension\n","X_test = np.expand_dims(X_test, axis=-1)\n"],"metadata":{"id":"d8F39o4NvECB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(\"X_train shape before reshaping:\", X_train.shape)\n","print(\"X_test shape before reshaping:\", X_test.shape)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E_y17wjLwUT9","executionInfo":{"status":"ok","timestamp":1709465569844,"user_tz":-330,"elapsed":386,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"335a3a2e-a240-480d-ecd9-4521afd175cc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["X_train shape before reshaping: (65952, 20, 1)\n","X_test shape before reshaping: (16488, 20, 1)\n"]}]},{"cell_type":"code","source":["print(\"X_train sample:\", X_train[:3])\n","print(\"X_test sample:\", X_test[:3])\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h7IZQl1_xMKJ","executionInfo":{"status":"ok","timestamp":1709465579237,"user_tz":-330,"elapsed":375,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"538b3fa2-9c67-4b25-ebe3-420c26cd3656"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["X_train sample: [[[0.0000e+00]\n","  [0.0000e+00]\n","  [0.0000e+00]\n","  [0.0000e+00]\n","  [0.0000e+00]\n","  [0.0000e+00]\n","  [3.2500e+02]\n","  [3.9650e+03]\n","  [9.0000e+00]\n","  [1.9700e+02]\n","  [2.4900e+02]\n","  [3.9000e+01]\n","  [9.1000e+01]\n","  [8.5000e+01]\n","  [2.5000e+01]\n","  [4.8000e+01]\n","  [2.0000e+00]\n","  [3.0000e+00]\n","  [2.1580e+03]\n","  [1.0900e+02]]\n","\n"," [[0.0000e+00]\n","  [0.0000e+00]\n","  [0.0000e+00]\n","  [0.0000e+00]\n","  [0.0000e+00]\n","  [0.0000e+00]\n","  [0.0000e+00]\n","  [0.0000e+00]\n","  [1.0000e+00]\n","  [2.1000e+01]\n","  [4.0000e+00]\n","  [1.3300e+02]\n","  [3.1890e+03]\n","  [1.3000e+01]\n","  [4.5240e+03]\n","  [2.5487e+04]\n","  [1.4640e+03]\n","  [1.4200e+02]\n","  [3.0000e+00]\n","  [8.9110e+03]]\n","\n"," [[3.0000e+00]\n","  [2.7800e+03]\n","  [7.2000e+01]\n","  [2.7000e+01]\n","  [1.7500e+02]\n","  [6.0000e+00]\n","  [7.7300e+02]\n","  [1.1000e+01]\n","  [2.6000e+01]\n","  [3.7300e+02]\n","  [4.0000e+00]\n","  [1.3000e+02]\n","  [4.6160e+03]\n","  [5.0000e+00]\n","  [2.7810e+03]\n","  [6.0000e+01]\n","  [1.0000e+01]\n","  [7.7790e+03]\n","  [1.0749e+04]\n","  [1.6460e+03]]]\n","X_test sample: [[[7.8280e+03]\n","  [1.8400e+02]\n","  [1.1600e+02]\n","  [9.4700e+02]\n","  [1.3570e+03]\n","  [2.2750e+03]\n","  [1.0000e+00]\n","  [2.8000e+01]\n","  [3.1420e+03]\n","  [2.0000e+00]\n","  [5.6320e+03]\n","  [9.5000e+01]\n","  [1.2094e+04]\n","  [1.6200e+02]\n","  [1.1000e+01]\n","  [4.2000e+01]\n","  [1.0900e+03]\n","  [6.0000e+00]\n","  [1.2000e+01]\n","  [1.4000e+03]]\n","\n"," [[0.0000e+00]\n","  [0.0000e+00]\n","  [0.0000e+00]\n","  [0.0000e+00]\n","  [0.0000e+00]\n","  [0.0000e+00]\n","  [1.6800e+02]\n","  [1.3300e+02]\n","  [1.6200e+02]\n","  [2.6400e+02]\n","  [4.0000e+00]\n","  [3.0800e+02]\n","  [1.3000e+01]\n","  [1.0600e+02]\n","  [7.3700e+02]\n","  [7.0000e+00]\n","  [3.8000e+01]\n","  [2.4400e+02]\n","  [3.3000e+01]\n","  [3.3400e+02]]\n","\n"," [[0.0000e+00]\n","  [0.0000e+00]\n","  [0.0000e+00]\n","  [0.0000e+00]\n","  [0.0000e+00]\n","  [0.0000e+00]\n","  [0.0000e+00]\n","  [0.0000e+00]\n","  [0.0000e+00]\n","  [0.0000e+00]\n","  [0.0000e+00]\n","  [1.2160e+03]\n","  [2.2000e+01]\n","  [3.2200e+02]\n","  [1.4300e+03]\n","  [7.6000e+01]\n","  [9.1250e+03]\n","  [1.0000e+01]\n","  [5.0000e+00]\n","  [1.0383e+04]]]\n"]}]},{"cell_type":"code","source":["#df2\n","df2.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"id":"9wSRHv3WxfJv","executionInfo":{"status":"ok","timestamp":1709460309155,"user_tz":-330,"elapsed":406,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"d203d297-c5dd-41d4-f19d-c618ae5dc834"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                text  \\\n","0  ! ! ! RT @ mayasolovely : woman n't complain c...   \n","1  ! ! ! ! ! RT @ mleew17 : boy dat cold ... tyga...   \n","2  ! ! ! ! ! ! ! RT @ UrKindOfBrand Dawg ! ! ! ! ...   \n","3  ! ! ! ! ! ! ! ! ! RT @ C_G_Anderson : @ viva_b...   \n","4  ! ! ! ! ! ! ! ! ! ! ! ! ! RT @ ShenikaRoberts ...   \n","\n","                         selected_text sentiment  \n","0  I`d have responded, if I were going   neutral  \n","1                             Sooo SAD  negative  \n","2                          bullying me  negative  \n","3                       leave me alone  negative  \n","4                        Sons of ****,  negative  "],"text/html":["\n","  <div id=\"df-43ae8bc1-6898-4930-a2b9-e49b394cb736\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>text</th>\n","      <th>selected_text</th>\n","      <th>sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>! ! ! RT @ mayasolovely : woman n't complain c...</td>\n","      <td>I`d have responded, if I were going</td>\n","      <td>neutral</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>! ! ! ! ! RT @ mleew17 : boy dat cold ... tyga...</td>\n","      <td>Sooo SAD</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>! ! ! ! ! ! ! RT @ UrKindOfBrand Dawg ! ! ! ! ...</td>\n","      <td>bullying me</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>! ! ! ! ! ! ! ! ! RT @ C_G_Anderson : @ viva_b...</td>\n","      <td>leave me alone</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>! ! ! ! ! ! ! ! ! ! ! ! ! RT @ ShenikaRoberts ...</td>\n","      <td>Sons of ****,</td>\n","      <td>negative</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-43ae8bc1-6898-4930-a2b9-e49b394cb736')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-43ae8bc1-6898-4930-a2b9-e49b394cb736 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-43ae8bc1-6898-4930-a2b9-e49b394cb736');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-aae69e66-75f9-44f6-aa39-df29659502e4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-aae69e66-75f9-44f6-aa39-df29659502e4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-aae69e66-75f9-44f6-aa39-df29659502e4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df2","summary":"{\n  \"name\": \"df2\",\n  \"rows\": 24783,\n  \"fields\": [\n    {\n      \"column\": \"text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 24754,\n        \"samples\": [\n          \"& # 8220 ; @ CommonManKFAN : 's mock draft joke friend ..... & # 8221 ; Anyone ? ? ?\",\n          \"Van Cleef Arples bitch Starbucks need back fuck space line\",\n          \"bring another bitch nah ?\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"selected_text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20284,\n        \"samples\": [\n          \"me either\",\n          \"booo that meanie  is teasing me with a piece of cheese!   http://twitpic.com/67rt8\",\n          \"my sis doesn`t want to  well\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sentiment\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"neutral\",\n          \"negative\",\n          \"positive\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":175}]},{"cell_type":"code","source":["import pandas as pd\n","import random\n","import nltk\n","from nltk.corpus import wordnet\n","\n","# Download NLTK resources\n","nltk.download('wordnet')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uveEigDu3C6G","executionInfo":{"status":"ok","timestamp":1709465619729,"user_tz":-330,"elapsed":376,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"5043817d-15c6-4c8f-b70e-6137f8e1e9ea"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package wordnet to /root/nltk_data...\n","[nltk_data]   Package wordnet is already up-to-date!\n"]},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":["def get_synonyms(word):\n","      synonyms = set()\n","      for syn in wordnet.synsets(word):\n","                  for lemma in syn.lemmas():\n","                              synonyms.add(lemma.name())\n","      if word in synonyms:\n","                                          synonyms.remove(word)  # remove the original word\n","      return list(synonyms)\n","\n","                                              # Function for synonym replacement"],"metadata":{"id":"8vn0Hsr23HJO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def synonym_replacement(text):\n","      words = text.split()\n","      words_augmented = words.copy()\n","      num_words_to_replace = max(1, int(len(words) * 0.1))\n","      for _ in range(num_words_to_replace):\n","                idx = random.randint(0, len(words) - 1)\n","                synonyms = get_synonyms(words[idx])\n","                if synonyms:\n","                                            words_augmented[idx] = random.choice(synonyms)\n","      return \" \".join(words_augmented)\n"],"metadata":{"id":"e9UzqJlN3QGn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def random_deletion(text, p):\n","      words = text.split()\n","      words_augmented = [word for word in words if random.uniform(0, 1) > p]\n","      return \" \".join(words_augmented)"],"metadata":{"id":"lOqobj3R3chi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"fgjITfQ13j9Z"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["augmented_data = []\n","for idx, row in enumerate(data['text']):\n","    augmented_data.append({'text': row, 'sentiment': data['sentiment'][idx]})\n","    augmented_data.append({'text': synonym_replacement(row), 'sentiment': data['sentiment'][idx]})\n","    augmented_data.append({'text': random_deletion(row, p=0.2), 'sentiment': data['sentiment'][idx]})"],"metadata":{"id":"-HDER0Sj3gaS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["augmented_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UERAO4nk4OXm","executionInfo":{"status":"ok","timestamp":1709465638129,"user_tz":-330,"elapsed":25,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"4685cce3-c60c-4c92-f557-868c25a9e331"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[{'text': ' I`d have responded, if I were going', 'sentiment': 'neutral'},\n"," {'text': 'I`d have responded, if I live going', 'sentiment': 'neutral'},\n"," {'text': 'I`d have responded, if going', 'sentiment': 'neutral'},\n"," {'text': ' Sooo SAD I will miss you here in San Diego!!!',\n","  'sentiment': 'negative'},\n"," {'text': 'Sooo SAD I will miss you here in San Diego!!!',\n","  'sentiment': 'negative'},\n"," {'text': 'Sooo SAD I will miss you here San Diego!!!',\n","  'sentiment': 'negative'},\n"," {'text': 'my boss is bullying me...', 'sentiment': 'negative'},\n"," {'text': 'my boss is hector me...', 'sentiment': 'negative'},\n"," {'text': 'my boss bullying', 'sentiment': 'negative'},\n"," {'text': ' what interview! leave me alone', 'sentiment': 'negative'},\n"," {'text': 'what interview! leave-taking me alone', 'sentiment': 'negative'},\n"," {'text': 'what interview! leave me alone', 'sentiment': 'negative'},\n"," {'text': ' Sons of ****, why couldn`t they put them on the releases we already bought',\n","  'sentiment': 'negative'},\n"," {'text': 'Sons of ****, why couldn`t they put them on the releases we already bought',\n","  'sentiment': 'negative'},\n"," {'text': 'Sons of ****, couldn`t they put them on releases already bought',\n","  'sentiment': 'negative'},\n"," {'text': 'http://www.dothebouncy.com/smf - some shameless plugging for the best Rangers forum on earth',\n","  'sentiment': 'neutral'},\n"," {'text': 'http://www.dothebouncy.com/smf - some shameless plugging for the best Rangers forum on dry_land',\n","  'sentiment': 'neutral'},\n"," {'text': 'http://www.dothebouncy.com/smf - some shameless for the best Rangers forum on earth',\n","  'sentiment': 'neutral'},\n"," {'text': '2am feedings for the baby are fun when he is all smiles and coos',\n","  'sentiment': 'positive'},\n"," {'text': '2am course for the baby are fun when he is all smiles and coos',\n","  'sentiment': 'positive'},\n"," {'text': '2am feedings for the baby are fun when he is all smiles and',\n","  'sentiment': 'positive'},\n"," {'text': 'Soooo high', 'sentiment': 'neutral'},\n"," {'text': 'Soooo high', 'sentiment': 'neutral'},\n"," {'text': 'Soooo high', 'sentiment': 'neutral'},\n"," {'text': ' Both of you', 'sentiment': 'neutral'},\n"," {'text': 'Both of you', 'sentiment': 'neutral'},\n"," {'text': 'Both of you', 'sentiment': 'neutral'},\n"," {'text': ' Journey!? Wow... u just became cooler.  hehe... (is that possible!?)',\n","  'sentiment': 'positive'},\n"," {'text': 'Journey!? Wow... uracil just became cooler. hehe... (is that possible!?)',\n","  'sentiment': 'positive'},\n"," {'text': 'Wow... u just became hehe... (is that possible!?)',\n","  'sentiment': 'positive'},\n"," {'text': ' as much as i love to be hopeful, i reckon the chances are minimal =P i`m never gonna get my cake and stuff',\n","  'sentiment': 'neutral'},\n"," {'text': 'as much as i love to be hopeful, unity reckon the gamble are minimal =P i`m never gonna get my cake and stuff',\n","  'sentiment': 'neutral'},\n"," {'text': 'as much i love to be hopeful, reckon the chances are never gonna my stuff',\n","  'sentiment': 'neutral'},\n"," {'text': 'I really really like the song Love Story by Taylor Swift',\n","  'sentiment': 'positive'},\n"," {'text': 'I real really like the song Love Story by Taylor Swift',\n","  'sentiment': 'positive'},\n"," {'text': 'I really really like the Love Story Taylor Swift',\n","  'sentiment': 'positive'},\n"," {'text': 'My Sharpie is running DANGERously low on ink',\n","  'sentiment': 'negative'},\n"," {'text': 'My Sharpie is running DANGERously low-down on ink',\n","  'sentiment': 'negative'},\n"," {'text': 'My is running DANGERously low on', 'sentiment': 'negative'},\n"," {'text': 'i want to go to music tonight but i lost my voice.',\n","  'sentiment': 'negative'},\n"," {'text': 'i want to go to music tonight but i lost my voice.',\n","  'sentiment': 'negative'},\n"," {'text': 'i want to go music tonight but i lost my voice.',\n","  'sentiment': 'negative'},\n"," {'text': 'test test from the LG enV2', 'sentiment': 'neutral'},\n"," {'text': 'test test from the LG enV2', 'sentiment': 'neutral'},\n"," {'text': 'test test LG enV2', 'sentiment': 'neutral'},\n"," {'text': 'Uh oh, I am sunburned', 'sentiment': 'negative'},\n"," {'text': 'Uh oh, iodin am sunburned', 'sentiment': 'negative'},\n"," {'text': 'Uh oh, I am sunburned', 'sentiment': 'negative'},\n"," {'text': ' S`ok, trying to plot alternatives as we speak *sigh*',\n","  'sentiment': 'negative'},\n"," {'text': 'S`ok, trying to plot alternatives angstrom we speak *sigh*',\n","  'sentiment': 'negative'},\n"," {'text': 'S`ok, to as we speak *sigh*', 'sentiment': 'negative'},\n"," {'text': 'i`ve been sick for the past few days  and thus, my hair looks wierd.  if i didnt have a hat on it would look... http://tinyurl.com/mnf4kw',\n","  'sentiment': 'negative'},\n"," {'text': 'i`ve been sick for the past few days and thus, my hair looks wierd. if i didnt have a hat on it would look... http://tinyurl.com/mnf4kw',\n","  'sentiment': 'negative'},\n"," {'text': 'i`ve sick for the past few thus, my hair looks wierd. if i have a hat it look... http://tinyurl.com/mnf4kw',\n","  'sentiment': 'negative'},\n"," {'text': 'is back home now      gonna miss every one',\n","  'sentiment': 'negative'},\n"," {'text': 'is back home forthwith gonna miss every one',\n","  'sentiment': 'negative'},\n"," {'text': 'is back home gonna miss one', 'sentiment': 'negative'},\n"," {'text': 'Hes just not that into you', 'sentiment': 'neutral'},\n"," {'text': 'Hes just non that into you', 'sentiment': 'neutral'},\n"," {'text': 'Hes just into', 'sentiment': 'neutral'},\n"," {'text': ' oh Marly, I`m so sorry!!  I hope you find her soon!! <3 <3',\n","  'sentiment': 'neutral'},\n"," {'text': 'oh Marly, I`m so sorry!! I hope you find her soon!! <3 <3',\n","  'sentiment': 'neutral'},\n"," {'text': 'oh Marly, I`m so hope you find <3 <3', 'sentiment': 'neutral'},\n"," {'text': 'Playing Ghost Online is really interesting. The new updates are Kirin pet and Metamorph for third job.  Can`t wait to have a dragon pet',\n","  'sentiment': 'positive'},\n"," {'text': 'Playing Ghost Online is really interesting. The new updates are Kirin pet and Metamorph for third job. Can`t delay to have a dragon pet',\n","  'sentiment': 'positive'},\n"," {'text': 'Playing Ghost Online really The Kirin and Metamorph for third job. Can`t wait have a dragon pet',\n","  'sentiment': 'positive'},\n"," {'text': 'is cleaning the house for her family who is comming later today..',\n","  'sentiment': 'neutral'},\n"," {'text': 'is cleaning the theatre for her family who is comming later today..',\n","  'sentiment': 'neutral'},\n"," {'text': 'is cleaning house for her family who is comming later today..',\n","  'sentiment': 'neutral'},\n"," {'text': 'gotta restart my computer .. I thought Win7 was supposed to put an end to the constant rebootiness',\n","  'sentiment': 'neutral'},\n"," {'text': 'gotta restart my computer .. I thought Win7 was supposed to put an end to the constant rebootiness',\n","  'sentiment': 'neutral'},\n"," {'text': 'gotta restart my computer .. thought Win7 was supposed to put an to the constant rebootiness',\n","  'sentiment': 'neutral'},\n"," {'text': 'SEe waT I Mean bOuT FoLL0w fRiiDaYs... It`S cALLed LoSe f0LloWeRs FridAy... smH',\n","  'sentiment': 'neutral'},\n"," {'text': 'SEe waT I Mean bOuT FoLL0w fRiiDaYs... It`S send_for LoSe f0LloWeRs FridAy... smH',\n","  'sentiment': 'neutral'},\n"," {'text': 'SEe I Mean bOuT FoLL0w fRiiDaYs... It`S f0LloWeRs FridAy... smH',\n","  'sentiment': 'neutral'},\n"," {'text': 'the free fillin` app on my ipod is fun, im addicted',\n","  'sentiment': 'positive'},\n"," {'text': 'the free fillin` app on my ipod is fun, im addicted',\n","  'sentiment': 'positive'},\n"," {'text': 'the fillin` app my ipod is addicted', 'sentiment': 'positive'},\n"," {'text': '  I`m sorry.', 'sentiment': 'negative'},\n"," {'text': 'I`m sorry.', 'sentiment': 'negative'},\n"," {'text': 'I`m sorry.', 'sentiment': 'negative'},\n"," {'text': 'On the way to Malaysia...no internet access to Twit',\n","  'sentiment': 'negative'},\n"," {'text': 'along the way to Malaysia...no internet access to Twit',\n","  'sentiment': 'negative'},\n"," {'text': 'On to Malaysia...no internet access to', 'sentiment': 'negative'},\n"," {'text': 'juss came backk from Berkeleyy ; omg its madd fun out there  havent been out there in a minute . whassqoodd ?',\n","  'sentiment': 'positive'},\n"," {'text': 'juss came backk from Berkeleyy ; omg its madd fun out there havent been out there in a narrow . whassqoodd ?',\n","  'sentiment': 'positive'},\n"," {'text': 'juss came from Berkeleyy ; madd out there havent out there in a minute whassqoodd ?',\n","  'sentiment': 'positive'},\n"," {'text': 'Went to sleep and there is a power cut in Noida  Power back up not working too',\n","  'sentiment': 'negative'},\n"," {'text': 'Went to sleep and there is a power cut in Noida Power back up not working too',\n","  'sentiment': 'negative'},\n"," {'text': 'Went to sleep and there is a power cut in Noida Power back up working too',\n","  'sentiment': 'negative'},\n"," {'text': 'I`m going home now. Have you seen my new twitter design? Quite....heavenly isn`****?',\n","  'sentiment': 'positive'},\n"," {'text': 'I`m going home now. Have you seen my new chitter design? Quite....heavenly isn`****?',\n","  'sentiment': 'positive'},\n"," {'text': 'I`m going home now. Have you seen my new twitter design? Quite....heavenly isn`****?',\n","  'sentiment': 'positive'},\n"," {'text': 'i hope unni will make the audition . fighting dahye unni !',\n","  'sentiment': 'positive'},\n"," {'text': 'i hope unni will make the audition . fighting dahye unni !',\n","  'sentiment': 'positive'},\n"," {'text': 'i hope unni will make the audition . fighting dahye unni !',\n","  'sentiment': 'positive'},\n"," {'text': ' If it is any consolation I got my BMI tested hahaha it says I am obesed  well so much for being unhappy for about 10 minutes.',\n","  'sentiment': 'negative'},\n"," {'text': 'If it is any consolation I got my BMI tested hahaha it says I am obesed well so much for being unhappy for about 10 minutes.',\n","  'sentiment': 'negative'},\n"," {'text': 'it any I got my BMI tested hahaha it says I am obesed well so much for being unhappy for about 10',\n","  'sentiment': 'negative'},\n"," {'text': ' That`s very funny.  Cute kids.', 'sentiment': 'positive'},\n"," {'text': 'That`s very funny. Cute kids.', 'sentiment': 'positive'},\n"," {'text': 'That`s very funny. kids.', 'sentiment': 'positive'},\n"," {'text': ' Ahhh, I slept through the game.  I`m gonna try my best to watch tomorrow though. I hope we play Army.',\n","  'sentiment': 'neutral'},\n"," {'text': 'Ahhh, I slept through_and_through the game. I`m gonna try my best to watch tomorrow though. I hope we play Army.',\n","  'sentiment': 'neutral'},\n"," {'text': 'Ahhh, I slept through the I`m gonna try my best tomorrow though. I hope we play Army.',\n","  'sentiment': 'neutral'},\n"," {'text': 'Thats it, its the end. Tears for Fears vs Eric Prydz, DJ Hero   http://bit.ly/2Hpbg4',\n","  'sentiment': 'neutral'},\n"," {'text': 'Thats it, its the end. Tears for Fears vs Eric Prydz, dj Hero http://bit.ly/2Hpbg4',\n","  'sentiment': 'neutral'},\n"," {'text': 'end. Tears vs Eric Prydz, DJ Hero http://bit.ly/2Hpbg4',\n","  'sentiment': 'neutral'},\n"," {'text': 'Born and raised in NYC and living in Texas for the past 10 years!  I still miss NY',\n","  'sentiment': 'negative'},\n"," {'text': 'Born and raised in NYC and living in Texas for the past 10 years! I still pretermit NY',\n","  'sentiment': 'negative'},\n"," {'text': 'Born and raised in NYC and living in for past 10 years! I still miss NY',\n","  'sentiment': 'negative'},\n"," {'text': 'just in case you wonder, we are really busy today and this coming with with adding tons of new blogs and updates stay tuned',\n","  'sentiment': 'neutral'},\n"," {'text': 'just in case you wonder, we are really meddling today and this coming with with adding tons of new blogs and updates stay tuned',\n","  'sentiment': 'neutral'},\n"," {'text': 'just in case you are busy today and this adding tons new blogs and updates stay tuned',\n","  'sentiment': 'neutral'},\n"," {'text': 'i`m soooooo sleeeeepy!!! the last day o` school was today....sniffle....',\n","  'sentiment': 'negative'},\n"," {'text': 'i`m soooooo sleeeeepy!!! the last day o` school was today....sniffle....',\n","  'sentiment': 'negative'},\n"," {'text': 'soooooo sleeeeepy!!! the day o` today....sniffle....',\n","  'sentiment': 'negative'},\n"," {'text': 'A little happy for the wine jeje ok it`sm my free time so who cares, jaja i love this day',\n","  'sentiment': 'positive'},\n"," {'text': 'A little happy for the wine jeje ok it`sm my free time so who cares, jaja i love this solar_day',\n","  'sentiment': 'positive'},\n"," {'text': 'A little happy for the wine jeje ok it`sm my free so who cares, jaja i love this day',\n","  'sentiment': 'positive'},\n"," {'text': ' Car not happy, big big dent in boot! Hoping theyre not going to write it off, crossing fingers and waiting',\n","  'sentiment': 'neutral'},\n"," {'text': 'Car not happy, big big dent in boot! Hoping theyre not going to drop_a_line it off, crossing fingers and waiting',\n","  'sentiment': 'neutral'},\n"," {'text': 'Car not happy, big big dent boot! Hoping not going it off, crossing and waiting',\n","  'sentiment': 'neutral'},\n"," {'text': 'im an avid fan of **** magazine and i love your magazines',\n","  'sentiment': 'positive'},\n"," {'text': 'im an avid winnow of **** magazine and i love your magazines',\n","  'sentiment': 'positive'},\n"," {'text': 'im an avid fan of magazine i love your magazines',\n","  'sentiment': 'positive'},\n"," {'text': 'MAYDAY?!', 'sentiment': 'neutral'},\n"," {'text': 'MAYDAY?!', 'sentiment': 'neutral'},\n"," {'text': '', 'sentiment': 'neutral'},\n"," {'text': 'RATT ROCKED NASHVILLE TONITE..ONE THING SUCKED, NO ENCORE!  LIKE IN THE 80`S THEY STILL HAVE A FUN SHOW. PEARCY HAS THAT HOTT BAD BOY LOOK',\n","  'sentiment': 'neutral'},\n"," {'text': 'RATT ROCKED NASHVILLE TONITE..ONE THING SUCKED, NO ENCORE! LIKE IN THE 80`S THEY noneffervescent HAVE A FUN SHOW. PEARCY HAS THAT HOTT BAD BOY LOOK',\n","  'sentiment': 'neutral'},\n"," {'text': 'RATT ROCKED NASHVILLE THING NO LIKE IN THE 80`S THEY STILL HAVE A FUN SHOW. PEARCY HAS THAT HOTT BAD BOY LOOK',\n","  'sentiment': 'neutral'},\n"," {'text': ' I love to! But I`m only available from 5pm.  and where dear? Would love to help  convert her vids.Ã¯Â¿Â½',\n","  'sentiment': 'positive'},\n"," {'text': 'I love to! But I`m only available from 5pm. and where dear? Would love to facilitate convert her vids.Ã¯Â¿Â½',\n","  'sentiment': 'positive'},\n"," {'text': 'love to! I`m only available from 5pm. and where dear? Would love convert her vids.Ã¯Â¿Â½',\n","  'sentiment': 'positive'},\n"," {'text': \"The girl in the hair salon asked me 'Shall I trim your eyebrows!' How old do I feel?\",\n","  'sentiment': 'neutral'},\n"," {'text': \"The girl in the hair salon asked Pine_Tree_State 'Shall I trim your eyebrows!' How old do I feel?\",\n","  'sentiment': 'neutral'},\n"," {'text': \"girl in the hair salon me 'Shall I eyebrows!' How old do I feel?\",\n","  'sentiment': 'neutral'},\n"," {'text': 'egh blah and boooooooooooo i dunno wanna go to work  HANGOVERS SUCKKKKKK Im a drunk mess!',\n","  'sentiment': 'negative'},\n"," {'text': 'egh blah and boooooooooooo i dunno wanna go to work HANGOVERS SUCKKKKKK Im a drunk mess!',\n","  'sentiment': 'negative'},\n"," {'text': 'egh i wanna go work HANGOVERS SUCKKKKKK Im a drunk mess!',\n","  'sentiment': 'negative'},\n"," {'text': ':visiting my friendster and facebook', 'sentiment': 'neutral'},\n"," {'text': ':visiting my friendster and facebook', 'sentiment': 'neutral'},\n"," {'text': ':visiting my friendster and facebook', 'sentiment': 'neutral'},\n"," {'text': 'i donbt like to peel prawns, i also dont like going shopping, running out of money and crawling round the car looking for more',\n","  'sentiment': 'negative'},\n"," {'text': 'i donbt like to peel prawns, i also dont like going shopping, running out of money and crawling troll the car looking for more',\n","  'sentiment': 'negative'},\n"," {'text': 'i like to peel prawns, i dont like shopping, out of money crawling car looking more',\n","  'sentiment': 'negative'},\n"," {'text': ' which case? I got a new one last week and I`m not thrilled at all with mine.',\n","  'sentiment': 'negative'},\n"," {'text': 'which case? I got a new one last week and I`m not thrilled at all with mine.',\n","  'sentiment': 'negative'},\n"," {'text': 'which case? I got new last and I`m not at all with mine.',\n","  'sentiment': 'negative'},\n"," {'text': ' Then you should check out http://twittersucks.com and connect with other tweeple who hate twitter',\n","  'sentiment': 'neutral'},\n"," {'text': 'Then you should check out http://twittersucks.com and connect with other tweeple World_Health_Organization hate twitter',\n","  'sentiment': 'neutral'},\n"," {'text': 'Then you should out http://twittersucks.com and connect with other tweeple hate twitter',\n","  'sentiment': 'neutral'},\n"," {'text': ' also bored at school, its my third freelesson( freistunde )',\n","  'sentiment': 'neutral'},\n"," {'text': 'also bored at school, information_technology my third freelesson( freistunde )',\n","  'sentiment': 'neutral'},\n"," {'text': 'also bored at school, its third freelesson( )',\n","  'sentiment': 'neutral'},\n"," {'text': ' hm... Both of us I guess...', 'sentiment': 'neutral'},\n"," {'text': 'hm... both of us I guess...', 'sentiment': 'neutral'},\n"," {'text': 'us I', 'sentiment': 'neutral'},\n"," {'text': ' it is ****...u have dissappointed me that past few days',\n","  'sentiment': 'negative'},\n"," {'text': 'it is ****...u take dissappointed me that past few days',\n","  'sentiment': 'negative'},\n"," {'text': 'it is ****...u have dissappointed that days',\n","  'sentiment': 'negative'},\n"," {'text': ' romance zero is funny', 'sentiment': 'positive'},\n"," {'text': 'romance zero is good_story', 'sentiment': 'positive'},\n"," {'text': 'romance zero is funny', 'sentiment': 'positive'},\n"," {'text': ' I`d rather do the early run..but I am a morning runner',\n","  'sentiment': 'neutral'},\n"," {'text': 'I`d rather do the early run..but I am a morning runner',\n","  'sentiment': 'neutral'},\n"," {'text': 'I`d the early run..but I am a morning runner',\n","  'sentiment': 'neutral'},\n"," {'text': 'Bah a coworker ran into work late and her bag smacked into my knee  it really hurts now',\n","  'sentiment': 'negative'},\n"," {'text': 'Bah a coworker ran into work late and her bag smacked into my knee it really hurts immediately',\n","  'sentiment': 'negative'},\n"," {'text': 'Bah a coworker ran into work late and her bag into my it really hurts now',\n","  'sentiment': 'negative'},\n"," {'text': 'will be back later.  http://plurk.com/p/rp3k7',\n","  'sentiment': 'neutral'},\n"," {'text': 'will be back later. http://plurk.com/p/rp3k7',\n","  'sentiment': 'neutral'},\n"," {'text': 'will back later. http://plurk.com/p/rp3k7', 'sentiment': 'neutral'},\n"," {'text': 'Aw. Torn ace of hearts  #Hunchback', 'sentiment': 'negative'},\n"," {'text': 'Aw. Torn wizard of hearts #Hunchback', 'sentiment': 'negative'},\n"," {'text': 'Aw. Torn ace of #Hunchback', 'sentiment': 'negative'},\n"," {'text': ' what fun are you speaking of?', 'sentiment': 'neutral'},\n"," {'text': 'what fun are you speaking of?', 'sentiment': 'neutral'},\n"," {'text': 'fun are you speaking of?', 'sentiment': 'neutral'},\n"," {'text': 'i lost all my friends, i`m alone and sleepy..i wanna go home',\n","  'sentiment': 'negative'},\n"," {'text': 'i lost all my friends, i`m alone and sleepy..i wanna go home',\n","  'sentiment': 'negative'},\n"," {'text': 'lost all my friends, i`m alone and sleepy..i wanna go home',\n","  'sentiment': 'negative'},\n"," {'text': ' haha yes', 'sentiment': 'neutral'},\n"," {'text': 'haha yes', 'sentiment': 'neutral'},\n"," {'text': 'haha yes', 'sentiment': 'neutral'},\n"," {'text': 'I give in to easily', 'sentiment': 'negative'},\n"," {'text': 'I give in to easy', 'sentiment': 'negative'},\n"," {'text': 'I give in', 'sentiment': 'negative'},\n"," {'text': 'What better way to spoil mum than to let her kick back and relax over a nice meal and a bottle of her favorite wine? Our wine was a red',\n","  'sentiment': 'positive'},\n"," {'text': 'What better way to spoil mum than to let her kick back and relax over a nice meal and a bottle of her favorite wine? Our wine comprise A red',\n","  'sentiment': 'positive'},\n"," {'text': 'way to mum than to let her kick back and relax over nice meal a bottle of her favorite Our wine was a red',\n","  'sentiment': 'positive'},\n"," {'text': 'mannnn..... _ got an iphone!!! im jealous....  http://bit.ly/NgnaR',\n","  'sentiment': 'negative'},\n"," {'text': 'mannnn..... _ got Associate_in_Nursing iphone!!! im jealous.... http://bit.ly/NgnaR',\n","  'sentiment': 'negative'},\n"," {'text': '_ got an im http://bit.ly/NgnaR', 'sentiment': 'negative'},\n"," {'text': 'Is at a photoshoot.', 'sentiment': 'neutral'},\n"," {'text': 'Is at amp photoshoot.', 'sentiment': 'neutral'},\n"," {'text': 'at a', 'sentiment': 'neutral'},\n"," {'text': '  He`s awesome... Have you worked with him before? He`s a good friend.',\n","  'sentiment': 'positive'},\n"," {'text': 'He`s awesome... Have you worked with him before? He`s a good friend.',\n","  'sentiment': 'positive'},\n"," {'text': 'He`s awesome... Have you worked with him He`s good friend.',\n","  'sentiment': 'positive'},\n"," {'text': 'Yay playing a show tonight! Boo it`s gonna soggy and I`m at work right before playing',\n","  'sentiment': 'neutral'},\n"," {'text': 'Yay playing a show tonight! Boo it`s gonna soggy and I`m at work right before playing',\n","  'sentiment': 'neutral'},\n"," {'text': 'Yay playing a show tonight! Boo it`s gonna soggy and I`m at right before playing',\n","  'sentiment': 'neutral'},\n"," {'text': 'Chilliin', 'sentiment': 'positive'},\n"," {'text': 'Chilliin', 'sentiment': 'positive'},\n"," {'text': 'Chilliin', 'sentiment': 'positive'},\n"," {'text': ' If you know such agent, do let me know', 'sentiment': 'neutral'},\n"," {'text': 'If you know such agent, do let me know', 'sentiment': 'neutral'},\n"," {'text': 'If you know such do let me know', 'sentiment': 'neutral'},\n"," {'text': 'I still smell of smoke  #kitchenfire', 'sentiment': 'neutral'},\n"," {'text': 'I still smell of weed #kitchenfire', 'sentiment': 'neutral'},\n"," {'text': 'I still smell smoke #kitchenfire', 'sentiment': 'neutral'},\n"," {'text': ' a celtics-lakers rematch sounds better don`t you think? lol',\n","  'sentiment': 'positive'},\n"," {'text': 'a celtics-lakers rematch sounds better don`t you think? lol',\n","  'sentiment': 'positive'},\n"," {'text': 'a rematch don`t you lol', 'sentiment': 'positive'},\n"," {'text': 'Anyone have an extra Keane ticket? I promise to buy you a drink and take rad pics for your FB / Blog / Flickr., etc',\n","  'sentiment': 'neutral'},\n"," {'text': 'Anyone have an extra Keane ticket? unity promise to buy you a wassail and take rad pics for your FB / Blog / Flickr., etc',\n","  'sentiment': 'neutral'},\n"," {'text': 'Anyone have an extra Keane ticket? I promise to a and take rad pics for your FB Blog',\n","  'sentiment': 'neutral'},\n"," {'text': \"'you can ride one, you can catch one, but its not summer til you pop open one'  ?\",\n","  'sentiment': 'neutral'},\n"," {'text': \"'you can ride one, you can catch one, but its non summer til you pop open one' ?\",\n","  'sentiment': 'neutral'},\n"," {'text': \"can ride one, you can catch one, but not summer til you pop open one' ?\",\n","  'sentiment': 'neutral'},\n"," {'text': ' she is good! so gor-juz yea i kno i asked her yesterday when we were at tha hospital if she talked to u and she said no',\n","  'sentiment': 'neutral'},\n"," {'text': 'she is good! and_then gor-juz yea i kno i asked her yesterday when we were at tha hospital if she talked to u and she said no',\n","  'sentiment': 'neutral'},\n"," {'text': 'she is good! so yea i kno i yesterday when were at tha hospital talked to she said no',\n","  'sentiment': 'neutral'},\n"," {'text': 'OK - I`m out of here for now. Just popped in to say Hi and check on things. I`ll probably head to the guttah later on tonight',\n","  'sentiment': 'neutral'},\n"," {'text': 'OK - I`m out of here for now. Just popped in to say Hi and check on things. I`ll probably head to the guttah afterwards on tonight',\n","  'sentiment': 'neutral'},\n"," {'text': 'OK - I`m here now. Just popped to say Hi check on things. I`ll probably head to the guttah later on tonight',\n","  'sentiment': 'neutral'},\n"," {'text': 'WOW, i AM REALLY MiSSiN THE FAM(iLY) TODAY. BADDD.',\n","  'sentiment': 'negative'},\n"," {'text': 'WOW, i atomic_number_95 REALLY MiSSiN THE FAM(iLY) TODAY. BADDD.',\n","  'sentiment': 'negative'},\n"," {'text': 'WOW, i AM REALLY MiSSiN THE FAM(iLY) TODAY. BADDD.',\n","  'sentiment': 'negative'},\n"," {'text': ' My sources say no', 'sentiment': 'neutral'},\n"," {'text': 'My rootage say no', 'sentiment': 'neutral'},\n"," {'text': 'My sources say no', 'sentiment': 'neutral'},\n"," {'text': 'I am sooo tired', 'sentiment': 'negative'},\n"," {'text': 'I am sooo hackneyed', 'sentiment': 'negative'},\n"," {'text': 'I sooo tired', 'sentiment': 'negative'},\n"," {'text': ' Hey, you change your twitter account, and you didn`t even tell me...',\n","  'sentiment': 'neutral'},\n"," {'text': 'Hey, you convert your twitter account, and you didn`t even tell me...',\n","  'sentiment': 'neutral'},\n"," {'text': 'change twitter account, you didn`t even tell me...',\n","  'sentiment': 'neutral'},\n"," {'text': ' THANK YYYYYYYYYOOOOOOOOOOUUUUU!', 'sentiment': 'positive'},\n"," {'text': 'give_thanks YYYYYYYYYOOOOOOOOOOUUUUU!', 'sentiment': 'positive'},\n"," {'text': 'THANK YYYYYYYYYOOOOOOOOOOUUUUU!', 'sentiment': 'positive'},\n"," {'text': ' lucky kid...i so wanna see loserville  pity im in oz....',\n","  'sentiment': 'positive'},\n"," {'text': 'lucky kid...i so wanna see loserville sympathize_with im in oz....',\n","  'sentiment': 'positive'},\n"," {'text': 'lucky so wanna see loserville pity im in oz....',\n","  'sentiment': 'positive'},\n"," {'text': 'fell asleep waiting for my ride!', 'sentiment': 'neutral'},\n"," {'text': 'fell asleep await for my ride!', 'sentiment': 'neutral'},\n"," {'text': 'fell asleep waiting my ride!', 'sentiment': 'neutral'},\n"," {'text': 'Sick. With a flu like thing.', 'sentiment': 'negative'},\n"," {'text': 'Sick. With a influenza like thing.', 'sentiment': 'negative'},\n"," {'text': 'Sick. With a flu like thing.', 'sentiment': 'negative'},\n"," {'text': 'Still no reply from  about my SimFinger problem  So no iRape parody video until I get a response, sorry guys',\n","  'sentiment': 'negative'},\n"," {'text': 'Still no reply from about my SimFinger trouble So no iRape parody video until I get a response, sorry guys',\n","  'sentiment': 'negative'},\n"," {'text': 'Still no reply from about SimFinger So no video until I a sorry',\n","  'sentiment': 'negative'},\n"," {'text': 'Happy Star Wars day everyone! and Enjoy the holiday (UK)',\n","  'sentiment': 'positive'},\n"," {'text': 'Happy Star Wars day everyone! and Enjoy the vacation (UK)',\n","  'sentiment': 'positive'},\n"," {'text': 'Happy Star Wars day and Enjoy the holiday (UK)',\n","  'sentiment': 'positive'},\n"," {'text': ' Miles from you   I`m in Essex so give me plenty of warning so I can arrive in time to get at least one of those free beers.',\n","  'sentiment': 'neutral'},\n"," {'text': 'Miles from you I`m in Essex so give me plenty of warning and_then I can arrive in time to get at least one of those free beers.',\n","  'sentiment': 'neutral'},\n"," {'text': 'Miles from you I`m Essex so give me plenty of so I arrive in time to get at least one of those free',\n","  'sentiment': 'neutral'},\n"," {'text': 'His snoring is so annoying n it keeps me from sleeping (like right now, lol) but I honestly wud miss it if it eva left  I love him.',\n","  'sentiment': 'neutral'},\n"," {'text': 'His snoring is and_so annoying n it keeps me from sleeping (like right now, lol) but I honestly wud miss it if it eva left I love him.',\n","  'sentiment': 'neutral'},\n"," {'text': 'His snoring so annoying n it keeps me from (like right now, lol) but I honestly wud miss it it eva left I him.',\n","  'sentiment': 'neutral'},\n"," {'text': 'i miss you bby      wish you were going tomorrow to make me do good.',\n","  'sentiment': 'negative'},\n"," {'text': 'i miss you bby wish you were going tomorrow to make_up me do good.',\n","  'sentiment': 'negative'},\n"," {'text': 'i miss bby wish were going tomorrow to make good.',\n","  'sentiment': 'negative'},\n"," {'text': ' Well what im working on isn`t QUITE ready to post about publicly (still beta testing) but its a cool new script I coded',\n","  'sentiment': 'positive'},\n"," {'text': 'Well what im working along isn`t QUITE ready to post about publicly (still beta testing) but its a cool new handwriting I coded',\n","  'sentiment': 'positive'},\n"," {'text': 'what im working on isn`t QUITE to post publicly (still testing) but its cool new script I coded',\n","  'sentiment': 'positive'},\n"," {'text': ' SWEEEEET - San Fran is awesome!!!!  Love it there',\n","  'sentiment': 'positive'},\n"," {'text': 'SWEEEEET - San Fran is awesome!!!! Love it there',\n","  'sentiment': 'positive'},\n"," {'text': 'SWEEEEET Fran awesome!!!! Love it there', 'sentiment': 'positive'},\n"," {'text': '_Mounce yes and it lasts way past my bedtime!',\n","  'sentiment': 'neutral'},\n"," {'text': '_Mounce yes and it end way past my bedtime!',\n","  'sentiment': 'neutral'},\n"," {'text': '_Mounce and it lasts way past my bedtime!', 'sentiment': 'neutral'},\n"," {'text': ' Hi  how are you doing ???  *just joined twitter...*',\n","  'sentiment': 'neutral'},\n"," {'text': 'Hi how exist you doing ??? *just joined twitter...*',\n","  'sentiment': 'neutral'},\n"," {'text': 'how are doing ??? *just twitter...*', 'sentiment': 'neutral'},\n"," {'text': 'waiting for sleeping pills to kick in... gonna be so tired at work tomorrow',\n","  'sentiment': 'negative'},\n"," {'text': 'waiting for sleeping pills to kick in... gonna be so tired at work tomorrow',\n","  'sentiment': 'negative'},\n"," {'text': 'waiting for sleeping pills to kick in... gonna be so at work tomorrow',\n","  'sentiment': 'negative'},\n"," {'text': 'eating ice cream and then getting ready for graduation.',\n","  'sentiment': 'neutral'},\n"," {'text': 'eating ice cream and then getting ready for graduation.',\n","  'sentiment': 'neutral'},\n"," {'text': 'eating and getting ready graduation.', 'sentiment': 'neutral'},\n"," {'text': 'Happy Mothers day to all you Mums out there',\n","  'sentiment': 'positive'},\n"," {'text': 'Happy Mothers daylight to all you Mums out there',\n","  'sentiment': 'positive'},\n"," {'text': 'Happy Mothers day to you out there', 'sentiment': 'positive'},\n"," {'text': ' CASEY`S GONE?!?! BUT WHY?! So, she piddled a little on the carpet. She`s prolly freaked cause it`s new. Can we get her back?',\n","  'sentiment': 'negative'},\n"," {'text': 'CASEY`S GONE?!?! BUT WHY?! So, she piddled a little on the carpet. She`s prolly freaked cause it`s new. Can we get her back?',\n","  'sentiment': 'negative'},\n"," {'text': 'CASEY`S GONE?!?! BUT WHY?! So, little on the carpet. She`s prolly freaked cause it`s new. Can we get her',\n","  'sentiment': 'negative'},\n"," {'text': ' hemp cloth is marvelous but unfortunately no',\n","  'sentiment': 'negative'},\n"," {'text': 'hemp cloth equal marvelous but unfortunately no',\n","  'sentiment': 'negative'},\n"," {'text': 'cloth marvelous but no', 'sentiment': 'negative'},\n"," {'text': 'Gonna read a story bout adam lambert online then bed. Nighty night',\n","  'sentiment': 'neutral'},\n"," {'text': 'Gonna read a story bout disco_biscuit lambert online then bed. Nighty night',\n","  'sentiment': 'neutral'},\n"," {'text': 'read a story bout adam lambert online night',\n","  'sentiment': 'neutral'},\n"," {'text': ' We saw that in none 3D - the baddie`s the best',\n","  'sentiment': 'positive'},\n"," {'text': 'We saw that in none 3D - the baddie`s the best',\n","  'sentiment': 'positive'},\n"," {'text': 'saw that in none 3D - the baddie`s the best',\n","  'sentiment': 'positive'},\n"," {'text': '4am. And Im on the beach. Pretty', 'sentiment': 'positive'},\n"," {'text': '4am. And Im on the beach. Pretty', 'sentiment': 'positive'},\n"," {'text': '4am. And Im on the beach.', 'sentiment': 'positive'},\n"," {'text': ' Certainly not Cheers than, huh?', 'sentiment': 'neutral'},\n"," {'text': 'Certainly non Cheers than, huh?', 'sentiment': 'neutral'},\n"," {'text': 'Certainly not than, huh?', 'sentiment': 'neutral'},\n"," {'text': \"1 week post my'horrible, traumatic jumping cholla accident.'-cholla`s next dirty trick:pieces are starting to emerge from my hand! Ouch!\",\n","  'sentiment': 'negative'},\n"," {'text': \"1 week post my'horrible, traumatic jumping Opuntia_cholla accident.'-cholla`s next dirty trick:pieces are starting to emerge from my hand! Ouch!\",\n","  'sentiment': 'negative'},\n"," {'text': \"1 week post my'horrible, cholla accident.'-cholla`s next trick:pieces are starting to from my hand! Ouch!\",\n","  'sentiment': 'negative'},\n"," {'text': 'i realy wanted to go out cause its so nice but everybodys busy',\n","  'sentiment': 'negative'},\n"," {'text': 'i realy wanted to go out cause its so nice but everybodys busy',\n","  'sentiment': 'negative'},\n"," {'text': 'i wanted to go out cause its so nice but everybodys busy',\n","  'sentiment': 'negative'},\n"," {'text': \" Awesome.  I`m down in Ocean Beach (if you know where that is.) By the way. 'YourBiggestFan' I`m a re-al big fan of you-rs.\",\n","  'sentiment': 'positive'},\n"," {'text': \"Awesome. I`m down in Ocean Beach (if you know where that is.) By the way. 'YourBiggestFan' I`m a re-al big fan of you-rs.\",\n","  'sentiment': 'positive'},\n"," {'text': \"Awesome. I`m in Ocean Beach you know where that is.) By way. 'YourBiggestFan' a big of you-rs.\",\n","  'sentiment': 'positive'},\n"," {'text': 'at least I get to watch over time  Let`s go Pens!!',\n","  'sentiment': 'neutral'},\n"," {'text': 'at least I get to watch over time Let`s go Pens!!',\n","  'sentiment': 'neutral'},\n"," {'text': 'at least get to watch over time Let`s go', 'sentiment': 'neutral'},\n"," {'text': ' cool i wear black most of the time when i go out',\n","  'sentiment': 'neutral'},\n"," {'text': 'cool i wear black most of the time when i go away',\n","  'sentiment': 'neutral'},\n"," {'text': 'wear black most of the when i go out', 'sentiment': 'neutral'},\n"," {'text': ' haha I do not know how to work blip apart from the obvious! thanks for reblipping my song  have a nice day ****',\n","  'sentiment': 'positive'},\n"," {'text': 'haha I do not cognize how to work blip apart from the obvious! thanks for reblipping my song have angstrom_unit nice day ****',\n","  'sentiment': 'positive'},\n"," {'text': 'do not know how to blip apart the obvious! thanks for reblipping my song have nice day',\n","  'sentiment': 'positive'},\n"," {'text': ' have a safe trip joshy poo.......you`ll knock them dead at your speech',\n","  'sentiment': 'positive'},\n"," {'text': 'have a safe trip joshy poo.......you`ll knock them dead at your speech',\n","  'sentiment': 'positive'},\n"," {'text': 'have a safe trip joshy poo.......you`ll knock them dead your speech',\n","  'sentiment': 'positive'},\n"," {'text': ' woof, I wish I was allowed to go', 'sentiment': 'positive'},\n"," {'text': 'woof, I indirect_request I was allowed to go',\n","  'sentiment': 'positive'},\n"," {'text': 'woof, I wish I was allowed to go', 'sentiment': 'positive'},\n"," {'text': 'if u have a friendster add me!!!!!!!!!        my email adress      add me  loco_crime_1st.com        add me leave some comment',\n","  'sentiment': 'neutral'},\n"," {'text': 'if u have a friendster add me!!!!!!!!! my email adress add me loco_crime_1st.com add me leave some input',\n","  'sentiment': 'neutral'},\n"," {'text': 'u a friendster my email adress add me add me leave some comment',\n","  'sentiment': 'neutral'},\n"," {'text': '  has tickets.......?', 'sentiment': 'neutral'},\n"," {'text': 'has tickets.......?', 'sentiment': 'neutral'},\n"," {'text': 'has tickets.......?', 'sentiment': 'neutral'},\n"," {'text': 'Thank you, Afrin Nasal Spray! Also, I got a giant teacup tonight!',\n","  'sentiment': 'positive'},\n"," {'text': 'Thank you, Afrin Nasal Spray! Also, I got a giant teacup tonight!',\n","  'sentiment': 'positive'},\n"," {'text': 'Thank you, Afrin Nasal Spray! Also, I got a giant teacup tonight!',\n","  'sentiment': 'positive'},\n"," {'text': ' ACSM. it`s unfathomable.  i think the other one .. and the .. is one that should be kept to the comfort of our bedrooms. yes?',\n","  'sentiment': 'neutral'},\n"," {'text': 'ACSM. it`s unfathomable. i think the other matchless .. and the .. is one that should be kept to the comfort of our bedrooms. yes?',\n","  'sentiment': 'neutral'},\n"," {'text': 'ACSM. it`s unfathomable. i one .. and the one that should kept comfort of our bedrooms.',\n","  'sentiment': 'neutral'},\n"," {'text': 'Aww, I love my daddy! He works 7 days a week almost all day and still tries to go to SF with all of us',\n","  'sentiment': 'positive'},\n"," {'text': 'Aww, I love my daddy! He works 7 days a week almost all day and still tries to go to SF with all of us',\n","  'sentiment': 'positive'},\n"," {'text': 'love my daddy! He works 7 a week all day and tries to go to SF with all of us',\n","  'sentiment': 'positive'},\n"," {'text': 'So many tests todayyy  I don`t feel confident about anyy.',\n","  'sentiment': 'negative'},\n"," {'text': 'So many tests todayyy I don`t feel confident about anyy.',\n","  'sentiment': 'negative'},\n"," {'text': 'So many todayyy I don`t confident about anyy.',\n","  'sentiment': 'negative'},\n"," {'text': 'graduation is done  im a little sad.. anyone want to hang out???',\n","  'sentiment': 'negative'},\n"," {'text': 'graduation is done im a little sad.. anyone want to hang out???',\n","  'sentiment': 'negative'},\n"," {'text': 'is done im a little sad.. anyone want to out???',\n","  'sentiment': 'negative'},\n"," {'text': ' hahaa your awesomee !', 'sentiment': 'positive'},\n"," {'text': 'hahaa your awesomee !', 'sentiment': 'positive'},\n"," {'text': 'your awesomee !', 'sentiment': 'positive'},\n"," {'text': 'holy smokes! star trek was freaking awesomeeeee',\n","  'sentiment': 'positive'},\n"," {'text': 'holy smokes! star trek was freaking awesomeeeee',\n","  'sentiment': 'positive'},\n"," {'text': 'holy smokes! star trek was freaking awesomeeeee',\n","  'sentiment': 'positive'},\n"," {'text': 'I hate Fallout 3 it keeps making me jump, I`m also low on health, money, ammo and food  don`t worry I`ll get through it.',\n","  'sentiment': 'neutral'},\n"," {'text': 'I hate Fallout 3 it keeps making me jump, I`m also low along health, money, ammo and food don`t worry I`ll get through it.',\n","  'sentiment': 'neutral'},\n"," {'text': 'I 3 it keeps making me I`m also low on health, ammo food don`t worry I`ll get through it.',\n","  'sentiment': 'neutral'},\n"," {'text': ' I had it! On my itunes, but then I lost all my songs.',\n","  'sentiment': 'neutral'},\n"," {'text': 'I had it! On my itunes, but then I lost all my songs.',\n","  'sentiment': 'neutral'},\n"," {'text': 'I had it! On my but then I lost all songs.',\n","  'sentiment': 'neutral'},\n"," {'text': 'What`s with the gloomy weather? The sun must be too tired to come out and play  heading to victoria gardens for some impulse buys haha',\n","  'sentiment': 'neutral'},\n"," {'text': 'What`s with the gloomy weather? The sun must be too tired to come out and play drift to victoria gardens for some impulse buys haha',\n","  'sentiment': 'neutral'},\n"," {'text': 'What`s with the gloomy The sun must be too tired to come out and heading to victoria gardens for impulse haha',\n","  'sentiment': 'neutral'},\n"," {'text': 'Not looking forward to next week: Maths, Geography, English and French exams, totalling 7 hours',\n","  'sentiment': 'negative'},\n"," {'text': 'Not looking forward to next week: Maths, Geography, English and French exams, totalling 7 hours',\n","  'sentiment': 'negative'},\n"," {'text': 'Not looking to next week: Geography, English and French 7 hours',\n","  'sentiment': 'negative'},\n"," {'text': ' Poor you  Get outside and sleep in the garden, the sun will do you good. But don`t forget suncream!!!',\n","  'sentiment': 'negative'},\n"," {'text': 'Poor you Get outside and sleep in the garden, the sun will do you good. But don`t forget suncream!!!',\n","  'sentiment': 'negative'},\n"," {'text': 'Poor you Get and sleep in the the sun will do you good. don`t suncream!!!',\n","  'sentiment': 'negative'},\n"," {'text': 'not well', 'sentiment': 'negative'},\n"," {'text': 'non well', 'sentiment': 'negative'},\n"," {'text': 'not', 'sentiment': 'negative'},\n"," {'text': ' Not a prob hun', 'sentiment': 'positive'},\n"," {'text': 'not a prob hun', 'sentiment': 'positive'},\n"," {'text': 'a prob hun', 'sentiment': 'positive'},\n"," {'text': 'at dads, watching some mtv and am going on sims2 in a minutee',\n","  'sentiment': 'neutral'},\n"," {'text': 'at dads, watching some mtv and am going on sims2 in a minutee',\n","  'sentiment': 'neutral'},\n"," {'text': 'at dads, some am going on sims2 in a minutee',\n","  'sentiment': 'neutral'},\n"," {'text': ' Absolutely', 'sentiment': 'neutral'},\n"," {'text': 'absolutely', 'sentiment': 'neutral'},\n"," {'text': 'Absolutely', 'sentiment': 'neutral'},\n"," {'text': ' what`s the matter chickadee?', 'sentiment': 'neutral'},\n"," {'text': 'what`s the affair chickadee?', 'sentiment': 'neutral'},\n"," {'text': 'what`s the chickadee?', 'sentiment': 'neutral'},\n"," {'text': ' hey mia!  totally adore your music.  when will your cd be out?',\n","  'sentiment': 'positive'},\n"," {'text': 'hey mia! totally adore your music. when will your cd be out?',\n","  'sentiment': 'positive'},\n"," {'text': 'hey totally adore music. when will your cd',\n","  'sentiment': 'positive'},\n"," {'text': 'Shopping. Cleaning. BMFing. Webcam chatting with nephews. Nothing spesh, but a good bank holiday Monday nonetheless',\n","  'sentiment': 'positive'},\n"," {'text': 'Shopping. Cleaning. BMFing. Webcam chatting with nephews. Nothing spesh, but a good bank holiday Monday however',\n","  'sentiment': 'positive'},\n"," {'text': 'Shopping. Cleaning. Webcam chatting with nephews. spesh, but a good bank holiday Monday',\n","  'sentiment': 'positive'},\n"," {'text': ' =O you need to ask him something? Lmao I love him too',\n","  'sentiment': 'positive'},\n"," {'text': '=O you need to ask him something? Lmao I love him too',\n","  'sentiment': 'positive'},\n"," {'text': '=O you need to ask him something? Lmao love him too',\n","  'sentiment': 'positive'},\n"," {'text': ' those splinters look very painful...but you were being very heroic saving mr. Pickle',\n","  'sentiment': 'negative'},\n"," {'text': 'those splinters look very painful...but you were existence very heroic saving mr. Pickle',\n","  'sentiment': 'negative'},\n"," {'text': 'those look very painful...but you being very heroic mr. Pickle',\n","  'sentiment': 'negative'},\n"," {'text': ' why are you sad?', 'sentiment': 'negative'},\n"," {'text': 'why are you sad?', 'sentiment': 'negative'},\n"," {'text': 'why are you sad?', 'sentiment': 'negative'},\n"," {'text': ' Nice to see you tweeting!  It`s Sunday 10th May and we`re celebrating Mother`s Day here today. So be nice to yer Mom',\n","  'sentiment': 'positive'},\n"," {'text': 'Nice to see you tweeting! It`s William_Ashley_Sunday 10th May and we`re celebrating Mother`s Day here today. So be nice to yer ma',\n","  'sentiment': 'positive'},\n"," {'text': 'Nice to see you It`s Sunday 10th May we`re Mother`s Day here today. So be yer Mom',\n","  'sentiment': 'positive'},\n"," {'text': 'decided 2 trans frm relaxed 2 natural hair but i wish my whole head looked like my roots.  Age of the instant gratification....',\n","  'sentiment': 'positive'},\n"," {'text': 'decided 2 trans frm relaxed 2 natural hair but i wish my entirely head looked like my roots. Age of the instant gratification....',\n","  'sentiment': 'positive'},\n"," {'text': '2 relaxed 2 natural hair wish my whole head looked my of the instant',\n","  'sentiment': 'positive'},\n"," {'text': ' Namaskar & Namaste r both the same. Marathi people say Namaskar! its a marathi word.... should i ? ...naaaah !',\n","  'sentiment': 'neutral'},\n"," {'text': 'Namaskar & Namaste r both the same. Marathi people say Namaskar! its a marathi word.... should i ? ...naaaah !',\n","  'sentiment': 'neutral'},\n"," {'text': 'Namaskar & r both the same. say Namaskar! a marathi should i ? ...naaaah !',\n","  'sentiment': 'neutral'},\n"," {'text': ' Congrats!  I cuss like that in a matter of minutes, But didn`t know until now there is a reward for it.',\n","  'sentiment': 'neutral'},\n"," {'text': 'Congrats! I cuss like that in a matter of minutes, But didn`t know until now there is a reward for it.',\n","  'sentiment': 'neutral'},\n"," {'text': 'Congrats! cuss like that a of But didn`t know until now there is a reward for it.',\n","  'sentiment': 'neutral'},\n"," {'text': 'Humous and Dorito`s.... Oh yes', 'sentiment': 'neutral'},\n"," {'text': 'Humous and Dorito`s.... Oh yes', 'sentiment': 'neutral'},\n"," {'text': 'Humous and Dorito`s.... Oh yes', 'sentiment': 'neutral'},\n"," {'text': 'missed all the awesome weather, because she was in a movie!',\n","  'sentiment': 'negative'},\n"," {'text': 'missed all the awesome weather, because she was in a movie!',\n","  'sentiment': 'negative'},\n"," {'text': 'all the awesome weather, because she was in a movie!',\n","  'sentiment': 'negative'},\n"," {'text': 'Today is going to be a normal day for I hope. We had a group of pilots from a large airline come in last night so it was too much drink',\n","  'sentiment': 'neutral'},\n"," {'text': 'Today is going to be a normal day for I hope. We had a group of pilots from a large airline_business come in last night so it was too much drinkable',\n","  'sentiment': 'neutral'},\n"," {'text': 'Today going to be normal I hope. We had a group of pilots from a large airline come last night so it too',\n","  'sentiment': 'neutral'},\n"," {'text': 'These kids are terrible! If I was in Good Evans, I`d call Childline',\n","  'sentiment': 'negative'},\n"," {'text': 'These kids exist terrible! If I was in Good Evans, I`d call Childline',\n","  'sentiment': 'negative'},\n"," {'text': 'kids are terrible! If I Good I`d call Childline',\n","  'sentiment': 'negative'},\n"," {'text': 'Unfortunatley, AerLingus no longer fly to Copenhagen so we`re have to fly Ryanair to Billund and drive up to Copenhagen one of the days!',\n","  'sentiment': 'negative'},\n"," {'text': 'Unfortunatley, AerLingus no recollective fly to Copenhagen so we`re have to fly Ryanair to Billund and drive up to Copenhagen one of the days!',\n","  'sentiment': 'negative'},\n"," {'text': 'Unfortunatley, AerLingus no longer fly to Copenhagen so to fly Ryanair to Billund drive up to one of the days!',\n","  'sentiment': 'negative'},\n"," {'text': ' What`s sad is that I actually had to google that term. That sucks, tho.',\n","  'sentiment': 'negative'},\n"," {'text': 'What`s sad is that unity actually had to google that term. That sucks, tho.',\n","  'sentiment': 'negative'},\n"," {'text': 'What`s is that I google that term. That', 'sentiment': 'negative'},\n"," {'text': 'Hate fighting', 'sentiment': 'negative'},\n"," {'text': 'Hate combat', 'sentiment': 'negative'},\n"," {'text': 'Hate fighting', 'sentiment': 'negative'},\n"," {'text': ' I watched that too!!! I didnt want her to win, but she put up a good fight..lol',\n","  'sentiment': 'neutral'},\n"," {'text': 'I watched that too!!! I didnt lack her to win, but she put up a good fight..lol',\n","  'sentiment': 'neutral'},\n"," {'text': 'I watched that too!!! I didnt want put a good fight..lol',\n","  'sentiment': 'neutral'},\n"," {'text': 'Car-warmed Sprite tastes like sore throat',\n","  'sentiment': 'negative'},\n"," {'text': 'Car-warmed Sprite tastes like sore pharynx',\n","  'sentiment': 'negative'},\n"," {'text': 'Car-warmed Sprite tastes like sore throat',\n","  'sentiment': 'negative'},\n"," {'text': 'Just came 11th in cross country and beat dumbo',\n","  'sentiment': 'neutral'},\n"," {'text': 'Just came 11th in crabby country and beat dumbo',\n","  'sentiment': 'neutral'},\n"," {'text': 'Just came in cross country and beat dumbo', 'sentiment': 'neutral'},\n"," {'text': 'Candle wax is very enjoyable.', 'sentiment': 'positive'},\n"," {'text': 'Candle mount is very enjoyable.', 'sentiment': 'positive'},\n"," {'text': 'Candle wax is very enjoyable.', 'sentiment': 'positive'},\n"," {'text': ' She`s unassuming and unpretentious. She`s just, as. I suppose that`s why she`s so endearing--because we can relate to her',\n","  'sentiment': 'positive'},\n"," {'text': 'She`s unassuming and unpretentious. She`s just, as. I suppose that`s why she`s so endearing--because we can relate to her',\n","  'sentiment': 'positive'},\n"," {'text': 'She`s unpretentious. She`s just, as. I suppose that`s why she`s so endearing--because we can relate her',\n","  'sentiment': 'positive'},\n"," {'text': 'tomorrow valeria`s lunch!!! going to get my hair done but im arraving late   got my cousins babtizm or whatever you spell it',\n","  'sentiment': 'neutral'},\n"," {'text': 'tomorrow valeria`s lunch!!! going to get my hair done but im arraving late got my cousins babtizm or whatever you spell information_technology',\n","  'sentiment': 'neutral'},\n"," {'text': 'tomorrow lunch!!! going to get hair done but late my cousins babtizm whatever you it',\n","  'sentiment': 'neutral'},\n"," {'text': 'goooooddd morning tweets!!  week three OF my workout. did i mention i got my new glasses yesterday?!?',\n","  'sentiment': 'positive'},\n"," {'text': 'goooooddd morning tweets!! week three OF my workout. make i mention i got my new glasses yesterday?!?',\n","  'sentiment': 'positive'},\n"," {'text': 'morning tweets!! week OF my workout. did i mention i got my glasses yesterday?!?',\n","  'sentiment': 'positive'},\n"," {'text': ' me too. I hate my computer so much..', 'sentiment': 'negative'},\n"," {'text': 'me too. I hate my computer sol much..', 'sentiment': 'negative'},\n"," {'text': 'me too. my computer', 'sentiment': 'negative'},\n"," {'text': ' fine! Going to do my big walk today 20 or so miles',\n","  'sentiment': 'positive'},\n"," {'text': 'fine! Going to do my big walk today 20 or so miles',\n","  'sentiment': 'positive'},\n"," {'text': 'fine! Going to do my big walk 20 or so', 'sentiment': 'positive'},\n"," {'text': 'I WANT RED CRUISERS!!  i don`t like the other ones. LMFAO!',\n","  'sentiment': 'negative'},\n"," {'text': 'I WANT RED CRUISERS!! i don`t like the other ones. LMFAO!',\n","  'sentiment': 'negative'},\n"," {'text': 'WANT RED i don`t like the ones. LMFAO!', 'sentiment': 'negative'},\n"," {'text': 'Mmmmmmmm... ? it in the morning', 'sentiment': 'neutral'},\n"," {'text': 'Mmmmmmmm... ? IT in the morning', 'sentiment': 'neutral'},\n"," {'text': 'in the', 'sentiment': 'neutral'},\n"," {'text': ' me neither', 'sentiment': 'neutral'},\n"," {'text': 'me neither', 'sentiment': 'neutral'},\n"," {'text': 'me neither', 'sentiment': 'neutral'},\n"," {'text': 'Has about 10 hours work to do, on a Sunday. Boo. I will find time for a two hour lunchbreak though. Yeah',\n","  'sentiment': 'neutral'},\n"," {'text': 'Has about 10 hours work to do, on a Sunday. Boo. I will find time for a two hour lunchbreak though. Yeah',\n","  'sentiment': 'neutral'},\n"," {'text': 'Has 10 work to do, a Sunday. I will find time for a two hour lunchbreak Yeah',\n","  'sentiment': 'neutral'},\n"," {'text': 'Bugger. forgot I still have washing in my machine',\n","  'sentiment': 'negative'},\n"," {'text': 'Bugger. forgot I still have washing in my machine',\n","  'sentiment': 'negative'},\n"," {'text': 'Bugger. forgot have washing in my machine',\n","  'sentiment': 'negative'},\n"," {'text': '_Laurie sending love, blessings & healing thoughts to you & family  peace',\n","  'sentiment': 'positive'},\n"," {'text': '_Laurie sending love, blessings & cure thoughts to you & family peace',\n","  'sentiment': 'positive'},\n"," {'text': '_Laurie sending love, blessings & healing thoughts you & family peace',\n","  'sentiment': 'positive'},\n"," {'text': 'My back hurts...really bad', 'sentiment': 'negative'},\n"," {'text': 'My back hurts...really bad', 'sentiment': 'negative'},\n"," {'text': 'My back hurts...really', 'sentiment': 'negative'},\n"," {'text': ' ah yes, I know that feeling', 'sentiment': 'neutral'},\n"," {'text': 'ah yes, ane know that feeling', 'sentiment': 'neutral'},\n"," {'text': 'ah yes, I know that feeling', 'sentiment': 'neutral'},\n"," {'text': 'Night of the cookers with my dad', 'sentiment': 'neutral'},\n"," {'text': 'Night of the cooker with my dad', 'sentiment': 'neutral'},\n"," {'text': 'Night of the cookers with my dad', 'sentiment': 'neutral'},\n"," {'text': 'My modem has been offline for a week now... God bless the 3g network. Tim just left... Again!! May schedule has been brutal',\n","  'sentiment': 'negative'},\n"," {'text': 'My modem has been offline for a week now... God bless the 3g network. Tim just left... Again!! May schedule has constitute brutal',\n","  'sentiment': 'negative'},\n"," {'text': 'My modem has been offline for a week God bless the network. Tim left... Again!! May schedule has been brutal',\n","  'sentiment': 'negative'},\n"," {'text': ' Nope I am in Coquitlam', 'sentiment': 'neutral'},\n"," {'text': 'Nope I am in Coquitlam', 'sentiment': 'neutral'},\n"," {'text': 'I am in Coquitlam', 'sentiment': 'neutral'},\n"," {'text': ' Had parent teacher thing yesterday!! So boring going to skl on saturday!!  lol',\n","  'sentiment': 'negative'},\n"," {'text': 'Had parent teacher thing yesterday!! So boring going to skl on saturday!! lol',\n","  'sentiment': 'negative'},\n"," {'text': 'Had parent teacher thing yesterday!! So going skl on saturday!! lol',\n","  'sentiment': 'negative'},\n"," {'text': '  #lichfield #tweetup sounds like fun  Hope to see you and everyone else there!',\n","  'sentiment': 'positive'},\n"," {'text': '#lichfield #tweetup sounds like fun Bob_Hope to see you and everyone else there!',\n","  'sentiment': 'positive'},\n"," {'text': '#lichfield #tweetup sounds like Hope see and else there!',\n","  'sentiment': 'positive'},\n"," {'text': 'Big booming thunder storm almost here.  Maybe we can all go home early???  Ah... probably not.',\n","  'sentiment': 'neutral'},\n"," {'text': 'Big booming thunder storm almost here. Maybe we can all go home_plate early??? Ah... probably not.',\n","  'sentiment': 'neutral'},\n"," {'text': 'Big booming almost here. Maybe we can all go early??? Ah... probably not.',\n","  'sentiment': 'neutral'},\n"," {'text': 'Few Bevvies 2day in twn..great on a day off!!',\n","  'sentiment': 'positive'},\n"," {'text': 'Few Bevvies 2day in twn..great on ampere day off!!',\n","  'sentiment': 'positive'},\n"," {'text': 'Few Bevvies in twn..great a day', 'sentiment': 'positive'},\n"," {'text': 'first night in myers. just not the same w/out lydia!  but i`m actually excited about this summer!',\n","  'sentiment': 'positive'},\n"," {'text': 'first night in myers. just not the same w/out lydia! but i`m actually excited about this summer!',\n","  'sentiment': 'positive'},\n"," {'text': 'first night in myers. not the w/out lydia! but i`m actually excited about this summer!',\n","  'sentiment': 'positive'},\n"," {'text': ' good morning', 'sentiment': 'positive'},\n"," {'text': 'good dayspring', 'sentiment': 'positive'},\n"," {'text': 'good morning', 'sentiment': 'positive'},\n"," {'text': ' its the best show EVER!', 'sentiment': 'positive'},\n"," {'text': 'its the best show EVER!', 'sentiment': 'positive'},\n"," {'text': 'its EVER!', 'sentiment': 'positive'},\n"," {'text': 'URL in previous post (to timer job) should be http://bit.ly/a4Fdb. I`d removed space which messed up URL.  ^ES',\n","  'sentiment': 'negative'},\n"," {'text': 'URL in previous post (to timer job) should be http://bit.ly/a4Fdb. I`d removed space which messed up URL. ^ES',\n","  'sentiment': 'negative'},\n"," {'text': 'URL in previous post (to timer job) be http://bit.ly/a4Fdb. I`d removed space which messed up URL. ^ES',\n","  'sentiment': 'negative'},\n"," {'text': 'i think iv hurt my tooth  and eilish and cassie are having a drawing competiton to draw cookies and pineapples haha :L .',\n","  'sentiment': 'neutral'},\n"," {'text': 'i think iv hurt my tooth and eilish and cassie are having a drawing competiton to draw cookies and pineapples haha :L .',\n","  'sentiment': 'neutral'},\n"," {'text': 'i think iv hurt tooth eilish cassie having a drawing competiton to draw and pineapples haha :L .',\n","  'sentiment': 'neutral'},\n"," {'text': ' I want to know when the auditions are Mander! Text or...reply please!',\n","  'sentiment': 'neutral'},\n"," {'text': 'I want to know when the auditory_sense are Mander! Text or...reply please!',\n","  'sentiment': 'neutral'},\n"," {'text': 'I want to know when the auditions Mander! Text or...reply please!',\n","  'sentiment': 'neutral'},\n"," {'text': 'or even NOOOOO NOT THE SECRET NAMEREBECCA PLEASE',\n","  'sentiment': 'negative'},\n"," {'text': 'or fifty-fifty NOOOOO NOT THE SECRET NAMEREBECCA PLEASE',\n","  'sentiment': 'negative'},\n"," {'text': 'or NOOOOO NOT THE SECRET NAMEREBECCA PLEASE',\n","  'sentiment': 'negative'},\n"," {'text': ' I miss my neice  can`t wait to see her bad n grown ****! Lol',\n","  'sentiment': 'negative'},\n"," {'text': 'I miss my neice can`t wait to see her bad n grown ****! Lol',\n","  'sentiment': 'negative'},\n"," {'text': 'miss neice can`t wait to her n ****! Lol', 'sentiment': 'negative'},\n"," {'text': 'i need to get my computer fixed', 'sentiment': 'neutral'},\n"," {'text': 'i pauperization to get my computer fixed', 'sentiment': 'neutral'},\n"," {'text': 'i need to my fixed', 'sentiment': 'neutral'},\n"," {'text': 'really hopes her car`s illness is not terminal...',\n","  'sentiment': 'negative'},\n"," {'text': 'really hopes her car`s illness is not terminal...',\n","  'sentiment': 'negative'},\n"," {'text': 'really hopes not terminal...', 'sentiment': 'negative'},\n"," {'text': 'All the cool people I want to find for following today are #English, and I guess the English don`t tweet.',\n","  'sentiment': 'neutral'},\n"," {'text': 'All the cool people I want to find for following today are #English, and I guess the English_language don`t tweet.',\n","  'sentiment': 'neutral'},\n"," {'text': 'All the cool people I want to find for following today are #English, guess the',\n","  'sentiment': 'neutral'},\n"," {'text': ' no sir...i woulda put honey...but i don`t have any',\n","  'sentiment': 'neutral'},\n"," {'text': 'no sir...i woulda put honey...but i don`t have any',\n","  'sentiment': 'neutral'},\n"," {'text': 'no sir...i put honey...but i don`t have any',\n","  'sentiment': 'neutral'},\n"," {'text': 'who watched X-men origins: wolverine? i totally loved it! haha',\n","  'sentiment': 'positive'},\n"," {'text': 'who watched X-men origins: wolverine? i totally enjoy it! haha',\n","  'sentiment': 'positive'},\n"," {'text': 'who watched X-men origins: wolverine? i it!',\n","  'sentiment': 'positive'},\n"," {'text': ' I VOTED!!! do u have a personal myspace? i keep talking to fakes   i <3 you. u helped me thru the hrdest time of my life! (: x',\n","  'sentiment': 'positive'},\n"," {'text': 'I VOTED!!! do u have angstrom personal myspace? i keep talking to fakes i <3 you. u helped me thru the hrdest time of my life! (: disco_biscuit',\n","  'sentiment': 'positive'},\n"," {'text': 'I VOTED!!! u have a myspace? i keep talking to fakes i <3 you. u helped me thru hrdest time of life! x',\n","  'sentiment': 'positive'},\n"," {'text': ' I`m sad that I missed you guys last night!',\n","  'sentiment': 'negative'},\n"," {'text': 'I`m deplorable that I missed you guys last night!',\n","  'sentiment': 'negative'},\n"," {'text': 'I`m sad that I missed you guys last night!',\n","  'sentiment': 'negative'},\n"," {'text': 'Finally got a call for marriage counseling 3 days late....',\n","  'sentiment': 'neutral'},\n"," {'text': 'Finally got a call for marriage counsel 3 days late....',\n","  'sentiment': 'neutral'},\n"," {'text': 'Finally got a for marriage 3 days late....',\n","  'sentiment': 'neutral'},\n"," {'text': ' ok then', 'sentiment': 'neutral'},\n"," {'text': 'Sooner_State then', 'sentiment': 'neutral'},\n"," {'text': 'ok then', 'sentiment': 'neutral'},\n"," {'text': '_420 why baby?', 'sentiment': 'neutral'},\n"," {'text': '_420 wherefore baby?', 'sentiment': 'neutral'},\n"," {'text': '_420', 'sentiment': 'neutral'},\n"," {'text': 'today was the last day of high school for me and i ended up going home sick! ... stupid dead rats',\n","  'sentiment': 'negative'},\n"," {'text': 'today was the last day of high school for me and i finish up going national sick! ... stupid dead rats',\n","  'sentiment': 'negative'},\n"," {'text': 'today was the last day of high school for and ended up going home sick! ... stupid dead rats',\n","  'sentiment': 'negative'},\n"," {'text': 'We`re having an impromptu pool party... Except I don`t know how to swim so I can`t get in',\n","  'sentiment': 'neutral'},\n"," {'text': 'We`re having an impromptu pool party... Except I don`t know how to float so I can`t get in',\n","  'sentiment': 'neutral'},\n"," {'text': 'having an pool party... Except don`t how swim so I can`t get in',\n","  'sentiment': 'neutral'},\n"," {'text': 'lost my tooth 2day whilst i was eating gum...oww',\n","  'sentiment': 'negative'},\n"," {'text': 'lost my tooth 2day whilst unity was eating gum...oww',\n","  'sentiment': 'negative'},\n"," {'text': 'lost my tooth 2day was gum...oww', 'sentiment': 'negative'},\n"," {'text': 'happy 1 year! <3', 'sentiment': 'positive'},\n"," {'text': 'happy unity year! <3', 'sentiment': 'positive'},\n"," {'text': '1 <3', 'sentiment': 'positive'},\n"," {'text': 'Oh, I HELLA forgot to say my official good morning  Like to hear it? Here it go! Goooooooooooood Morrrrrrrrning Twitterville! Lol',\n","  'sentiment': 'positive'},\n"," {'text': 'Oh, ane HELLA forgot to say my official full morning Like to hear it? Here it go! Goooooooooooood Morrrrrrrrning Twitterville! Lol',\n","  'sentiment': 'positive'},\n"," {'text': 'Oh, I HELLA forgot to say my official morning Like to hear it? Here go! Goooooooooooood Morrrrrrrrning Twitterville! Lol',\n","  'sentiment': 'positive'},\n"," {'text': ' *phew*  Will make a note in case anyone else runs into the same issueÃ¯Â¿Â½',\n","  'sentiment': 'neutral'},\n"," {'text': '*phew* Will make a short_letter in case anyone else runs into the same issueÃ¯Â¿Â½',\n","  'sentiment': 'neutral'},\n"," {'text': '*phew* Will make a note in case anyone else runs into issueÃ¯Â¿Â½',\n","  'sentiment': 'neutral'},\n"," {'text': '  WHAT ABOUT ME ??  I VOTE EVERY DAY FOR YOU !!!!!',\n","  'sentiment': 'negative'},\n"," {'text': 'WHAT ABOUT ME ?? I VOTE EVERY DAY FOR YOU !!!!!',\n","  'sentiment': 'negative'},\n"," {'text': 'WHAT ABOUT ME ?? VOTE EVERY DAY YOU !!!!!',\n","  'sentiment': 'negative'},\n"," {'text': 'I`m starving!! This diet is killing me but I can`t eat after 8pm',\n","  'sentiment': 'negative'},\n"," {'text': 'I`m starving!! This diet is stamp_out me but I can`t eat after 8pm',\n","  'sentiment': 'negative'},\n"," {'text': 'I`m starving!! This is killing me but I can`t eat after 8pm',\n","  'sentiment': 'negative'},\n"," {'text': ' i talk to you', 'sentiment': 'neutral'},\n"," {'text': 'i talk to you', 'sentiment': 'neutral'},\n"," {'text': 'i talk you', 'sentiment': 'neutral'},\n"," {'text': 'im soo bored...im deffo missing my music channels',\n","  'sentiment': 'negative'},\n"," {'text': 'im soo bored...im deffo missing my euphony channels',\n","  'sentiment': 'negative'},\n"," {'text': 'im soo bored...im deffo missing music channels',\n","  'sentiment': 'negative'},\n"," {'text': ' nite nite bday girl  have fun at concert',\n","  'sentiment': 'positive'},\n"," {'text': 'nite nite bday girl have fun at concert', 'sentiment': 'positive'},\n"," {'text': 'nite nite bday girl have fun at concert', 'sentiment': 'positive'},\n"," {'text': 'Had nicotine replacement patch on for 4 hours. So far, so good, but I did sleep for most of those 4 hours. Getting a bit twitchy now',\n","  'sentiment': 'neutral'},\n"," {'text': 'Had nicotine replacement patch on for 4 hours. So far, so good, but I did sleep for most of those 4 hours. Getting a routine twitchy now',\n","  'sentiment': 'neutral'},\n"," {'text': 'Had replacement for 4 far, so good, I did sleep for most of those 4 hours. Getting bit twitchy now',\n","  'sentiment': 'neutral'},\n"," {'text': '_Sanderson What`s with Twatter lately?  Either I can`t get on or the replies don`t turn up!',\n","  'sentiment': 'neutral'},\n"," {'text': '_Sanderson What`s with Twatter lately? Either I can`t get on or the replies don`t turn up!',\n","  'sentiment': 'neutral'},\n"," {'text': '_Sanderson What`s with Twatter lately? Either can`t get on or replies don`t turn',\n","  'sentiment': 'neutral'},\n"," {'text': 'should be sleeping.  lost my voice a couple day ago.',\n","  'sentiment': 'negative'},\n"," {'text': 'should be sleeping. lost my voice a couple day ago.',\n","  'sentiment': 'negative'},\n"," {'text': 'should be sleeping. my voice a couple day ago.',\n","  'sentiment': 'negative'},\n"," {'text': 'http://twitpic.com/66xlm -  hate when my PARKED car gets hit',\n","  'sentiment': 'negative'},\n"," {'text': 'http://twitpic.com/66xlm - hate when my parked car gets hit',\n","  'sentiment': 'negative'},\n"," {'text': 'http://twitpic.com/66xlm - hate when my PARKED car gets hit',\n","  'sentiment': 'negative'},\n"," {'text': ' I`ve heard this fall. I`m waiting too!', 'sentiment': 'neutral'},\n"," {'text': 'I`ve heard this fall. I`m waiting too!', 'sentiment': 'neutral'},\n"," {'text': 'this fall. I`m too!', 'sentiment': 'neutral'},\n"," {'text': ' more nightmares?  *huggles*', 'sentiment': 'neutral'},\n"," {'text': 'Sir_Thomas_More nightmares? *huggles*', 'sentiment': 'neutral'},\n"," {'text': 'more', 'sentiment': 'neutral'},\n"," {'text': 'I AM SUCH A CREEPER  I feel disappointed because of it. **** my cyberstalking skills   the internet = no more privacy.',\n","  'sentiment': 'negative'},\n"," {'text': 'one AM SUCH A CREEPER I feel disappointed because of it. **** my cyberstalking skills the internet = no more privacy.',\n","  'sentiment': 'negative'},\n"," {'text': 'I AM SUCH A I because of it. **** my cyberstalking = no more privacy.',\n","  'sentiment': 'negative'},\n"," {'text': 'going to bed its late and I have headache',\n","  'sentiment': 'negative'},\n"," {'text': 'going to bed its later and I have headache',\n","  'sentiment': 'negative'},\n"," {'text': 'going to bed its and have headache', 'sentiment': 'negative'},\n"," {'text': 'happy mother`s day to all moms out there...',\n","  'sentiment': 'positive'},\n"," {'text': 'happy mother`s daylight to all moms out there...',\n","  'sentiment': 'positive'},\n"," {'text': 'happy mother`s all out there...', 'sentiment': 'positive'},\n"," {'text': 'Grabbing coffee from  then making mom breakfast',\n","  'sentiment': 'neutral'},\n"," {'text': 'Grabbing coffee from then making mom breakfast',\n","  'sentiment': 'neutral'},\n"," {'text': 'Grabbing coffee then mom breakfast', 'sentiment': 'neutral'},\n"," {'text': 'im thinking that im going to have fun tonight....and maybe some changes are coming',\n","  'sentiment': 'positive'},\n"," {'text': 'im thinking that im going to have play tonight....and maybe some changes are coming',\n","  'sentiment': 'positive'},\n"," {'text': 'im thinking im going to have fun maybe some changes are coming',\n","  'sentiment': 'positive'},\n"," {'text': ' thanks. before the major chop.', 'sentiment': 'neutral'},\n"," {'text': 'thanks. before the John_R._Major chop.', 'sentiment': 'neutral'},\n"," {'text': 'thanks. before the major', 'sentiment': 'neutral'},\n"," {'text': ' Haha I know, I cant handle the fame!  and thank you!',\n","  'sentiment': 'positive'},\n"," {'text': 'Haha I know, I cant handle the fame! and thank you!',\n","  'sentiment': 'positive'},\n"," {'text': 'Haha I know, I handle the fame! and thank you!',\n","  'sentiment': 'positive'},\n"," {'text': 'just got up and updated my ipod', 'sentiment': 'neutral'},\n"," {'text': 'just buzz_off up and updated my ipod', 'sentiment': 'neutral'},\n"," {'text': 'just got and updated my ipod', 'sentiment': 'neutral'},\n"," {'text': ' yes! sober HAHAHA tanghaling tapat dude! haha WILD. i don`t knowwww  plan plan  before you go to US!',\n","  'sentiment': 'positive'},\n"," {'text': 'yes! sober HAHAHA tanghaling tapat dude! haha WILD. i don`t knowwww plan plan before you go to US!',\n","  'sentiment': 'positive'},\n"," {'text': 'yes! sober HAHAHA dude! haha WILD. i don`t knowwww plan before to US!',\n","  'sentiment': 'positive'},\n"," {'text': ' We never miss ICarly - my son has a huge crush on Miranda',\n","  'sentiment': 'positive'},\n"," {'text': 'We never miss ICarly - my son has a vast crush on Miranda',\n","  'sentiment': 'positive'},\n"," {'text': 'We never miss ICarly my son has a huge crush Miranda',\n","  'sentiment': 'positive'},\n"," {'text': 'Saw James carville in the store today. His head is really that bald',\n","  'sentiment': 'neutral'},\n"," {'text': 'Saw James carville in the store today. His head is really that bald',\n","  'sentiment': 'neutral'},\n"," {'text': 'Saw in the store today. His head is really bald',\n","  'sentiment': 'neutral'},\n"," {'text': 'yellow for   ? http://blip.fm/~5z05g', 'sentiment': 'neutral'},\n"," {'text': 'yellow for ? http://blip.fm/~5z05g', 'sentiment': 'neutral'},\n"," {'text': 'yellow ?', 'sentiment': 'neutral'},\n"," {'text': ' which means you`re just going to have to come back to vancouver and have it our way! hahah',\n","  'sentiment': 'neutral'},\n"," {'text': 'which means you`re just going to take to come back to vancouver and have it our way! hahah',\n","  'sentiment': 'neutral'},\n"," {'text': 'which means going to have to come to vancouver and way! hahah',\n","  'sentiment': 'neutral'},\n"," {'text': 'Feeling smooth like chrome', 'sentiment': 'positive'},\n"," {'text': 'Feeling unruffled like chrome', 'sentiment': 'positive'},\n"," {'text': 'Feeling like chrome', 'sentiment': 'positive'},\n"," {'text': 'Ew traffic', 'sentiment': 'negative'},\n"," {'text': 'Ew dealings', 'sentiment': 'negative'},\n"," {'text': 'Ew', 'sentiment': 'negative'},\n"," {'text': 'downloading songs while trying to sneak a lil homework in too, which should be my main priority not songs lol',\n","  'sentiment': 'neutral'},\n"," {'text': 'downloading songs while trying to sneak a lil homework in too, which should be my chief priority not songs lol',\n","  'sentiment': 'neutral'},\n"," {'text': 'songs while trying to sneak a lil homework in too, which should be my main not songs lol',\n","  'sentiment': 'neutral'},\n"," {'text': '@_Ra_Ra_ your not alone...i need coffee too.',\n","  'sentiment': 'neutral'},\n"," {'text': '@_Ra_Ra_ your non alone...i need coffee too.',\n","  'sentiment': 'neutral'},\n"," {'text': '@_Ra_Ra_ your not need coffee too.', 'sentiment': 'neutral'},\n"," {'text': ' Sounds like me', 'sentiment': 'neutral'},\n"," {'text': 'Sounds alike me', 'sentiment': 'neutral'},\n"," {'text': 'Sounds like me', 'sentiment': 'neutral'},\n"," {'text': 'Bad day  The day you realize what mess you`ve put me through will be one of the happiest days of my life...',\n","  'sentiment': 'neutral'},\n"," {'text': 'Bad daytime The day you realize what mess you`ve put me through will be one of the happiest days of my life...',\n","  'sentiment': 'neutral'},\n"," {'text': 'Bad day The day you realize mess you`ve put me through will be the days of my life...',\n","  'sentiment': 'neutral'},\n"," {'text': 'Walking to class. I hate not having a bike....especially mine.',\n","  'sentiment': 'negative'},\n"," {'text': 'Walking to class. I hate not having a bike....especially mine.',\n","  'sentiment': 'negative'},\n"," {'text': 'Walking to I hate having a mine.', 'sentiment': 'negative'},\n"," {'text': '_nesmith', 'sentiment': 'neutral'},\n"," {'text': '_nesmith', 'sentiment': 'neutral'},\n"," {'text': '_nesmith', 'sentiment': 'neutral'},\n"," {'text': 'failed inspection. Did you know you can pass wo/oven, but not wo/anti-tip bracket, which is only sold w/oven? This is worse than taxes.',\n","  'sentiment': 'negative'},\n"," {'text': 'failed inspection. Did you know you can pass wo/oven, but not wo/anti-tip bracket, which is only sold w/oven? This is regretful than taxes.',\n","  'sentiment': 'negative'},\n"," {'text': 'failed inspection. Did you can pass wo/oven, but wo/anti-tip bracket, is only sold This is worse than',\n","  'sentiment': 'negative'},\n"," {'text': 'JONAS BROTHERS - Live to party.                It`s rocking so hard     I love the song,',\n","  'sentiment': 'positive'},\n"," {'text': 'JONAS BROTHERS - Live to party. It`s rocking so hard I love the song,',\n","  'sentiment': 'positive'},\n"," {'text': 'JONAS BROTHERS - to party. It`s rocking so hard love the song,',\n","  'sentiment': 'positive'},\n"," {'text': 'happy mother`s day to all the mothers in the world.',\n","  'sentiment': 'positive'},\n"," {'text': 'happy mother`s day to all the mothers Hoosier_State the world.',\n","  'sentiment': 'positive'},\n"," {'text': 'happy mother`s day to all the mothers in the world.',\n","  'sentiment': 'positive'},\n"," {'text': '35mins through the 1hr 20mins Google Wave demo, that looks a lot of fun, would love to test it though.  http://bit.ly/WnMSc',\n","  'sentiment': 'positive'},\n"," {'text': '35mins through the 1hr 20mins Google Wave demo, that looks a lot of fun, would love to test information_technology though. http://bit.ly/WnMSc',\n","  'sentiment': 'positive'},\n"," {'text': '35mins the 1hr 20mins Google Wave that looks a lot of fun, would test it though.',\n","  'sentiment': 'positive'},\n"," {'text': 'Sleepy Tabz is heading to bed.  Fun night! Listened through the next episode of Joss`d!',\n","  'sentiment': 'positive'},\n"," {'text': 'Sleepy Tabz is heading to bed. Fun night! Listened through the next episode of Joss`d!',\n","  'sentiment': 'positive'},\n"," {'text': 'Sleepy Tabz is heading to bed. Fun night! Listened the next episode Joss`d!',\n","  'sentiment': 'positive'},\n"," {'text': 'The exception for a short dude: Larenz fineass Tate yum',\n","  'sentiment': 'neutral'},\n"," {'text': 'The exception for a short dude: Larenz fineass Tate yum',\n","  'sentiment': 'neutral'},\n"," {'text': 'exception for a short dude: Larenz fineass yum',\n","  'sentiment': 'neutral'},\n"," {'text': 'Screw the reviews, I thought Wolverine was awesome. But not enough Dominic Monaghan for my liking.',\n","  'sentiment': 'positive'},\n"," {'text': 'Screw the reviews, I thought Wolverine was awesome. But not enough Saint_Dominic Monaghan for my liking.',\n","  'sentiment': 'positive'},\n"," {'text': 'Screw the reviews, I thought Wolverine was awesome. But not enough Dominic Monaghan for my liking.',\n","  'sentiment': 'positive'},\n"," {'text': 'If you followed us recently, PLEASE dont be offended that we haven`t followed back. We hit our limit.   Hopefully we will be free soon.',\n","  'sentiment': 'positive'},\n"," {'text': 'If you followed us recently, PLEASE dont personify offended that we haven`t followed back. We hit our limit. Hopefully we will be free soon.',\n","  'sentiment': 'positive'},\n"," {'text': 'If you us recently, PLEASE dont be offended that we haven`t back. hit our limit. Hopefully be free soon.',\n","  'sentiment': 'positive'},\n"," {'text': ' Yes i work 6 to 3...', 'sentiment': 'neutral'},\n"," {'text': 'yes i work 6 to 3...', 'sentiment': 'neutral'},\n"," {'text': 'i work to 3...', 'sentiment': 'neutral'},\n"," {'text': ' Hmmm, maybe that`s what they meant. They eluded to something brand new but you know how the media is',\n","  'sentiment': 'neutral'},\n"," {'text': 'Hmmm, perchance that`s what they meant. They eluded to something brand new but you know how the media is',\n","  'sentiment': 'neutral'},\n"," {'text': 'Hmmm, what they eluded to something brand new but you know how the media is',\n","  'sentiment': 'neutral'},\n"," {'text': 'Done at the spa   now meeting vic for some late lunch!',\n","  'sentiment': 'neutral'},\n"," {'text': 'Done at the spa now meet vic for some late lunch!',\n","  'sentiment': 'neutral'},\n"," {'text': 'Done at the spa now meeting some late lunch!',\n","  'sentiment': 'neutral'},\n"," {'text': 'Happy monday  up and about going to tavares today. Hope everyone has a blessed day!',\n","  'sentiment': 'positive'},\n"," {'text': 'Happy monday up and about going to tavares today. Hope everyone has a blessed day!',\n","  'sentiment': 'positive'},\n"," {'text': 'monday up and going to tavares today. Hope has a day!',\n","  'sentiment': 'positive'},\n"," {'text': ' Always have wanted to go to Oz', 'sentiment': 'neutral'},\n"," {'text': 'Always have wanted to go to Oz', 'sentiment': 'neutral'},\n"," {'text': 'Always have to go to Oz', 'sentiment': 'neutral'},\n"," {'text': ' Thx', 'sentiment': 'neutral'},\n"," {'text': 'Thx', 'sentiment': 'neutral'},\n"," {'text': 'Thx', 'sentiment': 'neutral'},\n"," {'text': ' http://twitpic.com/4jaz5 - Cool... luv it',\n","  'sentiment': 'positive'},\n"," {'text': 'http://twitpic.com/4jaz5 - Cool... luv it',\n","  'sentiment': 'positive'},\n"," {'text': 'http://twitpic.com/4jaz5 it', 'sentiment': 'positive'},\n"," {'text': '  that`s why I need to be there...To represent the Blackberries',\n","  'sentiment': 'positive'},\n"," {'text': 'that`s why I need to be there...To represent the Blackberries',\n","  'sentiment': 'positive'},\n"," {'text': 'that`s why I need to be there...To represent the',\n","  'sentiment': 'positive'},\n"," {'text': 'Okay so I`m dedicating my 300th tweet to the fact that I`m going to the Apple store because there is a HUGE crack on the glass screen!',\n","  'sentiment': 'neutral'},\n"," {'text': 'Okay so I`m dedicating my 300th tweet to the fact that I`m going to the Apple store because there is a HUGE crack along the glass screen!',\n","  'sentiment': 'neutral'},\n"," {'text': 'Okay so I`m dedicating my 300th tweet to the fact that I`m going to store there is crack on glass screen!',\n","  'sentiment': 'neutral'},\n"," {'text': ' If only we could ever actually be allowed to stay here and do that',\n","  'sentiment': 'neutral'},\n"," {'text': 'If only we could ever actually be allowed to stay here and do that',\n","  'sentiment': 'neutral'},\n"," {'text': 'only we could ever actually be allowed to here and do that',\n","  'sentiment': 'neutral'},\n"," {'text': ' Let me know how that turns out!!', 'sentiment': 'neutral'},\n"," {'text': 'Let me know how that turns out!!', 'sentiment': 'neutral'},\n"," {'text': 'Let me know that', 'sentiment': 'neutral'},\n"," {'text': ' was that sass I detect?  As long as it isn`t back sass! Haha',\n","  'sentiment': 'neutral'},\n"," {'text': 'be that sass I detect? As long as it isn`t back sass! Haha',\n","  'sentiment': 'neutral'},\n"," {'text': 'was that sass I As long as it isn`t Haha', 'sentiment': 'neutral'},\n"," {'text': ' yeah I was thinking about that ,ahaha', 'sentiment': 'positive'},\n"," {'text': 'yeah I was thinking about that ,ahaha', 'sentiment': 'positive'},\n"," {'text': 'yeah I was thinking about that ,ahaha', 'sentiment': 'positive'},\n"," {'text': ' Sports Bar Shatranjanpoli Rest Ph 26498457 All Sports Bar Andheri W 26733333 Dont know whether that helps. Google ki jai ho',\n","  'sentiment': 'neutral'},\n"," {'text': 'Sports Bar Shatranjanpoli Rest Ph 26498457 All Sports Bar Andheri W 26733333 Dont know whether that helps. Google ki jai ho',\n","  'sentiment': 'neutral'},\n"," {'text': 'Bar Shatranjanpoli Rest Ph 26498457 All Sports Bar Andheri W 26733333 Dont whether that helps. ki ho',\n","  'sentiment': 'neutral'},\n"," {'text': 'I`m not sleeping at all until  accepts my appology',\n","  'sentiment': 'negative'},\n"," {'text': 'I`m not sleeping at all until accepts my appology',\n","  'sentiment': 'negative'},\n"," {'text': 'I`m not sleeping until accepts my appology',\n","  'sentiment': 'negative'},\n"," {'text': 'Wolverine Was BOSS! Seriously, And Will.I.Am Was In It, What The **** ??',\n","  'sentiment': 'negative'},\n"," {'text': 'Wolverine Was BOSS! Seriously, And Will.I.Am Was In It, What The **** ??',\n","  'sentiment': 'negative'},\n"," {'text': 'Wolverine Was BOSS! Seriously, Will.I.Am Was In What The ??',\n","  'sentiment': 'negative'},\n"," {'text': ' I live for pain, bring it on', 'sentiment': 'neutral'},\n"," {'text': 'I go for pain, bring it on', 'sentiment': 'neutral'},\n"," {'text': 'live for pain, bring it', 'sentiment': 'neutral'},\n"," {'text': 'okay, i`m out for a while  back later!', 'sentiment': 'neutral'},\n"," {'text': 'okay, i`m out for a while back later!', 'sentiment': 'neutral'},\n"," {'text': 'okay, i`m out for a while back later!', 'sentiment': 'neutral'},\n"," {'text': '  #powerblog What is this powerblog challenge you keep talking about?  I`m a newbie follower',\n","  'sentiment': 'neutral'},\n"," {'text': '#powerblog What is this powerblog challenge you keep talking about? I`m a newbie follower',\n","  'sentiment': 'neutral'},\n"," {'text': '#powerblog What is this challenge keep talking about? a newbie follower',\n","  'sentiment': 'neutral'},\n"," {'text': 'almost died. Laptop screen was set to 100% brightness after I reinstalled Windows Vista. Got a headache now  #insanedefaults',\n","  'sentiment': 'positive'},\n"," {'text': 'almost died. Laptop screen was set to 100% brightness after I reinstalled Windows Vista. Got a headache now #insanedefaults',\n","  'sentiment': 'positive'},\n"," {'text': 'almost died. Laptop screen was set to 100% after I Windows Vista. Got a headache now',\n","  'sentiment': 'positive'},\n"," {'text': 'Waiting for tish to get off. Got to drive my moms CRV to pick her up all my myself and duckie. First time',\n","  'sentiment': 'neutral'},\n"," {'text': 'Waiting for tish to get off. Got to drive my mum CRV to pick her up all my myself and duckie. First time',\n","  'sentiment': 'neutral'},\n"," {'text': 'Waiting to get off. Got to drive my moms CRV pick her up all myself and',\n","  'sentiment': 'neutral'},\n"," {'text': 'Trying to decide on a movie with the friends.. not going to well! lol :p  No bible study 2nite, which means ****-day cake  buy my own??',\n","  'sentiment': 'negative'},\n"," {'text': 'Trying to settle on a movie with the friends.. not going to well! lol :p No Holy_Scripture study 2nite, which means ****-day cake buy my own??',\n","  'sentiment': 'negative'},\n"," {'text': 'Trying decide on a movie with the friends.. not going well! lol :p No bible study 2nite, which means ****-day cake buy own??',\n","  'sentiment': 'negative'},\n"," {'text': 'going to shower because i don`t want to smell at school tomorrow',\n","  'sentiment': 'neutral'},\n"," {'text': 'going to shower because i don`t want to olfactory_property at school tomorrow',\n","  'sentiment': 'neutral'},\n"," {'text': 'going to shower because don`t want to smell at school tomorrow',\n","  'sentiment': 'neutral'},\n"," {'text': ' Sigh... you know I am...', 'sentiment': 'neutral'},\n"," {'text': 'Sigh... you know I am...', 'sentiment': 'neutral'},\n"," {'text': 'you know I', 'sentiment': 'neutral'},\n"," {'text': 'discovered cause of a bug in the new #NetPLAYER 4 build. Publishing bug fix now, hopefully new beta by tomorrow',\n","  'sentiment': 'positive'},\n"," {'text': 'discovered cause of a bug in the newly #NetPLAYER 4 build. Publishing bug limit now, hopefully new beta by tomorrow',\n","  'sentiment': 'positive'},\n"," {'text': 'discovered cause of a bug in new #NetPLAYER build. bug fix now, hopefully beta by tomorrow',\n","  'sentiment': 'positive'},\n"," {'text': 'Here are 4 FREE twitter tools will get you followers  http://short.to/511q http://jijr.com/hulz http://short.to/511r http://2ve.org/xPG0/',\n","  'sentiment': 'neutral'},\n"," {'text': 'Here are 4 FREE twitter tools leave get you followers http://short.to/511q http://jijr.com/hulz http://short.to/511r http://2ve.org/xPG0/',\n","  'sentiment': 'neutral'},\n"," {'text': '4 twitter tools will get you followers http://short.to/511q http://short.to/511r http://2ve.org/xPG0/',\n","  'sentiment': 'neutral'},\n"," {'text': 'just got home from work.... and is chugging down a big bottle of apple juice.',\n","  'sentiment': 'neutral'},\n"," {'text': 'just got home from work.... and is chugging down angstrom big bottle of apple juice.',\n","  'sentiment': 'neutral'},\n"," {'text': 'just got home from and is chugging down a big bottle of apple juice.',\n","  'sentiment': 'neutral'},\n"," {'text': ' Yes it does. Please dont` go. If you die I will cry.. which normally leads to small animals getting harmed',\n","  'sentiment': 'negative'},\n"," {'text': 'Yes it does. Please dont` go. If you die I will cry.. which normally leads to small animate_being getting harmed',\n","  'sentiment': 'negative'},\n"," {'text': 'Yes it dont` go. If you die will cry.. which normally leads to small animals harmed',\n","  'sentiment': 'negative'},\n"," {'text': 'writing report cards  soooo tired but what an amazing day. check it out on fb soon!',\n","  'sentiment': 'positive'},\n"," {'text': 'writing report cards soooo tired but what an amazing day. check it out on fb soon!',\n","  'sentiment': 'positive'},\n"," {'text': 'writing report soooo tired but what amazing day. check it out soon!',\n","  'sentiment': 'positive'},\n"," {'text': ' it was only once for my big brother...and I`m done now',\n","  'sentiment': 'neutral'},\n"," {'text': 'it was only once for my giving brother...and I`m done now',\n","  'sentiment': 'neutral'},\n"," {'text': 'it was only once for my big brother...and I`m done now',\n","  'sentiment': 'neutral'},\n"," {'text': 'good news: finally finished my #EASactive workout that has been paused for 6 hours. bad news: my resistance band is torn',\n","  'sentiment': 'neutral'},\n"," {'text': 'good news: finally finished my #EASactive workout that has personify paused for 6 hours. bad news: my resistance circle is torn',\n","  'sentiment': 'neutral'},\n"," {'text': 'news: finished my #EASactive workout has been paused for 6 hours. bad news: resistance band is',\n","  'sentiment': 'neutral'},\n"," {'text': 'Well good morning all, What a wonderful day in the neighborhood  Thanks for all those that are now following another 60 this morning',\n","  'sentiment': 'positive'},\n"," {'text': 'Well good morning all, What a wonderful day Indiana the neighborhood Thanks for all those that are now following another threescore this morning',\n","  'sentiment': 'positive'},\n"," {'text': 'good all, day the neighborhood Thanks for all those that are now another morning',\n","  'sentiment': 'positive'},\n"," {'text': 'FTSK and Mercy Mercedes were amazing tonight.. as always',\n","  'sentiment': 'positive'},\n"," {'text': 'FTSK and Mercy Mercedes were amazing tonight.. as always',\n","  'sentiment': 'positive'},\n"," {'text': 'FTSK and Mercy Mercedes were amazing as', 'sentiment': 'positive'},\n"," {'text': '  hope he is ok!', 'sentiment': 'positive'},\n"," {'text': 'hope he exist ok!', 'sentiment': 'positive'},\n"," {'text': 'hope he ok!', 'sentiment': 'positive'},\n"," {'text': 'can`t school just be done already? it hurts too much... seeing him every day',\n","  'sentiment': 'positive'},\n"," {'text': 'can`t school barely be done already? it hurts too much... seeing him every day',\n","  'sentiment': 'positive'},\n"," {'text': 'can`t school already? hurts much... seeing him every day',\n","  'sentiment': 'positive'},\n"," {'text': \"I waited, listening to wind blowing through the tumbleweed? Are none of you old enough to know what to do when someone says 'Crackerack'?\",\n","  'sentiment': 'neutral'},\n"," {'text': \"I waited, listening to wind bluster through the tumbleweed? Are none of you old enough to know what to do when someone says 'Crackerack'?\",\n","  'sentiment': 'neutral'},\n"," {'text': \"I waited, listening to through Are none of you old enough to know to do someone says 'Crackerack'?\",\n","  'sentiment': 'neutral'},\n"," {'text': ' Hell Yeah!', 'sentiment': 'neutral'},\n"," {'text': 'Hell Yeah!', 'sentiment': 'neutral'},\n"," {'text': 'Hell Yeah!', 'sentiment': 'neutral'},\n"," {'text': ' HIM shirt at dinner? Do you need to ask??  Does it actually have Ville on it?',\n","  'sentiment': 'neutral'},\n"," {'text': 'HIM shirt at dinner? Do you need to ask?? Does it actually have Ville on it?',\n","  'sentiment': 'neutral'},\n"," {'text': 'shirt at Do you need ask?? Does it actually have Ville on it?',\n","  'sentiment': 'neutral'},\n"," {'text': ' i know!!', 'sentiment': 'neutral'},\n"," {'text': 'i know!!', 'sentiment': 'neutral'},\n"," {'text': 'i know!!', 'sentiment': 'neutral'},\n"," {'text': ' huh what the ****? Smelly? Noooo. I love alex Vixon',\n","  'sentiment': 'neutral'},\n"," {'text': 'huh what the ****? Smelly? Noooo. I love alex Vixon',\n","  'sentiment': 'neutral'},\n"," {'text': 'huh the ****? Noooo. love alex Vixon', 'sentiment': 'neutral'},\n"," {'text': 'Went to a party last night. Dindin and I showed up in matching outfits ) GREAT MINDS THINK ALIKE ) Anyway, happy birthday, ate lara',\n","  'sentiment': 'positive'},\n"," {'text': 'Went to a company last night. Dindin and I showed up in matching outfits ) GREAT MINDS THINK ALIKE ) Anyway, happy birthday, ate lara',\n","  'sentiment': 'positive'},\n"," {'text': 'to a party last night. I showed up in matching outfits ) GREAT MINDS THINK ALIKE ) Anyway, happy birthday, ate lara',\n","  'sentiment': 'positive'},\n"," {'text': ' Happy b-day! Just woke up on this side of Earth, so wishes are bit late',\n","  'sentiment': 'positive'},\n"," {'text': 'Happy b-day! Just woke up on this side of Earth, so wishes are bit late',\n","  'sentiment': 'positive'},\n"," {'text': 'Happy b-day! woke up on this side of Earth, so wishes bit late',\n","  'sentiment': 'positive'},\n"," {'text': 'thank you for teaching me values and to be a better person each day  I LOVE SO MUCH, YOU`RE THE BEST MUM IN THE WORLD',\n","  'sentiment': 'positive'},\n"," {'text': 'thank you for teaching me values and to be a better person each day I LOVE SO MUCH, YOU`RE THE BEST MUM IN THE WORLD',\n","  'sentiment': 'positive'},\n"," {'text': 'thank for teaching me values and a better person each day I LOVE SO MUCH, WORLD',\n","  'sentiment': 'positive'},\n"," {'text': 'HAPPY MOTHERS DAY.!', 'sentiment': 'positive'},\n"," {'text': 'HAPPY father DAY.!', 'sentiment': 'positive'},\n"," {'text': 'HAPPY MOTHERS', 'sentiment': 'positive'},\n"," {'text': ' *laughs* I`m glad that you have self confidence - it`s a wonderful trait to have  I`ll applaud extra loud for it, okay?',\n","  'sentiment': 'positive'},\n"," {'text': '*laughs* I`m glad that you have self confidence - it`s a wonderful trait to have I`ll applaud extra loud for it, okay?',\n","  'sentiment': 'positive'},\n"," {'text': '*laughs* I`m glad that you have self - a wonderful trait to have I`ll applaud extra loud for it, okay?',\n","  'sentiment': 'positive'},\n"," {'text': '  Thanks', 'sentiment': 'positive'},\n"," {'text': 'give_thanks', 'sentiment': 'positive'},\n"," {'text': 'Thanks', 'sentiment': 'positive'},\n"," {'text': 'twittering after 2 days!', 'sentiment': 'neutral'},\n"," {'text': 'chitter after 2 days!', 'sentiment': 'neutral'},\n"," {'text': 'twittering after days!', 'sentiment': 'neutral'},\n"," {'text': 'Getting ready for week  Its too nice today to be stuck inside working!',\n","  'sentiment': 'positive'},\n"," {'text': 'Getting ready for week information_technology too nice today to be stuck inside working!',\n","  'sentiment': 'positive'},\n"," {'text': 'Getting ready for week too nice today to stuck inside working!',\n","  'sentiment': 'positive'},\n"," {'text': 'I am tres depressed', 'sentiment': 'negative'},\n"," {'text': 'I Master_of_Arts tres depressed', 'sentiment': 'negative'},\n"," {'text': 'I am tres depressed', 'sentiment': 'negative'},\n"," {'text': 'Felt like ****, behaved like my son; ate to compensate. Pigged out on home-roasted sugar almonds. Painful tum, threw up, still feel sick.',\n","  'sentiment': 'negative'},\n"," {'text': 'Felt like ****, behaved like my son; rust to compensate. Pigged out on home-roasted sugar almonds. Painful tum, threw up, still feel sick.',\n","  'sentiment': 'negative'},\n"," {'text': 'Felt ****, behaved son; ate to compensate. Pigged on home-roasted sugar almonds. Painful tum, threw up, still feel sick.',\n","  'sentiment': 'negative'},\n"," {'text': 'Happy Mothers Day people. i love my mom a lot still',\n","  'sentiment': 'positive'},\n"," {'text': 'Happy Mothers daylight people. i love my mom a lot still',\n","  'sentiment': 'positive'},\n"," {'text': 'Happy Mothers Day people. i my mom a lot still',\n","  'sentiment': 'positive'},\n"," {'text': ' I`m sorry to hear that.', 'sentiment': 'negative'},\n"," {'text': 'I`m sorry to try that.', 'sentiment': 'negative'},\n"," {'text': 'sorry to hear that.', 'sentiment': 'negative'},\n"," {'text': ' That`s awesome dude, yay for surprise celebrities!  I got to meet him a few years ago, he was soooo friendly.',\n","  'sentiment': 'positive'},\n"," {'text': 'That`s awesome dude, yay for surprise celebrities! 1 got to meet him a few years ago, he was soooo friendly.',\n","  'sentiment': 'positive'},\n"," {'text': 'That`s awesome yay for surprise celebrities! I got meet him years was soooo',\n","  'sentiment': 'positive'},\n"," {'text': ' it makes me happy to hear a girl talk, or tweet, about the nba. but... could you give my nuggets some love?!',\n","  'sentiment': 'positive'},\n"," {'text': 'it makes me happy to hear a fille talk, or tweet, about the nba. but... could you give my nuggets some love?!',\n","  'sentiment': 'positive'},\n"," {'text': 'it makes happy to a girl talk, or tweet, about the nba. but... could you give my some love?!',\n","  'sentiment': 'positive'},\n"," {'text': 'Is getting the hang of Twitter.', 'sentiment': 'neutral'},\n"," {'text': 'Is getting the hang of Twitter.', 'sentiment': 'neutral'},\n"," {'text': 'Is getting the hang of Twitter.', 'sentiment': 'neutral'},\n"," {'text': 'You know your neck is jacked up when you are forced to pay for parking bc you can`t turn you head to parallel park in the free spaces...',\n","  'sentiment': 'negative'},\n"," {'text': 'You know your neck is jacked up when you are pressure to pay for parking bc you can`t turn you head to parallel park Indiana the free spaces...',\n","  'sentiment': 'negative'},\n"," {'text': 'You know your is up when you are forced to pay for parking bc you can`t turn you head to park in the',\n","  'sentiment': 'negative'},\n"," {'text': 'I want it BACK NOW!: http://bit.ly/PP1WZ', 'sentiment': 'neutral'},\n"," {'text': 'I privation it BACK NOW!: http://bit.ly/PP1WZ',\n","  'sentiment': 'neutral'},\n"," {'text': 'I want BACK http://bit.ly/PP1WZ', 'sentiment': 'neutral'},\n"," {'text': 'Going to miss my roomie ... We will no longer be roomies starting tomorrow',\n","  'sentiment': 'negative'},\n"," {'text': 'Going to miss my roomie ... We will no longer exist roomies starting tomorrow',\n","  'sentiment': 'negative'},\n"," {'text': 'Going to miss my ... We no longer be starting tomorrow',\n","  'sentiment': 'negative'},\n"," {'text': 'bathing with two little angels, Keyla and Janice.',\n","  'sentiment': 'neutral'},\n"," {'text': 'washup with two little angels, Keyla and Janice.',\n","  'sentiment': 'neutral'},\n"," {'text': 'bathing two little angels, Keyla and Janice.',\n","  'sentiment': 'neutral'},\n"," {'text': ' Yep, finished, chocked full of spelling and grammatical errors, but I`m cleaning it up tomorrow and popping it up  hehe',\n","  'sentiment': 'negative'},\n"," {'text': 'Yep, finished, chocked full of spelling and grammatical errors, but I`m cleaning it up tomorrow and bug_out it up hehe',\n","  'sentiment': 'negative'},\n"," {'text': 'Yep, finished, chocked of spelling and grammatical errors, I`m cleaning it up tomorrow and popping it up hehe',\n","  'sentiment': 'negative'},\n"," {'text': ' HAHAHHA lol true that! i always remember my BD but i can never remember what date or even day it is',\n","  'sentiment': 'neutral'},\n"," {'text': 'HAHAHHA lol true that! i always remember my BD but i can never remember what date or even Clarence_Shepard_Day_Jr. it is',\n","  'sentiment': 'neutral'},\n"," {'text': 'HAHAHHA lol true i always remember my BD but can never remember what date or day it is',\n","  'sentiment': 'neutral'},\n"," {'text': 'Family is here,hanging with them', 'sentiment': 'neutral'},\n"," {'text': 'Family is here,hanging with them', 'sentiment': 'neutral'},\n"," {'text': 'Family here,hanging with them', 'sentiment': 'neutral'},\n"," {'text': 'Watching Ellen Love her!! then doing the dishes  and tanning ...it`s gorgeous out!',\n","  'sentiment': 'positive'},\n"," {'text': 'watching Ellen Love her!! then doing the dishes and tanning ...it`s gorgeous out!',\n","  'sentiment': 'positive'},\n"," {'text': 'Watching her!! then doing dishes tanning gorgeous out!',\n","  'sentiment': 'positive'},\n"," {'text': ' what`s goin on hun?  I`m worried about you',\n","  'sentiment': 'negative'},\n"," {'text': 'what`s goin on hun? I`m worried some you', 'sentiment': 'negative'},\n"," {'text': 'what`s goin on hun? I`m worried about you',\n","  'sentiment': 'negative'},\n"," {'text': ' Im not bannished... but I am at work till 6',\n","  'sentiment': 'negative'},\n"," {'text': 'Im not bannished... but I am at work till 6',\n","  'sentiment': 'negative'},\n"," {'text': 'Im not but I work till 6', 'sentiment': 'negative'},\n"," {'text': ' Morning! If I get to see it, I`ll let you know. Right now, I`m going to go see Wolverine.',\n","  'sentiment': 'neutral'},\n"," {'text': 'Morning! If I get to see it, I`ll let you know. Right now, I`m going to go see Wolverine.',\n","  'sentiment': 'neutral'},\n"," {'text': 'Morning! If get to see it, I`ll let you Right now, I`m going see Wolverine.',\n","  'sentiment': 'neutral'},\n"," {'text': ' red top tabloids, build em up, knock em down',\n","  'sentiment': 'neutral'},\n"," {'text': 'red top tabloids, build_up em up, knock em down',\n","  'sentiment': 'neutral'},\n"," {'text': 'red top em up, knock down', 'sentiment': 'neutral'},\n"," {'text': 'tonight in party w/ my girls (minus vita)',\n","  'sentiment': 'positive'},\n"," {'text': 'tonight in company w/ my girls (minus vita)',\n","  'sentiment': 'positive'},\n"," {'text': 'tonight in party w/ my (minus vita)', 'sentiment': 'positive'},\n"," {'text': '  why not now you made me sad I thought you`d be jumping for joy',\n","  'sentiment': 'neutral'},\n"," {'text': 'why not now you made me sad I thought you`d personify jumping for joy',\n","  'sentiment': 'neutral'},\n"," {'text': 'why not now you me I thought you`d be jumping',\n","  'sentiment': 'neutral'},\n"," {'text': ' Simple my a#@', 'sentiment': 'neutral'},\n"," {'text': 'Simple my a#@', 'sentiment': 'neutral'},\n"," {'text': 'Simple my a#@', 'sentiment': 'neutral'},\n"," {'text': 'The pics I just uploaded are the baby pics of my cats. Missy is now an adult and a pretty little kitty, but Batty is in kitten heaven now',\n","  'sentiment': 'neutral'},\n"," {'text': 'The pics I just uploaded are the baby pics of my cats. Missy is now AN adult and a pretty little kitty, but Batty is in kitten heaven now',\n","  'sentiment': 'neutral'},\n"," {'text': 'The pics just uploaded are the pics of my now an a little kitty, but Batty in kitten heaven now',\n","  'sentiment': 'neutral'},\n"," {'text': ' I saw the play of it here, it was amazing',\n","  'sentiment': 'positive'},\n"," {'text': 'I saw the play of IT here, it was amazing',\n","  'sentiment': 'positive'},\n"," {'text': 'I saw the of it here, it was amazing', 'sentiment': 'positive'},\n"," {'text': ' _ i am glad to break my twitter virginity with you two.',\n","  'sentiment': 'positive'},\n"," {'text': '_ i am glad to break my twitter virginity with you two.',\n","  'sentiment': 'positive'},\n"," {'text': 'i am glad to my twitter virginity you two.',\n","  'sentiment': 'positive'},\n"," {'text': 'Dinner with the fam... I have missed them',\n","  'sentiment': 'negative'},\n"," {'text': 'Dinner with the fam... single have missed them',\n","  'sentiment': 'negative'},\n"," {'text': 'Dinner with the fam... I have missed', 'sentiment': 'negative'},\n"," {'text': '_Live That`s what I want. More the better. Bound to be a few bad eggs though, but they will soon learn.',\n","  'sentiment': 'neutral'},\n"," {'text': '_Live That`s what I want. More the better. Bound to be a few bad eggs though, but they will soon learn.',\n","  'sentiment': 'neutral'},\n"," {'text': '_Live That`s what I want. More the better. Bound to be a eggs though, but will soon learn.',\n","  'sentiment': 'neutral'},\n"," {'text': 'Hell yeah Kellynn got a Twitter. Finally.', 'sentiment': 'neutral'},\n"," {'text': 'Hell yeah Kellynn sustain a Twitter. Finally.',\n","  'sentiment': 'neutral'},\n"," {'text': 'Hell yeah got a Twitter. Finally.', 'sentiment': 'neutral'},\n"," {'text': ' I know   It was worth a shot, though!', 'sentiment': 'positive'},\n"," {'text': 'I make_love It was worth a shot, though!', 'sentiment': 'positive'},\n"," {'text': 'I know It was worth a shot, though!', 'sentiment': 'positive'},\n"," {'text': 'Just opened a facebook account, I`m a little confused I don`t really get it. Twitter seems much better',\n","  'sentiment': 'positive'},\n"," {'text': 'Just opened a facebook account, I`m a niggling confused I don`t really get it. Twitter seems much better',\n","  'sentiment': 'positive'},\n"," {'text': 'Just opened a facebook I`m a little confused I don`t really it. Twitter seems much better',\n","  'sentiment': 'positive'},\n"," {'text': 'Ship. I`m stuck.', 'sentiment': 'negative'},\n"," {'text': 'Ship. I`m stuck.', 'sentiment': 'negative'},\n"," {'text': 'Ship. I`m', 'sentiment': 'negative'},\n"," {'text': 'DUSTBIN BABY ON AT 11.30 Cannot wait  x', 'sentiment': 'positive'},\n"," {'text': 'DUSTBIN BABY ON atomic_number_85 11.30 Cannot wait x',\n","  'sentiment': 'positive'},\n"," {'text': 'BABY ON Cannot wait x', 'sentiment': 'positive'},\n"," {'text': ' Not going to dwell on it. It happened, it`s passed. Just a shame as he was so supportive! Such is life!  x',\n","  'sentiment': 'negative'},\n"," {'text': 'Not going to dwell along it. It happened, it`s passed. Just a shame as he was so supportive! Such is life! x',\n","  'sentiment': 'negative'},\n"," {'text': 'Not going to dwell on happened, it`s passed. a shame as was so supportive! Such is life! x',\n","  'sentiment': 'negative'},\n"," {'text': 'It looks like the office TV DOES get MLB Network... and it looks like MLBN will NOT be televising the DET/BAL game today  #wieters',\n","  'sentiment': 'neutral'},\n"," {'text': 'It looks like the office telly DOES get MLB Network... and it looks like MLBN will NOT be televising the DET/BAL game today #wieters',\n","  'sentiment': 'neutral'},\n"," {'text': 'It looks like office TV DOES get MLB Network... and it like will NOT be televising the DET/BAL game today #wieters',\n","  'sentiment': 'neutral'},\n"," {'text': 'Home empty handed.  No comics found today.  I shall now indulge in my cupcakes from Magnolia Bakery.',\n","  'sentiment': 'neutral'},\n"," {'text': 'Home empty handed. No comics found today. I shall now indulge in my cupcakes from Magnolia Bakery.',\n","  'sentiment': 'neutral'},\n"," {'text': 'Home empty handed. comics found shall now indulge in my cupcakes from Magnolia',\n","  'sentiment': 'neutral'},\n"," {'text': 'Laying in bed til workkk... Oh the life. Definitely pinched a nerve.',\n","  'sentiment': 'negative'},\n"," {'text': 'repose in bed til workkk... Oh the life. Definitely pinched a nerve.',\n","  'sentiment': 'negative'},\n"," {'text': 'Laying in bed til workkk... Oh the life. pinched a',\n","  'sentiment': 'negative'},\n"," {'text': 'today is a busy day. exhausting!', 'sentiment': 'negative'},\n"," {'text': 'today is a busy day. exhausting!', 'sentiment': 'negative'},\n"," {'text': 'is a busy day. exhausting!', 'sentiment': 'negative'},\n"," {'text': ' I was going to go on Sunday, but now I`ve got too much going on that weekend',\n","  'sentiment': 'neutral'},\n"," {'text': 'I was going to go on Sunday, but now I`ve got too much going on that weekend',\n","  'sentiment': 'neutral'},\n"," {'text': 'I was going to go on Sunday, but now I`ve got too much on that weekend',\n","  'sentiment': 'neutral'},\n"," {'text': ' Sorry to hear ur flight got cancelled  that blows!!!',\n","  'sentiment': 'negative'},\n"," {'text': 'Sorry to hear ur flight got cancelled that blows!!!',\n","  'sentiment': 'negative'},\n"," {'text': 'Sorry to hear ur flight got cancelled blows!!!',\n","  'sentiment': 'negative'},\n"," {'text': 'ohh my tooth is hurts ohh  im sad it very hurts',\n","  'sentiment': 'negative'},\n"," {'text': 'ohh my tooth is hurts ohh im sad it very hurts',\n","  'sentiment': 'negative'},\n"," {'text': 'ohh my tooth is ohh sad it very hurts', 'sentiment': 'negative'},\n"," {'text': 'Before I get too distracted, I`d like to thank my new followers for taking the trouble to follow me! And to my others: feelin the love',\n","  'sentiment': 'positive'},\n"," {'text': 'Before I get too distracted, I`d the_likes_of to thank my new followers for taking the trouble to follow me! And to my others: feelin the love',\n","  'sentiment': 'positive'},\n"," {'text': 'I distracted, I`d like to thank my new for taking the trouble me! And others: feelin the love',\n","  'sentiment': 'positive'},\n"," {'text': ' u think u have bills Ha!Ii just finished paying mine that`s y I`m broke',\n","  'sentiment': 'negative'},\n"," {'text': 'u believe u have bills Ha!Ii just finished paying mine that`s y I`m broke',\n","  'sentiment': 'negative'},\n"," {'text': 'u u have bills just paying mine that`s I`m broke',\n","  'sentiment': 'negative'},\n"," {'text': ' Not sure it didn`t say it was 2 big. I jst saw the pics of u on ur last bday. You looked so pretty!! I miss you!!',\n","  'sentiment': 'neutral'},\n"," {'text': \"Not sure it didn`t say it was 2 big. I jst saw the pics of u on ur cobbler's_last bday. You looked so pretty!! I miss you!!\",\n","  'sentiment': 'neutral'},\n"," {'text': 'Not sure it say was big. I jst the pics of u on ur last You looked so pretty!! I miss',\n","  'sentiment': 'neutral'},\n"," {'text': 'sore throat. Planning the TET outing to Marwell though...good times',\n","  'sentiment': 'neutral'},\n"," {'text': 'sore throat. Planning the Tet outing to Marwell though...good times',\n","  'sentiment': 'neutral'},\n"," {'text': 'sore throat. Planning the TET outing times',\n","  'sentiment': 'neutral'},\n"," {'text': 'mcfly gig last nightt omg it was amazin didnt sit down through the whole thing  mcfly did you see me and ma best mate we were in tutus',\n","  'sentiment': 'positive'},\n"," {'text': 'mcfly lance last nightt omg it was amazin didnt sit down through the unit thing mcfly did you see me and ma best mate we were in tutus',\n","  'sentiment': 'positive'},\n"," {'text': 'mcfly gig last nightt omg it was amazin didnt sit down through the whole thing mcfly did you me and ma mate we were in',\n","  'sentiment': 'positive'},\n"," {'text': '2 days without sleep and now a migraine. I thought life postR01 was meant to be relaxing',\n","  'sentiment': 'negative'},\n"," {'text': '2 days without sleep and now a migraine. I thought life postR01 was entail to be relaxing',\n","  'sentiment': 'negative'},\n"," {'text': '2 days without sleep and a migraine. I thought postR01 was to be relaxing',\n","  'sentiment': 'negative'},\n"," {'text': ' There!', 'sentiment': 'neutral'},\n"," {'text': 'There!', 'sentiment': 'neutral'},\n"," {'text': 'There!', 'sentiment': 'neutral'},\n"," {'text': '?sucks!?..', 'sentiment': 'negative'},\n"," {'text': '?sucks!?..', 'sentiment': 'negative'},\n"," {'text': '?sucks!?..', 'sentiment': 'negative'},\n"," {'text': ' whens the sway sway winner announced?', 'sentiment': 'neutral'},\n"," {'text': 'whens the sway sway winner announced?', 'sentiment': 'neutral'},\n"," {'text': 'whens the sway sway winner announced?', 'sentiment': 'neutral'},\n"," {'text': ' K will check it out...', 'sentiment': 'neutral'},\n"," {'text': 'K testament check it out...', 'sentiment': 'neutral'},\n"," {'text': 'K will check it out...', 'sentiment': 'neutral'},\n"," {'text': ' doing pretty well, up and wide awake', 'sentiment': 'positive'},\n"," {'text': 'doing pretty well, up and wide awake', 'sentiment': 'positive'},\n"," {'text': 'doing well, up and wide awake', 'sentiment': 'positive'},\n"," {'text': 'i want to wake up early, and get a coffee tomorrow (today) !  it`s going to be a busyy day! but have to keep writing.. booo whoo!',\n","  'sentiment': 'neutral'},\n"," {'text': 'i need to wake up early, and get a coffee tomorrow (today) ! it`s going to represent a busyy day! but have to keep writing.. booo whoo!',\n","  'sentiment': 'neutral'},\n"," {'text': 'i up early, and a tomorrow (today) ! it`s a busyy day! but have to keep writing.. whoo!',\n","  'sentiment': 'neutral'},\n"," {'text': 'I Miss Daddy and Mommy', 'sentiment': 'negative'},\n"," ...]"]},"metadata":{},"execution_count":79}]},{"cell_type":"code","source":["from tensorflow.keras.utils import to_categorical\n","\n","y_train = to_categorical(y_train, num_classes=3)\n","y_test = to_categorical(y_test, num_classes=3)\n"],"metadata":{"id":"Frq6vbH-Ldo_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_augmented = pd.DataFrame(augmented_data)\n","\n","# Tokenize text data\n","tokenizer = Tokenizer()\n","tokenizer.fit_on_texts(df_augmented['text'])\n","X = tokenizer.texts_to_sequences(df_augmented['text'])\n","X = pad_sequences(X, maxlen=20)  # Assuming max sequence length is 20, adjust as needed\n","\n","# Convert sentiment labels to numerical format\n","label_mapping = {\"negative\": 0, \"neutral\": 1, \"positive\": 2}\n","y = df_augmented[\"sentiment\"].map(label_mapping)\n","\n","# Split data into train and test sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","# Define CNN model\n","from keras.models import Sequential\n","from keras.layers import Dense, Dropout\n","from keras.regularizers import l1_l2\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n"],"metadata":{"id":"7eRiAI2mGSzO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from keras.preprocessing.sequence import pad_sequences\n","\n","# Define your maximum sequence length\n","maxlen = 20  # This is an example value, adjust it according to your dataset\n","\n","# Assuming X is your list of tokenized sequences\n","X_padded = pad_sequences(X, maxlen=maxlen)\n"],"metadata":{"id":"fUEuOFEpOuaZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for idx, row in enumerate(data['text']):\n","      augmented_data.append({'text': row, 'sentiment': data['sentiment'][idx]})\n","      augmented_data.append({'text': synonym_replacement(row), 'sentiment': data['sentiment'][idx]})\n","      augmented_data.append({'text': random_deletion(row, p=0.2), 'sentiment': data['sentiment'][idx]})\n","\n","              # Convert augmented data to DataFrame\n","df_augmented = pd.DataFrame(augmented_data)\n","\n","              # Tokenize text data\n","0tokenizer = Tokenizer()\n","…model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])\n","\n","              # Define early stopping criteria\n","              early_stopping = EarlyStopping(monitor='val_accuracy', patience=3, restore_best_weights=True)\n","\n","                            # Train the model with early stopping\n","                            history = model.fit(X_train, y_train, epochs=10, batch_size=64, validation_data=(X_test, y_test), callbacks=[early_stopping])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Js2J11MoQaA4","executionInfo":{"status":"ok","timestamp":1709469457584,"user_tz":-330,"elapsed":993636,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"865c14dd-bc51-4fee-b0df-7ab2343ef3a5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","2061/2061 [==============================] - 98s 47ms/step - loss: 0.4702 - accuracy: 0.8086 - val_loss: 0.2242 - val_accuracy: 0.9202\n","Epoch 2/10\n","2061/2061 [==============================] - 94s 46ms/step - loss: 0.1104 - accuracy: 0.9637 - val_loss: 0.1425 - val_accuracy: 0.9521\n","Epoch 3/10\n","2061/2061 [==============================] - 97s 47ms/step - loss: 0.0511 - accuracy: 0.9833 - val_loss: 0.1428 - val_accuracy: 0.9551\n","Epoch 4/10\n","2061/2061 [==============================] - 99s 48ms/step - loss: 0.0357 - accuracy: 0.9882 - val_loss: 0.1554 - val_accuracy: 0.9565\n","Epoch 5/10\n","2061/2061 [==============================] - 93s 45ms/step - loss: 0.0288 - accuracy: 0.9906 - val_loss: 0.1693 - val_accuracy: 0.9578\n","Epoch 6/10\n","2061/2061 [==============================] - 95s 46ms/step - loss: 0.0242 - accuracy: 0.9921 - val_loss: 0.1640 - val_accuracy: 0.9568\n","Epoch 7/10\n","2061/2061 [==============================] - 94s 45ms/step - loss: 0.0203 - accuracy: 0.9934 - val_loss: 0.1791 - val_accuracy: 0.9570\n","Epoch 8/10\n","2061/2061 [==============================] - 96s 46ms/step - loss: 0.0187 - accuracy: 0.9937 - val_loss: 0.1803 - val_accuracy: 0.9590\n","Epoch 9/10\n","2061/2061 [==============================] - 98s 48ms/step - loss: 0.0168 - accuracy: 0.9944 - val_loss: 0.1730 - val_accuracy: 0.9605\n","Epoch 10/10\n","2061/2061 [==============================] - 96s 47ms/step - loss: 0.0150 - accuracy: 0.9949 - val_loss: 0.1886 - val_accuracy: 0.9586\n"]}]},{"cell_type":"code","source":["# Predict sentiment labels probabilities for the test set\n","y_pred_probs = model.predict(X_test)\n","\n","# Convert probabilities to class labels\n","y_pred = np.argmax(y_pred_probs, axis=1)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0CEPX71gVblN","executionInfo":{"status":"ok","timestamp":1709469719381,"user_tz":-330,"elapsed":6153,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"3d50c4c1-f3e2-4d53-a0fb-aa093d06de92"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1031/1031 [==============================] - 4s 4ms/step\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import classification_report, confusion_matrix\n","\n","# Evaluate the model on the test set\n","loss, accuracy = model.evaluate(X_test, y_test, verbose=0)\n","\n","print(\"Test Loss:\", loss)\n","print(\"Test Accuracy:\", accuracy)\n","\n","# Generate classification report\n","class_names = ['negative', 'neutral', 'positive']\n","print(\"\\nClassification Report:\")\n","print(classification_report(y_test, y_pred, target_names=class_names))\n","\n","# Generate confusion matrix\n","conf_matrix = confusion_matrix(y_test, y_pred)\n","print(\"\\nConfusion Matrix:\")\n","print(conf_matrix)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wX8CAVhLVjdD","executionInfo":{"status":"ok","timestamp":1709469751610,"user_tz":-330,"elapsed":5788,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"44158a82-9619-4fd6-c747-cdd7050b6f1d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Test Loss: 0.18855687975883484\n","Test Accuracy: 0.9586062431335449\n","\n","Classification Report:\n","              precision    recall  f1-score   support\n","\n","    negative       0.96      0.96      0.96      9203\n","     neutral       0.96      0.96      0.96     13422\n","    positive       0.96      0.97      0.96     10351\n","\n","    accuracy                           0.96     32976\n","   macro avg       0.96      0.96      0.96     32976\n","weighted avg       0.96      0.96      0.96     32976\n","\n","\n","Confusion Matrix:\n","[[ 8792   274   137]\n"," [  279 12819   324]\n"," [   98   253 10000]]\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import numpy\n","from sklearn import metrics\n","\n","actual = numpy.random.binomial(1,.9,size = 1000)\n","predicted = numpy.random.binomial(1,.9,size = 1000)\n","\n","confusion_matrix = metrics.confusion_matrix(y_test,y_pred)\n","\n","cm_display = metrics.ConfusionMatrixDisplay(confusion_matrix = confusion_matrix, display_labels = [True])\n","\n","cm_display.plot()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":804},"id":"QX_MMk1ocBzG","executionInfo":{"status":"error","timestamp":1709471555269,"user_tz":-330,"elapsed":977,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"0963c6eb-eee1-498f-ad9f-fa8c5c17dea8"},"execution_count":null,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"The number of FixedLocator locations (3), usually from a call to set_ticks, does not match the number of labels (1).","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-111-4d930fe5950d>\u001b[0m in \u001b[0;36m<cell line: 12>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0mcm_display\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmetrics\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mConfusionMatrixDisplay\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mconfusion_matrix\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mconfusion_matrix\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdisplay_labels\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 12\u001b[0;31m \u001b[0mcm_display\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     13\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_plot/confusion_matrix.py\u001b[0m in \u001b[0;36mplot\u001b[0;34m(self, include_values, cmap, xticks_rotation, values_format, ax, colorbar, im_kw, text_kw)\u001b[0m\n\u001b[1;32m    179\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mcolorbar\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    180\u001b[0m             \u001b[0mfig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolorbar\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mim_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 181\u001b[0;31m         ax.set(\n\u001b[0m\u001b[1;32m    182\u001b[0m             \u001b[0mxticks\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mn_classes\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    183\u001b[0m             \u001b[0myticks\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mn_classes\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/matplotlib/artist.py\u001b[0m in \u001b[0;36m<lambda>\u001b[0;34m(self, **kwargs)\u001b[0m\n\u001b[1;32m    145\u001b[0m             \u001b[0;32mreturn\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    146\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 147\u001b[0;31m         \u001b[0mcls\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mlambda\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mArtist\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    148\u001b[0m         \u001b[0mcls\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__name__\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"set\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    149\u001b[0m         \u001b[0mcls\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__qualname__\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34mf\"{cls.__qualname__}.set\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/matplotlib/artist.py\u001b[0m in \u001b[0;36mset\u001b[0;34m(self, **kwargs)\u001b[0m\n\u001b[1;32m   1229\u001b[0m         \u001b[0;31m# Artist._update_set_signature_and_docstring() at the end of the\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1230\u001b[0m         \u001b[0;31m# module.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1231\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_internal_update\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcbook\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnormalize_kwargs\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1232\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1233\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mcontextlib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcontextmanager\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/matplotlib/artist.py\u001b[0m in \u001b[0;36m_internal_update\u001b[0;34m(self, kwargs)\u001b[0m\n\u001b[1;32m   1221\u001b[0m         \u001b[0mThe\u001b[0m \u001b[0mlack\u001b[0m \u001b[0mof\u001b[0m \u001b[0mprenormalization\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0mto\u001b[0m \u001b[0mmaintain\u001b[0m \u001b[0mbackcompatibility\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1222\u001b[0m         \"\"\"\n\u001b[0;32m-> 1223\u001b[0;31m         return self._update_props(\n\u001b[0m\u001b[1;32m   1224\u001b[0m             \u001b[0mkwargs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"{cls.__name__}.set() got an unexpected keyword argument \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1225\u001b[0m             \"{prop_name!r}\")\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/matplotlib/artist.py\u001b[0m in \u001b[0;36m_update_props\u001b[0;34m(self, props, errfmt)\u001b[0m\n\u001b[1;32m   1197\u001b[0m                         raise AttributeError(\n\u001b[1;32m   1198\u001b[0m                             errfmt.format(cls=type(self), prop_name=k))\n\u001b[0;32m-> 1199\u001b[0;31m                     \u001b[0mret\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mv\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1200\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mret\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1201\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpchanged\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/matplotlib/axes/_base.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m     72\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     73\u001b[0m         \u001b[0;32mdef\u001b[0m \u001b[0mwrapper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 74\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mget_method\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     75\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     76\u001b[0m         \u001b[0mwrapper\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__module__\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mowner\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__module__\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/matplotlib/_api/deprecation.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    295\u001b[0m                 f\"for the old name will be dropped %(removal)s.\")\n\u001b[1;32m    296\u001b[0m             \u001b[0mkwargs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mnew\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mold\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 297\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    298\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    299\u001b[0m     \u001b[0;31m# wrapper() must keep the same documented signature as func(): if we\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/matplotlib/axis.py\u001b[0m in \u001b[0;36mset_ticklabels\u001b[0;34m(self, labels, minor, fontdict, **kwargs)\u001b[0m\n\u001b[1;32m   1967\u001b[0m             \u001b[0;31m# remove all tick labels, so only error for > 0 labels\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1968\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlocator\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlocs\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1969\u001b[0;31m                 raise ValueError(\n\u001b[0m\u001b[1;32m   1970\u001b[0m                     \u001b[0;34m\"The number of FixedLocator locations\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1971\u001b[0m                     \u001b[0;34mf\" ({len(locator.locs)}), usually from a call to\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: The number of FixedLocator locations (3), usually from a call to set_ticks, does not match the number of labels (1)."]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.metrics import confusion_matrix\n","\n","# Generate confusion matrix\n","conf_matrix = confusion_matrix(y_test, y_pred)\n","\n","# Plot confusion matrix heatmap\n","plt.figure(figsize=(8, 6))\n","\n","sns.heatmap(conf_matrix, annot=True, fmt='d',xticklabels=class_names, yticklabels=class_names)\n","plt.title('Confusion Matrix')\n","plt.xlabel('Predicted')\n","plt.ylabel('True')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"xXxOAKOAVmfu","executionInfo":{"status":"ok","timestamp":1709471745508,"user_tz":-330,"elapsed":1158,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"f2213d2c-1093-404d-bbbe-3861e37015f5"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","# Extract loss and validation loss from the training history\n","loss = history.history['loss']\n","val_loss = history.history['val_loss']\n","\n","# Plot loss and validation loss\n","plt.plot(loss, label='Training Loss')\n","plt.plot(val_loss, label='Validation Loss')\n","plt.title('Training and Validation Loss')\n","plt.xlabel('Epoch')\n","plt.ylabel('Loss')\n","plt.legend()\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"LQy0Mx8DV3OR","executionInfo":{"status":"ok","timestamp":1709469827734,"user_tz":-330,"elapsed":953,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"8c5b1030-5e0b-4857-a40b-aff8b7b47a4b"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","# Extract accuracy and validation accuracy from the training history\n","accuracy = history.history['accuracy']\n","val_accuracy = history.history['val_accuracy']\n","\n","# Plot accuracy and validation accuracy\n","plt.plot(accuracy, label='Training Accuracy')\n","plt.plot(val_accuracy, label='Validation Accuracy')\n","plt.title('Training and Validation Accuracy')\n","plt.xlabel('Epoch')\n","plt.ylabel('Accuracy')\n","plt.legend()\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"GSRlYdZiV-OF","executionInfo":{"status":"ok","timestamp":1709469856624,"user_tz":-330,"elapsed":1153,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"c9a4a71c-2ab5-488b-94eb-9d357289b3bc"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Save the trained model\n","model.save('sentiment_model.h5')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wKtG4Y9WWVv2","executionInfo":{"status":"ok","timestamp":1709469992275,"user_tz":-330,"elapsed":391,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"423150b2-b1d3-4241-fc02-01e648a0ac0d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py:3103: UserWarning: You are saving your model as an HDF5 file via `model.save()`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')`.\n","  saving_api.save_model(\n"]}]},{"cell_type":"code","source":["import numpy as np\n","\n","# Save the predictions to a text file\n","np.savetxt('sentiment_predictions.txt', y_pred)\n"],"metadata":{"id":"IEkEBfbEWhAA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Save the number of epochs\n","num_epochs=10\n","with open('epochs.txt', 'w') as f:\n","    f.write(str(num_epochs))\n"],"metadata":{"id":"v96O7lbfWnJh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from google.colab import files\n","\n","# Download the saved model\n","files.download('sentiment_model.h5')\n","\n","# Download the predictions file\n","files.download('sentiment_predictions.txt')\n","\n","# Download the epochs file\n","files.download('epochs.txt')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":17},"id":"joj5J1buWvXe","executionInfo":{"status":"ok","timestamp":1709470115338,"user_tz":-330,"elapsed":7,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"a257633b-8e76-49df-e9ce-78d1183d4a41"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_cd39e744-4e67-4892-b8b9-84452b83c506\", \"sentiment_model.h5\", 36312000)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_8df846bc-4e3c-4b61-9e80-25be7367d35a\", \"sentiment_predictions.txt\", 824400)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_c2f58b35-8891-4b35-bb4c-086648af4439\", \"epochs.txt\", 2)"]},"metadata":{}}]},{"cell_type":"markdown","source":["url"],"metadata":{"id":"oBGf11Xp9-kb"}},{"cell_type":"code","source":["import pandas as pd"],"metadata":{"id":"atxC_6aDA65U"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df3 = pd.read_csv('/content/malicious_phish.csv', encoding='latin1', error_bad_lines=False)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_8uAg0L0y1oA","executionInfo":{"status":"ok","timestamp":1709716422837,"user_tz":-330,"elapsed":648,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"777ad13f-1e7a-4afc-df11-9bb30ee15baa"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-2-64f471950e05>:1: FutureWarning: The error_bad_lines argument has been deprecated and will be removed in a future version. Use on_bad_lines in the future.\n","\n","\n","  df3 = pd.read_csv('/content/malicious_phish.csv', encoding='latin1', error_bad_lines=False)\n"]}]},{"cell_type":"code","source":["df3.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"PNJSVnHB1bJf","executionInfo":{"status":"ok","timestamp":1709716423660,"user_tz":-330,"elapsed":7,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"b3c28744-23ae-453f-e26b-4c9229466706"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                 url        type\n","0                                   br-icloud.com.br    phishing\n","1                mp3raid.com/music/krizz_kaliko.html      benign\n","2                    bopsecrets.org/rexroth/cr/1.htm      benign\n","3  http://www.garage-pirenne.be/index.php?option=...  defacement\n","4  http://adventure-nicaragua.net/index.php?optio...  defacement"],"text/html":["\n","  <div id=\"df-38de0102-5c02-4bef-b08b-04723d42a0ae\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>url</th>\n","      <th>type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>br-icloud.com.br</td>\n","      <td>phishing</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>mp3raid.com/music/krizz_kaliko.html</td>\n","      <td>benign</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>bopsecrets.org/rexroth/cr/1.htm</td>\n","      <td>benign</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>http://www.garage-pirenne.be/index.php?option=...</td>\n","      <td>defacement</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>http://adventure-nicaragua.net/index.php?optio...</td>\n","      <td>defacement</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-38de0102-5c02-4bef-b08b-04723d42a0ae')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-38de0102-5c02-4bef-b08b-04723d42a0ae button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-38de0102-5c02-4bef-b08b-04723d42a0ae');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d48ca963-c962-475e-acbb-c3d294908b24\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d48ca963-c962-475e-acbb-c3d294908b24')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d48ca963-c962-475e-acbb-c3d294908b24 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df3"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["print(df3['type'].value_counts())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g_BT5RMm101p","executionInfo":{"status":"ok","timestamp":1709716425982,"user_tz":-330,"elapsed":3,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"01d35a71-a534-4e65-e2f6-bd0e86fec4e4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["benign        177054\n","defacement     44764\n","phishing       14483\n","malware         5798\n","beni               1\n","Name: type, dtype: int64\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","# Assuming 'df' is your DataFrame\n","type_counts = df3['type'].value_counts()\n","\n","# Plotting\n","type_counts.plot(kind='bar')\n","plt.title('Distribution of URL Types')\n","plt.xlabel('Type')\n","plt.ylabel('Count')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":541},"id":"bpwHQXvE4zgE","executionInfo":{"status":"ok","timestamp":1709716427515,"user_tz":-330,"elapsed":878,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"33e08f25-f69b-419d-e285-13096e9b9a4c"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["\n","\n","# Drop rows with any missing values\n","df3_cleaned = df3.dropna()"],"metadata":{"id":"LBll3XTt6Mrx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(df3_cleaned.head())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_eMi5yWW6Tca","executionInfo":{"status":"ok","timestamp":1709716429285,"user_tz":-330,"elapsed":3,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"1c5198f9-9475-4f16-b730-aefc6d5fc608"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                                                 url        type\n","0                                   br-icloud.com.br    phishing\n","1                mp3raid.com/music/krizz_kaliko.html      benign\n","2                    bopsecrets.org/rexroth/cr/1.htm      benign\n","3  http://www.garage-pirenne.be/index.php?option=...  defacement\n","4  http://adventure-nicaragua.net/index.php?optio...  defacement\n"]}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","import pandas as pd\n","X = df3_cleaned.drop('type', axis=1)  # Features (all columns except 'type')\n","y = df3_cleaned['type']"],"metadata":{"id":"LIpi7NWo7Dyc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from urllib.parse import urlparse\n","import pandas as pd\n","\n","# Load your dataset\n","\n","\n","# Feature extraction functions\n","def length(url):\n","    return len(url)\n","\n","def https(url):\n","        return url.startswith('https')\n","\n","def count_subdomain(url):\n","            return url.count('.')\n","\n","            # Extract features\n","df3['length'] = df3['url'].apply(length)\n","df3['https'] = df3['url'].apply(https)\n","df3['subdomain_count'] = df3['url'].apply(count_subdomain)\n","\n","            # Show the first few rows of the updated DataFrame\n","print(df3.head())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jtDjoHjo74Aw","executionInfo":{"status":"ok","timestamp":1709716435534,"user_tz":-330,"elapsed":927,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"91bd9e28-ab2a-4ffe-fe5b-4b913f2a9344"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                                                 url        type  length  \\\n","0                                   br-icloud.com.br    phishing      16   \n","1                mp3raid.com/music/krizz_kaliko.html      benign      35   \n","2                    bopsecrets.org/rexroth/cr/1.htm      benign      31   \n","3  http://www.garage-pirenne.be/index.php?option=...  defacement      88   \n","4  http://adventure-nicaragua.net/index.php?optio...  defacement     235   \n","\n","   https  subdomain_count  \n","0  False                2  \n","1  False                2  \n","2  False                2  \n","3  False                3  \n","4  False                2  \n"]}]},{"cell_type":"code","source":["from sklearn.feature_selection import SelectKBest, chi2\n","\n","# Assuming your target variable 'type' is categorical\n","# Convert categorical variables to numeric for feature selection\n","# This is necessary for certain types of feature selection methods\n","df3['type_encoded'] = df3['type'].astype('category').cat.codes\n","\n","# Select features and target\n","X = df3[['length', 'https', 'subdomain_count']]  # Add other features here\n","y = df3['type_encoded']\n","\n","# Apply SelectKBest class to extract top k best features\n","bestfeatures = SelectKBest(score_func=chi2, k='all')\n","fit = bestfeatures.fit(X, y)\n","\n","# Get scores for each feature\n","dfscores = pd.DataFrame(fit.scores_)\n","dfcolumns = pd.DataFrame(X.columns)\n","\n","# Concat two dataframes for better visualization\n","featureScores = pd.concat([dfcolumns, dfscores], axis=1)\n","featureScores.columns = ['Feature', 'Score']\n","print(featureScores.nlargest(10, 'Score'))  # Print 10 best features\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5Xrvk8pD8ial","executionInfo":{"status":"ok","timestamp":1709716435534,"user_tz":-330,"elapsed":9,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"6757de1a-4ccb-4213-f677-568cb83f2850"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["           Feature          Score\n","0           length  775184.861992\n","2  subdomain_count   25734.749329\n","1            https     258.208736\n"]}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n"],"metadata":{"id":"ZAbAtJN62O0K"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder\n","\n","label_encoder = LabelEncoder()\n","y_train_encoded = label_encoder.fit_transform(y_train)\n","y_test_encoded = label_encoder.transform(y_test)\n"],"metadata":{"id":"E3IH84noWjAH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from tensorflow.keras.utils import to_categorical\n","\n","num_classes = len(label_encoder.classes_)  # Number of unique classes\n","y_train_categorical = to_categorical(y_train_encoded, num_classes=num_classes)\n","y_test_categorical = to_categorical(y_test_encoded, num_classes=num_classes)\n"],"metadata":{"id":"mwSmxL7eWmE8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(X_train.shape, y_train_categorical.shape)\n","print(X_test.shape, y_test_categorical.shape)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wIvm9iOMWoJz","executionInfo":{"status":"ok","timestamp":1709716450529,"user_tz":-330,"elapsed":11,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"0bec5d7f-da07-43f7-9281-99c2b4df46ec"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(193680, 3) (193680, 5)\n","(48420, 3) (48420, 5)\n"]}]},{"cell_type":"code","source":["# Ensure X_train is a NumPy array of integers\n","X_train = X_train.values.astype('int32') if isinstance(X_train, pd.DataFrame) or isinstance(X_train, pd.Series) else X_train.astype('int32')\n","\n","# Train the model\n","#model.fit(X_train_array, y_train_categorical, epochs=10, batch_size=128, validation_split=0.2)\n"],"metadata":{"id":"DXbSc69d7_6H"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","\n","# Convert data to float32\n","X_train_float = X_train.astype('float32')\n","X_test_float = X_test.astype('float32')\n","\n","# Reshape data for Conv1D: (samples, 1, features)\n","X_train_reshaped = np.expand_dims(X_train_float, axis=1)\n","X_test_reshaped = np.expand_dims(X_test_float, axis=1)\n","\n","# Define and compile your CNN model here\n","# ...\n","\n","# Train the model\n","\n","\n","# Evaluate the model\n","\n","\n"],"metadata":{"id":"fTnYtgWy_yJ0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df3.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":261},"id":"eL6hXA2pg5Cv","executionInfo":{"status":"ok","timestamp":1709716450530,"user_tz":-330,"elapsed":8,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"699fa678-1473-49d2-d645-e3a86c0757c1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                 url        type  length  \\\n","0                                   br-icloud.com.br    phishing      16   \n","1                mp3raid.com/music/krizz_kaliko.html      benign      35   \n","2                    bopsecrets.org/rexroth/cr/1.htm      benign      31   \n","3  http://www.garage-pirenne.be/index.php?option=...  defacement      88   \n","4  http://adventure-nicaragua.net/index.php?optio...  defacement     235   \n","\n","   https  subdomain_count  type_encoded  \n","0  False                2             4  \n","1  False                2             1  \n","2  False                2             1  \n","3  False                3             2  \n","4  False                2             2  "],"text/html":["\n","  <div id=\"df-f9046846-da90-448b-8806-95b303b6bb38\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>url</th>\n","      <th>type</th>\n","      <th>length</th>\n","      <th>https</th>\n","      <th>subdomain_count</th>\n","      <th>type_encoded</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>br-icloud.com.br</td>\n","      <td>phishing</td>\n","      <td>16</td>\n","      <td>False</td>\n","      <td>2</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>mp3raid.com/music/krizz_kaliko.html</td>\n","      <td>benign</td>\n","      <td>35</td>\n","      <td>False</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>bopsecrets.org/rexroth/cr/1.htm</td>\n","      <td>benign</td>\n","      <td>31</td>\n","      <td>False</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>http://www.garage-pirenne.be/index.php?option=...</td>\n","      <td>defacement</td>\n","      <td>88</td>\n","      <td>False</td>\n","      <td>3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>http://adventure-nicaragua.net/index.php?optio...</td>\n","      <td>defacement</td>\n","      <td>235</td>\n","      <td>False</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f9046846-da90-448b-8806-95b303b6bb38')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f9046846-da90-448b-8806-95b303b6bb38 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f9046846-da90-448b-8806-95b303b6bb38');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-364ba793-dd12-4e73-b2a5-f633af9e1137\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-364ba793-dd12-4e73-b2a5-f633af9e1137')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-364ba793-dd12-4e73-b2a5-f633af9e1137 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df3"}},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["X_train = X_train.astype('float32')  # Convert to float32\n","X_test = X_test.astype('float32')"],"metadata":{"id":"QjG_k_Pi0a66"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(\"X_train shape:\", X_train.shape)\n","print(\"X_test shape:\", X_test.shape)\n","print(\"y_train shape:\", y_train.shape)\n","print(\"y_test shape:\", y_test.shape)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vd24vUka6BC1","executionInfo":{"status":"ok","timestamp":1709716450530,"user_tz":-330,"elapsed":6,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"334479b0-6b07-428b-d507-50b505baa90d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["X_train shape: (193680, 3)\n","X_test shape: (48420, 3)\n","y_train shape: (193680,)\n","y_test shape: (48420,)\n"]}]},{"cell_type":"code","source":["# After tokenization and padding\n","print(\"Sample tokenized and padded URLs:\")\n","print(X_train[:5])  # Print first 5 sequences\n","\n","# If using one-hot encoding for labels\n","print(\"Sample labels:\")\n","print(y_train[:5])  # Print first 5 labels\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kMBGpE8P6MLg","executionInfo":{"status":"ok","timestamp":1709714233675,"user_tz":-330,"elapsed":1253,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"b450a09a-8c8f-4a5b-afb5-98cd6b266bd9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Sample tokenized and padded URLs:\n","[[32.  0.  2.]\n"," [93.  0.  2.]\n"," [55.  0.  1.]\n"," [34.  0.  2.]\n"," [25.  0.  2.]]\n","Sample labels:\n","2095      1\n","115761    1\n","68336     1\n","52580     1\n","98754     1\n","Name: type_encoded, dtype: int8\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","from keras.preprocessing.text import Tokenizer\n","from keras.preprocessing.sequence import pad_sequences\n","from keras.utils import to_categorical\n","from sklearn.preprocessing import LabelBinarizer\n","from keras.models import Sequential\n","from keras.layers import Embedding, Conv1D, MaxPooling1D, Flatten, Dense\n","\n","# Sample DataFrame\n","# df3 = pd.DataFrame({'url': ['http://example.com', 'http://malicious.com', ...], 'label': ['benign', 'phishing', ...]})\n","\n","# Tokenize URLs\n","tokenizer = Tokenizer(char_level=True)\n","tokenizer.fit_on_texts(df3['url'])\n","sequences = tokenizer.texts_to_sequences(df3['url'])\n","\n","# Pad sequences to have the same length\n","max_length = max(len(seq) for seq in sequences)\n","X = pad_sequences(sequences, maxlen=max_length, padding='post')\n","\n","# Convert labels to numerical format\n","lb = LabelBinarizer()\n","y = lb.fit_transform(df3['type'])\n","\n","# Define CNN model\n","model = Sequential()\n","model.add(Embedding(input_dim=len(tokenizer.word_index) + 1, output_dim=50, input_length=max_length))\n","model.add(Conv1D(filters=32, kernel_size=3, activation='relu'))\n","model.add(MaxPooling1D(pool_size=2))\n","model.add(Flatten())\n","model.add(Dense(10, activation='relu'))\n","model.add(Dense(y.shape[1], activation='softmax'))  # Output layer\n","\n","# Compile the model\n","model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])\n"],"metadata":{"id":"jUmEaBe7JCrN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","# Split the dataset into training and testing sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","# Train the model\n","history = model.fit(X_train, y_train, epochs=10, batch_size=32, validation_data=(X_test, y_test))\n","\n","# Evaluate the model\n","loss, accuracy = model.evaluate(X_test, y_test)\n","print(f\"Test Loss: {loss}\")\n","print(f\"Test Accuracy: {accuracy}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ln3si5SYJWKX","executionInfo":{"status":"ok","timestamp":1709723355477,"user_tz":-330,"elapsed":5149556,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"1b3bd9cd-f5c9-4346-87a3-28223b062969"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","6053/6053 [==============================] - 537s 89ms/step - loss: 0.0870 - accuracy: 0.9741 - val_loss: 0.0372 - val_accuracy: 0.9893\n","Epoch 2/10\n","6053/6053 [==============================] - 516s 85ms/step - loss: 0.0342 - accuracy: 0.9905 - val_loss: 0.0309 - val_accuracy: 0.9914\n","Epoch 3/10\n","6053/6053 [==============================] - 499s 82ms/step - loss: 0.0247 - accuracy: 0.9931 - val_loss: 0.0267 - val_accuracy: 0.9928\n","Epoch 4/10\n","6053/6053 [==============================] - 512s 85ms/step - loss: 0.0202 - accuracy: 0.9942 - val_loss: 0.0251 - val_accuracy: 0.9932\n","Epoch 5/10\n","6053/6053 [==============================] - 506s 84ms/step - loss: 0.0171 - accuracy: 0.9951 - val_loss: 0.0249 - val_accuracy: 0.9933\n","Epoch 6/10\n","6053/6053 [==============================] - 515s 85ms/step - loss: 0.0157 - accuracy: 0.9953 - val_loss: 0.0315 - val_accuracy: 0.9925\n","Epoch 7/10\n","6053/6053 [==============================] - 494s 82ms/step - loss: 0.0143 - accuracy: 0.9958 - val_loss: 0.0278 - val_accuracy: 0.9933\n","Epoch 8/10\n","6053/6053 [==============================] - 508s 84ms/step - loss: 0.0132 - accuracy: 0.9959 - val_loss: 0.0280 - val_accuracy: 0.9931\n","Epoch 9/10\n","6053/6053 [==============================] - 509s 84ms/step - loss: 0.0121 - accuracy: 0.9963 - val_loss: 0.0351 - val_accuracy: 0.9924\n","Epoch 10/10\n","6053/6053 [==============================] - 510s 84ms/step - loss: 0.0116 - accuracy: 0.9964 - val_loss: 0.0316 - val_accuracy: 0.9918\n","1514/1514 [==============================] - 33s 22ms/step - loss: 0.0316 - accuracy: 0.9918\n","Test Loss: 0.031623661518096924\n","Test Accuracy: 0.9918215870857239\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","from sklearn.metrics import confusion_matrix, classification_report\n","import numpy as np\n"],"metadata":{"id":"9uxZWVUOdDgG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["loss, accuracy = model.evaluate(X_test, y_test)\n","print(f\"Test Loss: {loss}\")\n","print(f\"Test Accuracy: {accuracy}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"A6YqLzLOdHtM","executionInfo":{"status":"ok","timestamp":1709723471148,"user_tz":-330,"elapsed":83630,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"68ed6f3a-ed96-4c2c-a62f-e99a05bdf65b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1514/1514 [==============================] - 41s 27ms/step - loss: 0.0316 - accuracy: 0.9918\n","Test Loss: 0.031623661518096924\n","Test Accuracy: 0.9918215870857239\n"]}]},{"cell_type":"code","source":["y_pred = model.predict(X_test)\n","y_pred_classes = np.argmax(y_pred, axis=1)\n","y_true = np.argmax(y_test, axis=1)\n","\n","# Confusion Matrix\n","cm = confusion_matrix(y_true, y_pred_classes)\n","print(cm)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n90Wt2kPdbjw","executionInfo":{"status":"ok","timestamp":1709723521227,"user_tz":-330,"elapsed":48066,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"2146f7b3-b0fd-45d3-9dae-ef0d425457f3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1514/1514 [==============================] - 44s 29ms/step\n","[[35149    11   109    22]\n"," [   11  9021     6    43]\n"," [    9     7  1018    91]\n"," [    7    41    39  2836]]\n"]}]},{"cell_type":"code","source":["cr = classification_report(y_true, y_pred_classes)\n","print(cr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iaj7P19zdgxq","executionInfo":{"status":"ok","timestamp":1709723521227,"user_tz":-330,"elapsed":6,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"7c40a9e6-f71c-4ca8-db12-ce0a91a54b05"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           1       1.00      1.00      1.00     35291\n","           2       0.99      0.99      0.99      9081\n","           3       0.87      0.90      0.89      1125\n","           4       0.95      0.97      0.96      2923\n","\n","    accuracy                           0.99     48420\n","   macro avg       0.95      0.97      0.96     48420\n","weighted avg       0.99      0.99      0.99     48420\n","\n"]}]},{"cell_type":"code","source":["plt.figure(figsize=(12, 5))\n","plt.subplot(1, 2, 1)\n","plt.plot(history.history['loss'], label='Training Loss')\n","plt.plot(history.history['val_loss'], label='Validation Loss')\n","plt.title('Training and Validation Loss')\n","plt.xlabel('Epochs')\n","plt.ylabel('Loss')\n","plt.legend()\n","\n","# Plotting Training and Validation Accuracy\n","plt.subplot(1, 2, 2)\n","plt.plot(history.history['accuracy'], label='Training Accuracy')\n","plt.plot(history.history['val_accuracy'], label='Validation Accuracy')\n","plt.title('Training and Validation Accuracy')\n","plt.xlabel('Epochs')\n","plt.ylabel('Accuracy')\n","plt.legend()\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":329},"id":"CfLG7CMndjlj","executionInfo":{"status":"ok","timestamp":1709723522516,"user_tz":-330,"elapsed":1292,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"057a8dbc-210e-4962-984e-2cecd13e26c2"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x500 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.figure(figsize=(12, 5))\n","plt.subplot(1, 2, 1)\n","plt.plot(history.history['loss'], label='Training Loss')\n","plt.plot(history.history['val_loss'], label='Validation Loss')\n","plt.title('Training and Validation Loss')\n","plt.xlabel('Epochs')\n","plt.ylabel('Loss')\n","plt.legend()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":504},"id":"HzWeImGke2EN","executionInfo":{"status":"ok","timestamp":1709723875044,"user_tz":-330,"elapsed":10,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"08d8b8f0-6583-42e8-f117-6e307972e4fc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x78406e36e890>"]},"metadata":{},"execution_count":32},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.subplot(1, 2, 2)\n","plt.plot(history.history['accuracy'], label='Training Accuracy')\n","plt.plot(history.history['val_accuracy'], label='Validation Accuracy')\n","plt.title('Training and Validation Accuracy')\n","plt.xlabel('Epochs')\n","plt.ylabel('Accuracy')\n","plt.legend()\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"53AtzJNye5C6","executionInfo":{"status":"ok","timestamp":1709723876025,"user_tz":-330,"elapsed":988,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"787ecd7c-dc71-471b-c922-5563d5a9f62b"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","# Assuming 'history' is the object returned by the model.fit() call\n","val_loss = history.history['val_loss']\n","\n","# Plotting Validation Loss\n","plt.figure(figsize=(8, 6))\n","plt.plot(val_loss, label='Validation Loss')\n","plt.title('Validation Loss Over Epochs')\n","plt.xlabel('Epochs')\n","plt.ylabel('Loss')\n","plt.legend()\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":534},"id":"fBn6KdA9d1SS","executionInfo":{"status":"ok","timestamp":1709723575198,"user_tz":-330,"elapsed":1226,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"63b1c491-6ec8-4865-fb2d-badbe7f157c3"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","# Assuming 'history' is the object returned by the model.fit() call\n","val_accuracy = history.history['val_accuracy']\n","\n","# Plotting Validation Accuracy\n","plt.figure(figsize=(8, 6))\n","plt.plot(val_accuracy, label='Validation Accuracy')\n","plt.title('Validation Accuracy Over Epochs')\n","plt.xlabel('Epochs')\n","plt.ylabel('Accuracy')\n","plt.legend()\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":528},"id":"MeERV_ljeAT0","executionInfo":{"status":"ok","timestamp":1709723621197,"user_tz":-330,"elapsed":1741,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"8a3d0527-4ad5-46cf-a9f1-c9c8dc6de014"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.metrics import confusion_matrix\n","import numpy as np\n","\n","# Predicting the classes on the test set\n","y_pred = model.predict(X_test)\n","y_pred_classes = np.argmax(y_pred, axis=1)\n","y_true = np.argmax(y_test, axis=1)\n","\n","# Generating the confusion matrix\n","cm = confusion_matrix(y_true, y_pred_classes)\n","\n","# Plotting the confusion matrix\n","plt.figure(figsize=(10, 8))\n","sns.heatmap(cm, annot=True, fmt='d',cmap='Purples')\n","plt.title('Confusion Matrix')\n","plt.ylabel('True label')\n","plt.xlabel('Predicted label')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"-J6UJaz0eGc6","executionInfo":{"status":"ok","timestamp":1709724024337,"user_tz":-330,"elapsed":87598,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"92233d63-c59a-4249-bfa2-61103dc91b60"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1514/1514 [==============================] - 57s 37ms/step\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x800 with 2 Axes>"],"image/png":"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Xn/9dY0cOVKtW7eWm5ubpk+fnuprAQCyDgoTAJmKp6enJOnSpUupiv/zzz/l5OQkX19fh/3e3t7Knz+//vzzT4f9pUuXvu0cBQoU0N9//32fGd+uXbt2ql+/vrp3765ixYqpffv2WrJkyb8WKbfyrFix4m3HKleurPPnzyshIcFh/z/vpUCBApKUpnt55pln5OHhocWLF2vBggWqU6fObV/LW1JSUjR+/Hg99NBDcnV1VeHChVWkSBHt3btXcXFxqb5miRIl0jTR/cMPP1TBggUVGRmpSZMmqWjRoql+LwAg66AwAZCpeHp6ysfHR/v370/T+/45+fxunJ2d77jfarXe9zVuzX+4JU+ePNq6dat++OEHderUSXv37lW7du305JNP3hb7X/yXe7nF1dVVrVu31ty5c7V8+fK7dkskafTo0QoNDVXDhg31xRdfaN26dVq/fr0eeeSRVHeGpJtfn7T49ddfde7cOUnSvn370vReAEDWQWECINNp0aKFjh07poiIiHvGlilTRikpKfr9998d9p89e1axsbG2FbbSQ4ECBRxWsLrln10ZSXJyclLTpk318ccf6+DBgxo1apQ2btyoTZs23fHct/I8cuTIbccOHz6swoULy93d/b/dwF106NBBv/76qy5dunTHBQNu+eqrr9SkSRN99tlnat++vZo1a6bAwMDbviapLRJTIyEhQV26dJGfn59ee+01jR07Vjt37ky38wMAMg8KEwCZzttvvy13d3d1795dZ8+eve34sWPHNHHiREk3hyJJum3lrI8//liS1Lx583TLq0KFCoqLi9PevXtt+6KiorR8+XKHuIsXL9723lsPGvznEsa3FC9eXP7+/po7d67DL/r79+/X999/b7vPB6FJkyZ67733NHnyZHl7e981ztnZ+bZuzNKlS3X69GmHfbcKqDsVcWk1cOBAnTx5UnPnztXHH3+ssmXLKjg4+K5fRwBA1sUDFgFkOhUqVNDChQvVrl07Va5c2eHJ79u3b9fSpUvVuXNnSVL16tUVHBysGTNmKDY2Vo0aNdKOHTs0d+5ctWrV6q5L0d6P9u3ba+DAgXr++ef15ptv6sqVK5o6daoefvhhh8nfI0eO1NatW9W8eXOVKVNG586d06effqqSJUvq8ccfv+v5x40bp6effloBAQHq1q2brl69qk8++UReXl4aPnx4ut3H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2GHyuxl0TAAAAAAYR8cEAAAAsEfDxAg6JgAAAACMozABAAAAYBxDuQAAAAA7TH43g44JAAAAAOPomAAAAAB2aJiYQccEAAAAgHEUJgAAAEAWtHXrVj377LPy8fGRxWLRihUrHI5brVYNHTpUxYsXV548eRQYGKjff//dIebixYvq2LGjPD09lT9/fnXr1k2XL192iNm7d68aNGggNzc3lSpVSmPHjr0tl6VLl6pSpUpyc3NT1apV9d1336X5fihMAAAAADsWi8XYlhYJCQmqXr26pkyZcsfjY8eO1aRJkzRt2jT98ssvcnd3V1BQkK5du2aL6dixow4cOKD169dr1apV2rp1q1577TXb8fj4eDVr1kxlypTR7t27NW7cOA0fPlwzZsywxWzfvl0vvfSSunXrpl9//VWtWrVSq1attH///rR93a1WqzVN78gCkm+kmE4BANJVcjLf15AxnJ35myUyhnOuzPtZ27sv2ti1q1X1vq/3WSwWLV++XK1atZJ0s1vi4+Ojt956S/3795ckxcXFqVixYpozZ47at2+vQ4cOyc/PTzt37lTt2rUlSWvXrtUzzzyjU6dOycfHR1OnTtW7776r6Ohoubi4SJIGDRqkFStW6PDhw5Kkdu3aKSEhQatWrbLlU69ePfn7+2vatGmpvofM+4kAAAAADLAY3BITExUfH++wJSYmpvkejh8/rujoaAUGBtr2eXl5qW7duoqIiJAkRUREKH/+/LaiRJICAwPl5OSkX375xRbTsGFDW1EiSUFBQTpy5Ij+/vtvW4z9dW7F3LpOalGYAAAAAJlEeHi4vLy8HLbw8PA0nyc6+mbXp1ixYg77ixUrZjsWHR2tokWLOhzPlSuXChYs6BBzp3PYX+NuMbeOpxbLBQMAAAB2TD5gMSwsTKGhoQ77XF1dDWWTsShMAAAAgEzC1dU1XQoRb++bc1XOnj2r4sWL2/afPXtW/v7+tphz5845vO/GjRu6ePGi7f3e3t46e/asQ8yt1/eKuXU8tRjKBQAAAGQz5cqVk7e3tzZs2GDbFx8fr19++UUBAQGSpICAAMXGxmr37t22mI0bNyolJUV169a1xWzdulXXr1+3xaxfv14VK1ZUgQIFbDH217kVc+s6qUVhAgAAANixWMxtaXH58mVFRkYqMjJS0s0J75GRkTp58qQsFov69u2r999/X99++632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PGl+z+XLlyVJq1evdigIpJvzZtJLRESEOnbsqBEjRigoKEheXl5atGiRPvroozTnOnPmzNsKJWdn53TLFQCQfVGYAMj23N3d5evrm+r4mjVravHixSpatOhtXYNbihcvrl9++UUNGzaUdLMzsHv3btWsWfOO8VWrVlVKSoq2bNmiwMDA247f6tgkJyfb9vn5+cnV1VUnT568a6elcuXKton8t/z888/3vkk727dvV5kyZfTuu+/a9v3555+3xZ08eVJnzpyRj4+P7TpOTk6qWLGiihUrJh8fH/3xxx/q2LFjmq4PAIDE5HcAuE3Hjh1VuHBhtWzZUj/++KOOHz+uzZs3680339SpU6ckSX369NGYMWO0YsUKHT58WG+88ca/PoOkbNmyCg4OVteuXbVixQrbOZcsWSJJKlOmjCwWi1atWqWYmBhdvnxZHh4e6t+/v/r166e5c+fq2LFj2rNnjz755BPbhPIePXro999/14ABA3TkyBEtXLhQc+bMSdP9PvTQQzp58qQWLVqkY8eOadKkSXecyO/m5qbg4GD99ttv+vHHH/Xmm2+qbdu28vb2liSNGDFC4eHhmjRpkv73v/9p3759mj17tj7++OM05QMAyJkoTADgH/LmzautW7eqdOnSat26tSpXrqxu3brp2rVrtg7KW2+9pU6dOik4OFgBAQHy8PDQ888//6/nnTp1ql544QW98cYbqlSpkl599VUlJCRIkkqUKKERI0Zo0KBBKlasmHr16iVJeu+99zRkyBCFh4ercuXKeuqpp7R69WqVK1dO0s15H8uWLdOKFStUvXp1TZs2TaNHj07T/T733HPq16+fevXqJX9/f23fvl1Dhgy5Lc7X11etW7fWM888o2bNmqlatWoOywF3795ds2bN0uzZs1W1alU1atRIc+bMseUKAMC/sVjvNlMTAAAAADIIHRMAAAAAxlGYAAAAADCOwgQAAACAcRQmAAAAAIyjMAEAAABgHIUJAAAAAOMoTAAAAAAYR2ECAAAAwDgKEwAAAADGUZgAAAAAMI7CBAAAAIBx/w9ujmj9LGEdGAAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.figure(figsize=(10, 8))\n","sns.heatmap(cm, annot=True, fmt='d',cmap='Blues')\n","plt.title('Confusion Matrix')\n","plt.ylabel('True label')\n","plt.xlabel('Predicted label')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":599},"id":"GQJ_N07bftYR","executionInfo":{"status":"ok","timestamp":1709724089209,"user_tz":-330,"elapsed":1098,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"6838c8a6-0dd2-4695-b4e4-69dc9a9f11ed"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x800 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import pandas as pd\n","\n","# After training the model\n","# ... model.fit ...\n","\n","# Save the model\n","model.save('malicious_attachments_model.h5')  # Saves the model as an HDF5 file\n","\n","# Generate predictions\n","predictions = model.predict(X_test)\n","\n","# Save predictions\n","np.savetxt('malicious_attachments_model.csv', predictions, delimiter=',')  # as CSV\n","np.save('malicious_attachments_model.npy', predictions)  # as Numpy array\n","\n","# Save training history\n","history_df = pd.DataFrame(history.history)\n","history_df.to_csv('malicious_attachments_model_training_history.csv', index=False)  # as CSV\n","history_df.to_json('malicious_attachments_model_training_history.json')  # as JSON\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OHTHvCbigtFM","executionInfo":{"status":"ok","timestamp":1709724418515,"user_tz":-330,"elapsed":42386,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"a2f315dd-fd03-4fb3-d1c9-cb4af9385159"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py:3103: UserWarning: You are saving your model as an HDF5 file via `model.save()`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')`.\n","  saving_api.save_model(\n"]},{"output_type":"stream","name":"stdout","text":["1514/1514 [==============================] - 34s 22ms/step\n"]}]},{"cell_type":"code","source":["from google.colab import files\n","files.download('malicious_attachments_model.csv')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":17},"id":"UkvZ89Vfhg_n","executionInfo":{"status":"ok","timestamp":1709724701789,"user_tz":-330,"elapsed":5,"user":{"displayName":"shaik nasreen","userId":"08175989822814149989"}},"outputId":"22332fb4-9e32-4ab1-c443-4b6a1e72014b"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_661b3e00-d605-4bd6-9676-fd78a0b04551\", \"malicious_attachments_model.csv\", 6052500)"]},"metadata":{}}]}]}